☰
logo [../../static.files/rust-logo-151179464ae7ed46.svg]
../../fedimint_client_legacy/index.html




logo [../../static.files/rust-logo-151179464ae7ed46.svg]
../../fedimint_client_legacy/index.html


MINTFEDERATIONAPI


REQUIRED METHODS

 * download_ecash_backup
 * upload_ecash_backup


IMPLEMENTORS


IN FEDIMINT_CLIENT_LEGACY::API [index.html]

? [../../help.html]
Change settings [../../static.files/wheel-5ec35bf9ca753509.svg]../../settings.html


TRAIT FEDIMINT_CLIENT_LEGACY [../index.html]::API [index.html]::MINTFEDERATIONAPICopy item path
[../../static.files/clipboard-7571035ce49a181d.svg]

source [../../src/fedimint_client_legacy/api.rs.html#90-99] · [−]

pub trait MintFederationApi {
    fn upload_ecash_backup<'life0, 'life1, 'async_trait>(
        &'life0 self,
        request: &'life1 SignedBackupRequest
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = FederationResult<()https://doc.rust-lang.org/1.67.0/std/primitive.unit.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait,
        'life1: 'async_trait;
    fn download_ecash_backup<'life0, 'life1, 'async_trait>(
        &'life0 self,
        id: &'life1 XOnlyPublicKey
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = FederationResult<Vechttps://doc.rust-lang.org/1.67.0/alloc/vec/struct.Vec.html<ECashUserBackupSnapshot>>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait,
        'life1: 'async_trait;
}


REQUIRED METHODS§

source [../../src/fedimint_client_legacy/api.rs.html#91-94]

FN UPLOAD_ECASH_BACKUP<'LIFE0, 'LIFE1, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    REQUEST: &'LIFE1 SIGNEDBACKUPREQUEST
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = FEDERATIONRESULT<()
[https://doc.rust-lang.org/1.67.0/std/primitive.unit.html]>> + SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html]
+ 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,
    'LIFE1: 'ASYNC_TRAIT,

source [../../src/fedimint_client_legacy/api.rs.html#95-98]

FN DOWNLOAD_ECASH_BACKUP<'LIFE0, 'LIFE1, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    ID: &'LIFE1 XONLYPUBLICKEY
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = FEDERATIONRESULT<VEC
[https://doc.rust-lang.org/1.67.0/alloc/vec/struct.Vec.html]<ECASHUSERBACKUPSNAPSHOT>>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,
    'LIFE1: 'ASYNC_TRAIT,


IMPLEMENTORS§

source [../../src/fedimint_client_legacy/api.rs.html#102-136]§


IMPL<T> MINTFEDERATIONAPI [trait.MintFederationApi.html] FOR TWHERE
    T: IFEDERATIONAPI + MAYBESEND + MAYBESYNC + 'STATIC + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

