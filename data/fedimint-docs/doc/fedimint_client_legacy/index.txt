☰
logo [../static.files/rust-logo-151179464ae7ed46.svg]
../fedimint_client_legacy/index.html




logo [../static.files/rust-logo-151179464ae7ed46.svg]
../fedimint_client_legacy/index.html


CRATE FEDIMINT_CLIENT_LEGACY

 * Version 0.1.0
 * All Items [all.html]

 * Modules
 * Structs
 * Enums
 * Constants
 * Functions
 * Type Definitions

? [../help.html]
Change settings [../static.files/wheel-5ec35bf9ca753509.svg]../settings.html


CRATE FEDIMINT_CLIENT_LEGACYCopy item path [../static.files/clipboard-7571035ce49a181d.svg]

source [../src/fedimint_client_legacy/lib.rs.html#1-1732] · [−]


MODULES

api [api/index.html]
db [db/index.html]
ln [ln/index.html]
mint [mint/index.html]
modules [modules/index.html]
outcome [outcome/index.html]
serde_keypair [serde_keypair/index.html]
transaction [transaction/index.html]
utils [utils/index.html]
wallet [wallet/index.html]


STRUCTS

Client [struct.Client.html]
ClientSecret [struct.ClientSecret.html]
ConcurrencyLock [struct.ConcurrencyLock.html]
Use Client::concurrency_lock [struct.Client.html#method.concurrency_lock] to obtain
GatewayClientConfig [struct.GatewayClientConfig.html]
PaymentParameters [struct.PaymentParameters.html]
UserClientConfig [struct.UserClientConfig.html]


ENUMS

ClientError [enum.ClientError.html]
ConfigVerifyError [enum.ConfigVerifyError.html]


CONSTANTS

MINT_SECRET_CHILD_ID [constant.MINT_SECRET_CHILD_ID.html]
Mint module’s secret key derivation child id


FUNCTIONS

module_decode_stubs [fn.module_decode_stubs.html]
Builds a fake module registry which is only usable for decoding messages since the client isn’t modularized yet but we need the
decoding functionality.


TYPE DEFINITIONS

GatewayClient [type.GatewayClient.html]
Result [type.Result.html]
UserClient [type.UserClient.html]
