☰
logo [../static.files/rust-logo-151179464ae7ed46.svg]
../recoverytool/index.html




logo [../static.files/rust-logo-151179464ae7ed46.svg]
../recoverytool/index.html


KEY


VARIANTS

 * Private
 * Public


METHODS

 * to_compressed_public_key


TRAIT IMPLEMENTATIONS

 * Clone
 * Copy
 * Debug
 * Display
 * Eq
 * Hash
 * MiniscriptKey
 * Ord
 * PartialEq<Key>
 * PartialOrd<Key>
 * StructuralEq
 * ToPublicKey
 * Translator<CompressedPublicKey, Key, ()>


AUTO TRAIT IMPLEMENTATIONS

 * RefUnwindSafe
 * Send
 * Sync
 * Unpin
 * UnwindSafe


BLANKET IMPLEMENTATIONS

 * Any
 * Borrow<T>
 * BorrowMut<T>
 * CallHasher
 * Contribution
 * Conv
 * Equivalent<K>
 * FmtForward
 * From<T>
 * FromRef<T>
 * FutureExt
 * Instrument
 * Into<U>
 * IntoRequest<T>
 * MaybeSend
 * MaybeSend
 * MaybeSync
 * Message
 * NodeIdT
 * Pipe
 * Pointable
 * Same<T>
 * Tap
 * ToOwned
 * ToString
 * TryConv
 * TryFrom<U>
 * TryInto<U>
 * VZip<V>
 * WithSubscriber


IN RECOVERYTOOL [index.html]

? [../help.html]
Change settings [../static.files/wheel-5ec35bf9ca753509.svg]../settings.html


ENUM RECOVERYTOOL [index.html]::KEYCopy item path [../static.files/clipboard-7571035ce49a181d.svg]

source [../src/recoverytool/main.rs.html#312-315] · [−]

pub(crate) enum Key {
    Public(CompressedPublicKey../fedimint_wallet_common/keys/struct.CompressedPublicKey.html),
    Private(PrivateKey),
}

Expand description

MiniscriptKey that is either a WIF-encoded private key or a compressed, hex-encoded public key


VARIANTS§

§


PUBLIC(COMPRESSEDPUBLICKEY [../fedimint_wallet_common/keys/struct.CompressedPublicKey.html])

§


PRIVATE(PRIVATEKEY)


IMPLEMENTATIONS§

source [../src/recoverytool/main.rs.html#344-353]§


IMPL KEY [enum.Key.html]

source [../src/recoverytool/main.rs.html#345-352]

PUB(CRATE) FN TO_COMPRESSED_PUBLIC_KEY(SELF) -> COMPRESSEDPUBLICKEY
[../fedimint_wallet_common/keys/struct.CompressedPublicKey.html]


TRAIT IMPLEMENTATIONS§

source [../src/recoverytool/main.rs.html#311]§


IMPL CLONE [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html] FOR KEY [enum.Key.html]

source [../src/recoverytool/main.rs.html#311]§

FN CLONE [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html#tymethod.clone](&SELF) -> KEY [enum.Key.html]

Returns a copy of the value. Read more [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html#tymethod.clone]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/clone.rs.html#132-134]§

FN CLONE_FROM [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html#method.clone_from](&MUT SELF, SOURCE: &
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)

Performs copy-assignment from source. Read more [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html#method.clone_from]
source [../src/recoverytool/main.rs.html#311]§


IMPL DEBUG [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Debug.html] FOR KEY [enum.Key.html]

source [../src/recoverytool/main.rs.html#311]§

FN FMT [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Debug.html#tymethod.fmt](&SELF, F: &MUT FORMATTER
[https://doc.rust-lang.org/1.67.0/core/fmt/struct.Formatter.html]<'_>) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/fmt/type.Result.html]

Formats the value using the given formatter. Read more [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Debug.html#tymethod.fmt]
source [../src/recoverytool/main.rs.html#355-362]§


IMPL DISPLAY [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Display.html] FOR KEY [enum.Key.html]

source [../src/recoverytool/main.rs.html#356-361]§

FN FMT [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Display.html#tymethod.fmt](&SELF, F: &MUT FORMATTER
[https://doc.rust-lang.org/1.67.0/core/fmt/struct.Formatter.html]<'_>) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/fmt/type.Result.html]

Formats the value using the given formatter. Read more [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Display.html#tymethod.fmt]
source [../src/recoverytool/main.rs.html#338-342]§


IMPL HASH [https://doc.rust-lang.org/1.67.0/core/hash/trait.Hash.html] FOR KEY [enum.Key.html]

source [../src/recoverytool/main.rs.html#339-341]§

FN HASH [https://doc.rust-lang.org/1.67.0/core/hash/trait.Hash.html#tymethod.hash]<H: HASHER
[https://doc.rust-lang.org/1.67.0/core/hash/trait.Hasher.html]>(&SELF, STATE: &MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]H)

Feeds this value into the given Hasher [https://doc.rust-lang.org/1.67.0/core/hash/trait.Hasher.html]. Read more
[https://doc.rust-lang.org/1.67.0/core/hash/trait.Hash.html#tymethod.hash]
1.3.0 · source [https://doc.rust-lang.org/1.67.0/src/core/hash/mod.rs.html#239-241]§

FN HASH_SLICE [https://doc.rust-lang.org/1.67.0/core/hash/trait.Hash.html#method.hash_slice]<H>(DATA: &[SELF]
[https://doc.rust-lang.org/1.67.0/std/primitive.slice.html], STATE: &MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]H)WHERE
    H: HASHER [https://doc.rust-lang.org/1.67.0/core/hash/trait.Hasher.html],
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Feeds a slice of this type into the given Hasher [https://doc.rust-lang.org/1.67.0/core/hash/trait.Hasher.html]. Read more
[https://doc.rust-lang.org/1.67.0/core/hash/trait.Hash.html#method.hash_slice]
source [../src/recoverytool/main.rs.html#364-378]§


IMPL MINISCRIPTKEY FOR KEY [enum.Key.html]

source [../src/recoverytool/main.rs.html#365-367]§

FN IS_UNCOMPRESSED(&SELF) -> BOOL [https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]

Returns true if the pubkey is uncompressed. Defaults to false.
§

TYPE RAWPKHASH = KEY [enum.Key.html]

The associated PublicKey Hash for this [MiniscriptKey], used in the raw_pkh fragment This fragment is only internally used for
representing partial descriptors when parsing from script The library does not support creating partial descriptors yet. Read more
§

TYPE SHA256 = HASH

The associated [sha256::Hash] for this [MiniscriptKey], used in the hash256 fragment. Read more
§

TYPE HASH256 = HASH

The associated [hash256::Hash] for this [MiniscriptKey], used in the hash256 fragment. Read more
§

TYPE RIPEMD160 = HASH

The associated [ripedmd160::Hash] for this [MiniscriptKey] type. used in the ripemd160 fragment Read more
§

TYPE HASH160 = HASH

The associated [hash160::Hash] for this [MiniscriptKey] type. used in the hash160 fragment Read more
source [../src/recoverytool/main.rs.html#375-377]§

FN TO_PUBKEYHASH(&SELF) -> SELF::RAWPKHASH

Converts this key to the associated pubkey hash.
§

FN IS_X_ONLY_KEY(&SELF) -> BOOL [https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]

Returns true if the pubkey is an x-only pubkey. Defaults to false.
source [../src/recoverytool/main.rs.html#324-329]§


IMPL ORD [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Ord.html] FOR KEY [enum.Key.html]

source [../src/recoverytool/main.rs.html#325-328]§

FN CMP [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Ord.html#tymethod.cmp](&SELF, OTHER: &
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF) -> ORDERING
[https://doc.rust-lang.org/1.67.0/core/cmp/enum.Ordering.html]

This method returns an Ordering [https://doc.rust-lang.org/1.67.0/core/cmp/enum.Ordering.html] between self and other. Read more
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.Ord.html#tymethod.cmp]
1.21.0 · source [https://doc.rust-lang.org/1.67.0/src/core/cmp.rs.html#798-801]§

FN MAX [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Ord.html#method.max](SELF, OTHER: SELF) -> SELFWHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Compares and returns the maximum of two values. Read more [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Ord.html#method.max]
1.21.0 · source [https://doc.rust-lang.org/1.67.0/src/core/cmp.rs.html#825-828]§

FN MIN [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Ord.html#method.min](SELF, OTHER: SELF) -> SELFWHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Compares and returns the minimum of two values. Read more [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Ord.html#method.min]
1.50.0 · source [https://doc.rust-lang.org/1.67.0/src/core/cmp.rs.html#857-861]§

FN CLAMP [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Ord.html#method.clamp](SELF, MIN: SELF, MAX: SELF) -> SELFWHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html] + PARTIALORD
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialOrd.html]<SELF>,

Restrict a value to a certain interval. Read more [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Ord.html#method.clamp]
source [../src/recoverytool/main.rs.html#331-336]§


IMPL PARTIALEQ [https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialEq.html]<KEY [enum.Key.html]> FOR KEY [enum.Key.html]

source [../src/recoverytool/main.rs.html#332-335]§

FN EQ [https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialEq.html#tymethod.eq](&SELF, OTHER: &
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]

This method tests for self and other values to be equal, and is used by ==. Read more
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialEq.html#tymethod.eq]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/cmp.rs.html#229]§

FN NE [https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialEq.html#method.ne](&SELF, OTHER: &
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]RHS) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]

This method tests for !=. The default implementation is almost always sufficient, and should not be overridden without very good
reason. Read more [https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialEq.html#method.ne]
source [../src/recoverytool/main.rs.html#317-322]§


IMPL PARTIALORD [https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialOrd.html]<KEY [enum.Key.html]> FOR KEY [enum.Key.html]

source [../src/recoverytool/main.rs.html#318-321]§

FN PARTIAL_CMP [https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp](&SELF, OTHER: &
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF) -> OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<ORDERING
[https://doc.rust-lang.org/1.67.0/core/cmp/enum.Ordering.html]>

This method returns an ordering between self and other values if one exists. Read more
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/cmp.rs.html#1126]§

FN LT [https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialOrd.html#method.lt](&SELF, OTHER: &
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]RHS) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]

This method tests less than (for self and other) and is used by the < operator. Read more
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialOrd.html#method.lt]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/cmp.rs.html#1145]§

FN LE [https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialOrd.html#method.le](&SELF, OTHER: &
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]RHS) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]

This method tests less than or equal to (for self and other) and is used by the <= operator. Read more
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialOrd.html#method.le]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/cmp.rs.html#1163]§

FN GT [https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialOrd.html#method.gt](&SELF, OTHER: &
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]RHS) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]

This method tests greater than (for self and other) and is used by the > operator. Read more
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialOrd.html#method.gt]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/cmp.rs.html#1182]§

FN GE [https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialOrd.html#method.ge](&SELF, OTHER: &
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]RHS) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]

This method tests greater than or equal to (for self and other) and is used by the >= operator. Read more
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialOrd.html#method.ge]
source [../src/recoverytool/main.rs.html#380-406]§


IMPL TOPUBLICKEY FOR KEY [enum.Key.html]

source [../src/recoverytool/main.rs.html#381-383]§

FN TO_PUBLIC_KEY(&SELF) -> PUBLICKEY

Converts an object to a public key
source [../src/recoverytool/main.rs.html#385-389]§

FN HASH_TO_HASH160(HASH: &<SELF AS MINISCRIPTKEY>::RAWPKHASH) -> HASH

Converts a hashed version of the public key to a hash160 hash. Read more
source [../src/recoverytool/main.rs.html#391-393]§

FN TO_SHA256(HASH: &<SELF AS MINISCRIPTKEY>::SHA256) -> HASH

Converts the generic associated [MiniscriptKey::Sha256] to [sha256::Hash]
source [../src/recoverytool/main.rs.html#395-397]§

FN TO_HASH256(HASH: &<SELF AS MINISCRIPTKEY>::HASH256) -> HASH

Converts the generic associated [MiniscriptKey::Hash256] to [hash256::Hash]
source [../src/recoverytool/main.rs.html#399-401]§

FN TO_RIPEMD160(HASH: &<SELF AS MINISCRIPTKEY>::RIPEMD160) -> HASH

Converts the generic associated [MiniscriptKey::Ripemd160] to [ripemd160::Hash]
source [../src/recoverytool/main.rs.html#403-405]§

FN TO_HASH160(HASH: &<SELF AS MINISCRIPTKEY>::HASH160) -> HASH

Converts the generic associated [MiniscriptKey::Hash160] to [hash160::Hash]
§

FN TO_X_ONLY_PUBKEY(&SELF) -> XONLYPUBLICKEY

Convert an object to x-only pubkey
source [../src/recoverytool/main.rs.html#416-463]§


IMPL TRANSLATOR<COMPRESSEDPUBLICKEY [../fedimint_wallet_common/keys/struct.CompressedPublicKey.html], KEY [enum.Key.html], ()
[https://doc.rust-lang.org/1.67.0/std/primitive.unit.html]> FOR SECRETKEYINJECTOR [struct.SecretKeyInjector.html]

source [../src/recoverytool/main.rs.html#417-423]§

FN PK(&MUT SELF, PK: &COMPRESSEDPUBLICKEY [../fedimint_wallet_common/keys/struct.CompressedPublicKey.html]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<KEY [enum.Key.html], ()
[https://doc.rust-lang.org/1.67.0/std/primitive.unit.html]>

Translates public keys P -> Q.
source [../src/recoverytool/main.rs.html#425-434]§

FN PKH(
    &MUT SELF,
    PKH: &<COMPRESSEDPUBLICKEY [../fedimint_wallet_common/keys/struct.CompressedPublicKey.html] AS MINISCRIPTKEY>::RAWPKHASH
) -> RESULT [https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<<KEY [enum.Key.html] AS MINISCRIPTKEY>::RAWPKHASH, ()
[https://doc.rust-lang.org/1.67.0/std/primitive.unit.html]>

Translates public key hashes P::Hash -> Q::Hash.
source [../src/recoverytool/main.rs.html#436-441]§

FN SHA256(
    &MUT SELF,
    _SHA256: &<COMPRESSEDPUBLICKEY [../fedimint_wallet_common/keys/struct.CompressedPublicKey.html] AS MINISCRIPTKEY>::SHA256
) -> RESULT [https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<<KEY [enum.Key.html] AS MINISCRIPTKEY>::SHA256, ()
[https://doc.rust-lang.org/1.67.0/std/primitive.unit.html]>

Provides the translation from P::Sha256 -> Q::Sha256
source [../src/recoverytool/main.rs.html#443-448]§

FN HASH256(
    &MUT SELF,
    _HASH256: &<COMPRESSEDPUBLICKEY [../fedimint_wallet_common/keys/struct.CompressedPublicKey.html] AS MINISCRIPTKEY>::HASH256
) -> RESULT [https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<<KEY [enum.Key.html] AS MINISCRIPTKEY>::HASH256, ()
[https://doc.rust-lang.org/1.67.0/std/primitive.unit.html]>

Provides the translation from P::Hash256 -> Q::Hash256
source [../src/recoverytool/main.rs.html#450-455]§

FN RIPEMD160(
    &MUT SELF,
    _RIPEMD160: &<COMPRESSEDPUBLICKEY [../fedimint_wallet_common/keys/struct.CompressedPublicKey.html] AS
MINISCRIPTKEY>::RIPEMD160
) -> RESULT [https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<<KEY [enum.Key.html] AS MINISCRIPTKEY>::RIPEMD160, ()
[https://doc.rust-lang.org/1.67.0/std/primitive.unit.html]>

Translates ripemd160 hashes from P::Ripemd160 -> Q::Ripemd160
source [../src/recoverytool/main.rs.html#457-462]§

FN HASH160(
    &MUT SELF,
    _HASH160: &<COMPRESSEDPUBLICKEY [../fedimint_wallet_common/keys/struct.CompressedPublicKey.html] AS MINISCRIPTKEY>::HASH160
) -> RESULT [https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<<KEY [enum.Key.html] AS MINISCRIPTKEY>::HASH160, ()
[https://doc.rust-lang.org/1.67.0/std/primitive.unit.html]>

Translates hash160 hashes from P::Hash160 -> Q::Hash160
source [../src/recoverytool/main.rs.html#311]§


IMPL COPY [https://doc.rust-lang.org/1.67.0/core/marker/trait.Copy.html] FOR KEY [enum.Key.html]

source [../src/recoverytool/main.rs.html#311]§


IMPL EQ [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Eq.html] FOR KEY [enum.Key.html]

source [../src/recoverytool/main.rs.html#311]§


IMPL STRUCTURALEQ [https://doc.rust-lang.org/1.67.0/core/marker/trait.StructuralEq.html] FOR KEY [enum.Key.html]


AUTO TRAIT IMPLEMENTATIONS§

§


IMPL REFUNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.RefUnwindSafe.html] FOR KEY [enum.Key.html]

§


IMPL SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] FOR KEY [enum.Key.html]

§


IMPL SYNC [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html] FOR KEY [enum.Key.html]

§


IMPL UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html] FOR KEY [enum.Key.html]

§


IMPL UNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.UnwindSafe.html] FOR KEY [enum.Key.html]


BLANKET IMPLEMENTATIONS§

source [https://doc.rust-lang.org/1.67.0/src/core/any.rs.html#200]§


IMPL<T> ANY [https://doc.rust-lang.org/1.67.0/core/any/trait.Any.html] FOR TWHERE
    T: 'STATIC + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

source [https://doc.rust-lang.org/1.67.0/src/core/any.rs.html#201]§

FN TYPE_ID [https://doc.rust-lang.org/1.67.0/core/any/trait.Any.html#tymethod.type_id](&SELF) -> TYPEID
[https://doc.rust-lang.org/1.67.0/core/any/struct.TypeId.html]

Gets the TypeId of self. Read more [https://doc.rust-lang.org/1.67.0/core/any/trait.Any.html#tymethod.type_id]
source [https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#211]§


IMPL<T> BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<T> FOR TWHERE
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

const: unstable [https://github.com/rust-lang/rust/issues/91522] · source
[https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#213]§

FN BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html#tymethod.borrow](&SELF) -> &
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T

Immutably borrows from an owned value. Read more [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html#tymethod.borrow]
source [https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#220]§


IMPL<T> BORROWMUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html]<T> FOR TWHERE
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

const: unstable [https://github.com/rust-lang/rust/issues/91522] · source
[https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#221]§

FN BORROW_MUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut](&MUT SELF) -> &MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T

Mutably borrows from an owned value. Read more
[https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut]
§


IMPL<T> CALLHASHER FOR TWHERE
    T: HASH [https://doc.rust-lang.org/1.67.0/core/hash/trait.Hash.html] + ?SIZED
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

§

FN GET_HASH<H, B>(VALUE: & [https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]H, BUILD_HASHER: &
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B) -> U64
[https://doc.rust-lang.org/1.67.0/std/primitive.u64.html]WHERE
    H: HASH [https://doc.rust-lang.org/1.67.0/core/hash/trait.Hash.html] + ?SIZED
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    B: BUILDHASHER [https://doc.rust-lang.org/1.67.0/core/hash/trait.BuildHasher.html],

§


IMPL<T> CONV FOR T

§

FN CONV<T>(SELF) -> TWHERE
    SELF: INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<T>,

Converts self into T using Into<T>. Read more
source [https://docs.rs/indexmap/1/src/indexmap/equivalent.rs.html#18]§


IMPL<Q, K> EQUIVALENT [https://docs.rs/indexmap/1/indexmap/equivalent/trait.Equivalent.html]<K> FOR QWHERE
    Q: EQ [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Eq.html] + ?SIZED
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    K: BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<Q> + ?SIZED
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

source [https://docs.rs/indexmap/1/src/indexmap/equivalent.rs.html#24]§

FN EQUIVALENT [https://docs.rs/indexmap/1/indexmap/equivalent/trait.Equivalent.html#tymethod.equivalent](&SELF, KEY: &
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]K) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]

Compare self to key and return true if they are equal.
§


IMPL<T> FMTFORWARD FOR T

§

FN FMT_BINARY(SELF) -> FMTBINARY<SELF>WHERE
    SELF: BINARY [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Binary.html],

Causes self to use its Binary implementation when Debug-formatted.
§

FN FMT_DISPLAY(SELF) -> FMTDISPLAY<SELF>WHERE
    SELF: DISPLAY [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Display.html],

Causes self to use its Display implementation when Debug-formatted. Read more
§

FN FMT_LOWER_EXP(SELF) -> FMTLOWEREXP<SELF>WHERE
    SELF: LOWEREXP [https://doc.rust-lang.org/1.67.0/core/fmt/trait.LowerExp.html],

Causes self to use its LowerExp implementation when Debug-formatted. Read more
§

FN FMT_LOWER_HEX(SELF) -> FMTLOWERHEX<SELF>WHERE
    SELF: LOWERHEX [https://doc.rust-lang.org/1.67.0/core/fmt/trait.LowerHex.html],

Causes self to use its LowerHex implementation when Debug-formatted. Read more
§

FN FMT_OCTAL(SELF) -> FMTOCTAL<SELF>WHERE
    SELF: OCTAL [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Octal.html],

Causes self to use its Octal implementation when Debug-formatted.
§

FN FMT_POINTER(SELF) -> FMTPOINTER<SELF>WHERE
    SELF: POINTER [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Pointer.html],

Causes self to use its Pointer implementation when Debug-formatted. Read more
§

FN FMT_UPPER_EXP(SELF) -> FMTUPPEREXP<SELF>WHERE
    SELF: UPPEREXP [https://doc.rust-lang.org/1.67.0/core/fmt/trait.UpperExp.html],

Causes self to use its UpperExp implementation when Debug-formatted. Read more
§

FN FMT_UPPER_HEX(SELF) -> FMTUPPERHEX<SELF>WHERE
    SELF: UPPERHEX [https://doc.rust-lang.org/1.67.0/core/fmt/trait.UpperHex.html],

Causes self to use its UpperHex implementation when Debug-formatted. Read more
§

FN FMT_LIST(SELF) -> FMTLIST<SELF>WHERE
    &'A [https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF: FOR<'A> INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html],

Formats each item in a sequence. Read more
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#733]§


IMPL<T> FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<T> FOR T

const: unstable [https://github.com/rust-lang/rust/issues/88674] · source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#736]§

FN FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html#tymethod.from](T: T) -> T

Returns the argument unchanged.

§


IMPL<T> FROMREF<T> FOR TWHERE
    T: CLONE [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html],

§

FN FROM_REF(INPUT: & [https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T) -> T

Converts to this type from a reference to the input type.
§


IMPL<T> FUTUREEXT FOR T

§

FN WITH_CONTEXT(SELF, OTEL_CX: CONTEXT) -> WITHCONTEXT<SELF>

Attaches the provided Context [crate::Context] to this type, returning a WithContext wrapper. Read more
§

FN WITH_CURRENT_CONTEXT(SELF) -> WITHCONTEXT<SELF>

Attaches the current Context [crate::Context] to this type, returning a WithContext wrapper. Read more
source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#276]§


IMPL<T> INSTRUMENT [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.Instrument.html] FOR T

source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#82]§

FN INSTRUMENT [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.Instrument.html#method.instrument](SELF, SPAN: SPAN
[https://docs.rs/tracing/0.1.37/tracing/span/struct.Span.html]) -> INSTRUMENTED
[https://docs.rs/tracing/0.1.37/tracing/instrument/struct.Instrumented.html]<SELF>

Instruments this type with the provided Span [https://docs.rs/tracing/0.1.37/tracing/span/struct.Span.html], returning an
Instrumented wrapper. Read more [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.Instrument.html#method.instrument]
source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#121]§

FN IN_CURRENT_SPAN [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.Instrument.html#method.in_current_span](SELF) ->
INSTRUMENTED [https://docs.rs/tracing/0.1.37/tracing/instrument/struct.Instrumented.html]<SELF>

Instruments this type with the current [https://docs.rs/tracing/0.1.37/tracing/span/struct.Span.html#method.current] Span
[https://docs.rs/tracing/0.1.37/tracing/span/struct.Span.html], returning an Instrumented wrapper. Read more
[https://docs.rs/tracing/0.1.37/tracing/instrument/trait.Instrument.html#method.in_current_span]
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#717]§


IMPL<T, U> INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<U> FOR TWHERE
    U: FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<T>,

const: unstable [https://github.com/rust-lang/rust/issues/88674] · source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#725]§

FN INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html#tymethod.into](SELF) -> U

Calls U::from(self).

That is, this conversion is whatever the implementation of From [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<T>
for U chooses to do.

source [https://docs.rs/tonic/0.9.2/src/tonic/request.rs.html#384]§


IMPL<T> INTOREQUEST [https://docs.rs/tonic/0.9.2/tonic/request/trait.IntoRequest.html]<T> FOR T

source [https://docs.rs/tonic/0.9.2/src/tonic/request.rs.html#385]§

FN INTO_REQUEST [https://docs.rs/tonic/0.9.2/tonic/request/trait.IntoRequest.html#tymethod.into_request](SELF) -> REQUEST
[https://docs.rs/tonic/0.9.2/tonic/request/struct.Request.html]<T>

Wrap the input message T in a tonic::Request
§


IMPL<T> PIPE FOR TWHERE
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

§

FN PIPE<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](SELF) -> R) -> RWHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Pipes by value. This is generally the method you want to use. Read more
§

FN PIPE_REF<'A, R>(&'A SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF) -> R) -> RWHERE
    R: 'A,

Borrows self and passes that borrow into the pipe function. Read more
§

FN PIPE_REF_MUT<'A, R>(&'A MUT SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
MUT [https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF) -> R) -> RWHERE
    R: 'A,

Mutably borrows self and passes that borrow into the pipe function. Read more
§

FN PIPE_BORROW<'A, B, R>(&'A SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B) -> R) -> RWHERE
    SELF: BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<B>,
    B: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Borrows self, then passes self.borrow() into the pipe function. Read more
§

FN PIPE_BORROW_MUT<'A, B, R>(
    &'A MUT SELF,
    FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B) -> R
) -> RWHERE
    SELF: BORROWMUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html]<B>,
    B: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Mutably borrows self, then passes self.borrow_mut() into the pipe function. Read more
§

FN PIPE_AS_REF<'A, U, R>(&'A SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]U) -> R) -> RWHERE
    SELF: ASREF [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsRef.html]<U>,
    U: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Borrows self, then passes self.as_ref() into the pipe function.
§

FN PIPE_AS_MUT<'A, U, R>(&'A MUT SELF, FUNC: IMPL FNONCE
[https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]U) -> R) -> RWHERE
    SELF: ASMUT [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsMut.html]<U>,
    U: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Mutably borrows self, then passes self.as_mut() into the pipe function. Read more
§

FN PIPE_DEREF<'A, T, R>(&'A SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T) -> R) -> RWHERE
    SELF: DEREF [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html]<TARGET = T>,
    T: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Borrows self, then passes self.deref() into the pipe function.
§

FN PIPE_DEREF_MUT<'A, T, R>(&'A MUT SELF, FUNC: IMPL FNONCE
[https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T) -> R) -> RWHERE
    SELF: DEREFMUT [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.DerefMut.html]<TARGET = T> + DEREF
[https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html],
    T: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Mutably borrows self, then passes self.deref_mut() into the pipe function. Read more
§


IMPL<T> POINTABLE FOR T

§

CONST ALIGN: USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html] = MEM::ALIGN_OF::<T>()

The alignment of pointer.
§

TYPE INIT = T

The type for initializers.
§

UNSAFE FN INIT(INIT: <T AS POINTABLE>::INIT) -> USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]

Initializes a with the given initializer. Read more
§

UNSAFE FN DEREF<'A>(PTR: USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]) -> &'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T

Dereferences the given pointer. Read more
§

UNSAFE FN DEREF_MUT<'A>(PTR: USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]) -> &'A MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T

Mutably dereferences the given pointer. Read more
§

UNSAFE FN DROP(PTR: USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html])

Drops the object pointed to by the given pointer. Read more
source [https://docs.rs/typenum/1.16.0/src/typenum/type_operators.rs.html#34]§


IMPL<T> SAME [https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Same.html]<T> FOR T

§

TYPE OUTPUT [https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Same.html#associatedtype.Output] = T

Should always be Self
§


IMPL<T> TAP FOR T

§

FN TAP(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)) -> SELF

Immutable access to a value. Read more
§

FN TAP_MUT(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)) -> SELF

Mutable access to a value. Read more
§

FN TAP_BORROW<B>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B)) -> SELFWHERE
    SELF: BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<B>,
    B: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Immutable access to the Borrow<B> of a value. Read more
§

FN TAP_BORROW_MUT<B>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B)) -> SELFWHERE
    SELF: BORROWMUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html]<B>,
    B: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Mutable access to the BorrowMut<B> of a value. Read more
§

FN TAP_REF<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R)) -> SELFWHERE
    SELF: ASREF [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsRef.html]<R>,
    R: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Immutable access to the AsRef<R> view of a value. Read more
§

FN TAP_REF_MUT<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R)) -> SELFWHERE
    SELF: ASMUT [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsMut.html]<R>,
    R: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Mutable access to the AsMut<R> view of a value. Read more
§

FN TAP_DEREF<T>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)) -> SELFWHERE
    SELF: DEREF [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html]<TARGET = T>,
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Immutable access to the Deref::Target of a value. Read more
§

FN TAP_DEREF_MUT<T>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)) -> SELFWHERE
    SELF: DEREFMUT [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.DerefMut.html]<TARGET = T> + DEREF
[https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html],
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Mutable access to the Deref::Target of a value. Read more
§

FN TAP_DBG(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)) -> SELF

Calls .tap() only in debug builds, and is erased in release builds.
§

FN TAP_MUT_DBG(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)) -> SELF

Calls .tap_mut() only in debug builds, and is erased in release builds. Read more
§

FN TAP_BORROW_DBG<B>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B)) -> SELFWHERE
    SELF: BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<B>,
    B: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_borrow() only in debug builds, and is erased in release builds. Read more
§

FN TAP_BORROW_MUT_DBG<B>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B)) -> SELFWHERE
    SELF: BORROWMUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html]<B>,
    B: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_borrow_mut() only in debug builds, and is erased in release builds. Read more
§

FN TAP_REF_DBG<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R)) -> SELFWHERE
    SELF: ASREF [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsRef.html]<R>,
    R: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_ref() only in debug builds, and is erased in release builds. Read more
§

FN TAP_REF_MUT_DBG<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R)) -> SELFWHERE
    SELF: ASMUT [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsMut.html]<R>,
    R: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_ref_mut() only in debug builds, and is erased in release builds. Read more
§

FN TAP_DEREF_DBG<T>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)) -> SELFWHERE
    SELF: DEREF [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html]<TARGET = T>,
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_deref() only in debug builds, and is erased in release builds. Read more
§

FN TAP_DEREF_MUT_DBG<T>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)) -> SELFWHERE
    SELF: DEREFMUT [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.DerefMut.html]<TARGET = T> + DEREF
[https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html],
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_deref_mut() only in debug builds, and is erased in release builds. Read more
source [https://doc.rust-lang.org/1.67.0/src/alloc/borrow.rs.html#82]§


IMPL<T> TOOWNED [https://doc.rust-lang.org/1.67.0/alloc/borrow/trait.ToOwned.html] FOR TWHERE
    T: CLONE [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html],

§

TYPE OWNED [https://doc.rust-lang.org/1.67.0/alloc/borrow/trait.ToOwned.html#associatedtype.Owned] = T

The resulting type after obtaining ownership.
source [https://doc.rust-lang.org/1.67.0/src/alloc/borrow.rs.html#87]§

FN TO_OWNED [https://doc.rust-lang.org/1.67.0/alloc/borrow/trait.ToOwned.html#tymethod.to_owned](&SELF) -> T

Creates owned data from borrowed data, usually by cloning. Read more
[https://doc.rust-lang.org/1.67.0/alloc/borrow/trait.ToOwned.html#tymethod.to_owned]
source [https://doc.rust-lang.org/1.67.0/src/alloc/borrow.rs.html#91]§

FN CLONE_INTO [https://doc.rust-lang.org/1.67.0/alloc/borrow/trait.ToOwned.html#method.clone_into](&SELF, TARGET: &MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)

Uses borrowed data to replace owned data, usually by cloning. Read more
[https://doc.rust-lang.org/1.67.0/alloc/borrow/trait.ToOwned.html#method.clone_into]
source [https://doc.rust-lang.org/1.67.0/src/alloc/string.rs.html#2526]§


IMPL<T> TOSTRING [https://doc.rust-lang.org/1.67.0/alloc/string/trait.ToString.html] FOR TWHERE
    T: DISPLAY [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Display.html] + ?SIZED
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

source [https://doc.rust-lang.org/1.67.0/src/alloc/string.rs.html#2532]§

DEFAULT FN TO_STRING [https://doc.rust-lang.org/1.67.0/alloc/string/trait.ToString.html#tymethod.to_string](&SELF) -> STRING
[https://doc.rust-lang.org/1.67.0/alloc/string/struct.String.html]

Converts the given value to a String. Read more
[https://doc.rust-lang.org/1.67.0/alloc/string/trait.ToString.html#tymethod.to_string]
§


IMPL<T> TRYCONV FOR T

§

FN TRY_CONV<T>(SELF) -> RESULT [https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<T, SELF::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html#associatedtype.Error]>WHERE
    SELF: TRYINTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html]<T>,

Attempts to convert self into T using TryInto<T>. Read more
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#775]§


IMPL<T, U> TRYFROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<U> FOR TWHERE
    U: INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<T>,

§

TYPE ERROR [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error] = INFALLIBLE
[https://doc.rust-lang.org/1.67.0/core/convert/enum.Infallible.html]

The type returned in the event of a conversion error.
const: unstable [https://github.com/rust-lang/rust/issues/88674] · source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#781]§

FN TRY_FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#tymethod.try_from](VALUE: U) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<T, <T AS TRYFROM
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<U>>::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error]>

Performs the conversion.
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#760]§


IMPL<T, U> TRYINTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html]<U> FOR TWHERE
    U: TRYFROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<T>,

§

TYPE ERROR [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html#associatedtype.Error] = <U AS TRYFROM
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<T>>::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error]

The type returned in the event of a conversion error.
const: unstable [https://github.com/rust-lang/rust/issues/88674] · source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#766]§

FN TRY_INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html#tymethod.try_into](SELF) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<U, <U AS TRYFROM
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<T>>::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error]>

Performs the conversion.
§


IMPL<V, T> VZIP<V> FOR TWHERE
    V: MULTILANE<T>,

§

FN VZIP(SELF) -> V

source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#334]§


IMPL<T> WITHSUBSCRIBER [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.WithSubscriber.html] FOR T

source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#169-171]§

FN WITH_SUBSCRIBER [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.WithSubscriber.html#method.with_subscriber]<S>(SELF,
SUBSCRIBER: S) -> WITHDISPATCH [https://docs.rs/tracing/0.1.37/tracing/instrument/struct.WithDispatch.html]<SELF>WHERE
    S: INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<DISPATCH
[https://docs.rs/tracing-core/0.1.22/tracing_core/dispatcher/struct.Dispatch.html]>,

Attaches the provided Subscriber [https://docs.rs/tracing-core/0.1.22/tracing_core/subscriber/trait.Subscriber.html] to this type,
returning a WithDispatch [https://docs.rs/tracing/0.1.37/tracing/instrument/struct.WithDispatch.html] wrapper. Read more
[https://docs.rs/tracing/0.1.37/tracing/instrument/trait.WithSubscriber.html#method.with_subscriber]
source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#221]§

FN WITH_CURRENT_SUBSCRIBER
[https://docs.rs/tracing/0.1.37/tracing/instrument/trait.WithSubscriber.html#method.with_current_subscriber](SELF) -> WITHDISPATCH
[https://docs.rs/tracing/0.1.37/tracing/instrument/struct.WithDispatch.html]<SELF>

Attaches the current default [https://docs.rs/tracing/0.1.37/tracing/dispatcher/index.html#setting-the-default-subscriber]
Subscriber [https://docs.rs/tracing-core/0.1.22/tracing_core/subscriber/trait.Subscriber.html] to this type, returning a
WithDispatch [https://docs.rs/tracing/0.1.37/tracing/instrument/struct.WithDispatch.html] wrapper. Read more
[https://docs.rs/tracing/0.1.37/tracing/instrument/trait.WithSubscriber.html#method.with_current_subscriber]
§


IMPL<C> CONTRIBUTION FOR CWHERE
    C: EQ [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Eq.html] + DEBUG
[https://doc.rust-lang.org/1.67.0/core/fmt/trait.Debug.html] + HASH [https://doc.rust-lang.org/1.67.0/core/hash/trait.Hash.html] +
SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + SYNC
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html],

source [../src/fedimint_core/task.rs.html#568]§


IMPL<T> MAYBESEND [../fedimint_core/task/trait.MaybeSend.html] FOR TWHERE
    T: SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html],

§


IMPL<T> MAYBESEND FOR TWHERE
    T: SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html],

source [../src/fedimint_core/task.rs.html#582]§


IMPL<T> MAYBESYNC [../fedimint_core/task/trait.MaybeSync.html] FOR TWHERE
    T: SYNC [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html],

§


IMPL<M> MESSAGE FOR MWHERE
    M: DEBUG [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Debug.html] + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + SYNC
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html],

§


IMPL<N> NODEIDT FOR NWHERE
    N: EQ [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Eq.html] + ORD
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.Ord.html] + CLONE [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html]
+ DEBUG [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Debug.html] + HASH
[https://doc.rust-lang.org/1.67.0/core/hash/trait.Hash.html] + SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html]
+ SYNC [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html],

