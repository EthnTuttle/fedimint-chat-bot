logo [../../../static.files/rust-logo-151179464ae7ed46.svg]../../../fedimint_core/index.html
? [../../../help.html]
Change settings [../../../static.files/wheel-5ec35bf9ca753509.svg]../../../settings.html

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23


use serde::Deserialize;

use super::{Decodable, Encodable};

pub fn serialize<T, S>(t: &T, ser: S) -> Result<S::Ok, S::Error>
where
    T: Encodable,
    S: serde::Serializer,
{
    ser.serialize_str(
        &t.consensus_encode_to_hex().map_err(|e| {
            serde::ser::Error::custom(format!("encodable serialization failed: {e:?}"))
        })?,
    )
}

pub fn deserialize<'de, T: Decodable, D>(de: D) -> Result<T, D::Error>
where
    D: serde::de::Deserializer<'de>,
{
    Decodable::consensus_decode_hex(&String::deserialize(de)?, &Default::default())
        .map_err(|e| serde::de::Error::custom(format!("decodable deserialization failed: {e:?}")))
}


