☰
logo [../../static.files/rust-logo-151179464ae7ed46.svg]
../../fedimint_client/index.html




logo [../../static.files/rust-logo-151179464ae7ed46.svg]
../../fedimint_client/index.html


ROOTSECRETSTRATEGY


REQUIRED ASSOCIATED TYPES

 * Encoding


REQUIRED METHODS

 * consensus_decode
 * consensus_encode
 * random
 * to_root_secret


IMPLEMENTORS


IN FEDIMINT_CLIENT::SECRET [index.html]

? [../../help.html]
Change settings [../../static.files/wheel-5ec35bf9ca753509.svg]../../settings.html


TRAIT FEDIMINT_CLIENT [../index.html]::SECRET [index.html]::ROOTSECRETSTRATEGYCopy item path
[../../static.files/clipboard-7571035ce49a181d.svg]

source [../../src/fedimint_client/secret.rs.html#39-60] · [−]

pub trait RootSecretStrategy: Debughttps://doc.rust-lang.org/1.67.0/core/fmt/trait.Debug.html {
    type Encoding: Clonehttps://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html;

    fn to_root_secret(secret: &Self::Encodingtrait.RootSecretStrategy.html#associatedtype.Encoding) -> DerivableSecret../../fedimint_derive_secret/struct.DerivableSecret.html;
    fn consensus_encode(
        secret: &Self::Encodingtrait.RootSecretStrategy.html#associatedtype.Encoding,
        writer: &mut impl Writehttps://doc.rust-lang.org/1.67.0/std/io/trait.Write.html
    ) -> Resulthttps://doc.rust-lang.org/1.67.0/std/io/error/type.Result.html<usizehttps://doc.rust-lang.org/1.67.0/std/primitive.usize.html>;
    fn consensus_decode(
        reader: &mut impl Readhttps://doc.rust-lang.org/1.67.0/std/io/trait.Read.html
    ) -> Resulthttps://doc.rust-lang.org/1.67.0/core/result/enum.Result.html<Self::Encodingtrait.RootSecretStrategy.html#associatedtype.Encoding, DecodeError>;
    fn random<R>(rng: &mut https://doc.rust-lang.org/1.67.0/std/primitive.reference.htmlR) -> Self::Encodingtrait.RootSecretStrategy.html#associatedtype.Encoding
    where
        R: RngCorehttps://rust-random.github.io/rand/rand_core/trait.RngCore.html + CryptoRnghttps://rust-random.github.io/rand/rand_core/trait.CryptoRng.html;
}

Expand description

Trait defining a way to generate, serialize and deserialize a root secret. It defines a Encoding associated type which represents
a specific representation of a secret (e.g. a bip39, slip39, CODEX32, … struct) and then defines the methods necessary for the
client to interact with it.

We use a strategy pattern (i.e. implementing the trait on a zero sized type with the actual secret struct as an associated type
instead of implementing the necessary functions directly on the secret struct) to allow external implementations on third-party
types without wrapping them in newtypes.


REQUIRED ASSOCIATED TYPES§

source [../../src/fedimint_client/secret.rs.html#41]

TYPE ENCODING: CLONE [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html]

Type representing the secret


REQUIRED METHODS§

source [../../src/fedimint_client/secret.rs.html#45]

FN TO_ROOT_SECRET(SECRET: &SELF::ENCODING [trait.RootSecretStrategy.html#associatedtype.Encoding]) -> DERIVABLESECRET
[../../fedimint_derive_secret/struct.DerivableSecret.html]

Conversion function from the external encoding to the internal one

source [../../src/fedimint_client/secret.rs.html#48-51]

FN CONSENSUS_ENCODE(
    SECRET: &SELF::ENCODING [trait.RootSecretStrategy.html#associatedtype.Encoding],
    WRITER: &MUT IMPL WRITE [https://doc.rust-lang.org/1.67.0/std/io/trait.Write.html]
) -> RESULT [https://doc.rust-lang.org/1.67.0/std/io/error/type.Result.html]<USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]>

Serialization function for the external encoding

source [../../src/fedimint_client/secret.rs.html#54]

FN CONSENSUS_DECODE(
    READER: &MUT IMPL READ [https://doc.rust-lang.org/1.67.0/std/io/trait.Read.html]
) -> RESULT [https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<SELF::ENCODING
[trait.RootSecretStrategy.html#associatedtype.Encoding], DECODEERROR>

Deserialization function for the external encoding

source [../../src/fedimint_client/secret.rs.html#57-59]

FN RANDOM<R>(RNG: &MUT [https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R) -> SELF::ENCODING
[trait.RootSecretStrategy.html#associatedtype.Encoding]WHERE
    R: RNGCORE [https://rust-random.github.io/rand/rand_core/trait.RngCore.html] + CRYPTORNG
[https://rust-random.github.io/rand/rand_core/trait.CryptoRng.html],

Random generation function for the external secret type


IMPLEMENTORS§

source [../../src/fedimint_client/secret.rs.html#66-93]§


IMPL ROOTSECRETSTRATEGY [trait.RootSecretStrategy.html] FOR PLAINROOTSECRETSTRATEGY [struct.PlainRootSecretStrategy.html]

§

TYPE ENCODING = [U8 [https://doc.rust-lang.org/1.67.0/std/primitive.u8.html]; 64
[https://doc.rust-lang.org/1.67.0/std/primitive.array.html]]

