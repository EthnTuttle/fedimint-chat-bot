☰
logo [../../static.files/rust-logo-151179464ae7ed46.svg]
../../fedimint_wallet_common/index.html




logo [../../static.files/rust-logo-151179464ae7ed46.svg]
../../fedimint_wallet_common/index.html


CONTRACT


REQUIRED METHODS

 * encode


IMPLEMENTATIONS ON FOREIGN TYPES

 * PublicKey
 * Vec<u8>
 * XOnlyPublicKey
 * [u8; 32]


IMPLEMENTORS


IN FEDIMINT_WALLET_COMMON::TWEAKABLE [index.html]

? [../../help.html]
Change settings [../../static.files/wheel-5ec35bf9ca753509.svg]../../settings.html


TRAIT FEDIMINT_WALLET_COMMON [../index.html]::TWEAKABLE [index.html]::CONTRACTCopy item path
[../../static.files/clipboard-7571035ce49a181d.svg]

source [../../src/fedimint_wallet_common/tweakable.rs.html#7-10] · [−]

pub trait Contract {
    fn encode<W: Writehttps://doc.rust-lang.org/1.67.0/std/io/trait.Write.html>(&self, writer: &mut https://doc.rust-lang.org/1.67.0/std/primitive.reference.htmlW) -> Resulthttps://doc.rust-lang.org/1.67.0/std/io/error/type.Result.html<()https://doc.rust-lang.org/1.67.0/std/primitive.unit.html>;
}

Expand description

An object that can be used as a Ricardian contract to tweak a key


REQUIRED METHODS§

source [../../src/fedimint_wallet_common/tweakable.rs.html#9]

FN ENCODE<W: WRITE [https://doc.rust-lang.org/1.67.0/std/io/trait.Write.html]>(&SELF, WRITER: &MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]W) -> RESULT
[https://doc.rust-lang.org/1.67.0/std/io/error/type.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html]>

Serialize the contract in a deterministic way to be used as a tweak


IMPLEMENTATIONS ON FOREIGN TYPES§

source [../../src/fedimint_wallet_common/tweakable.rs.html#57-61]§


IMPL CONTRACT [trait.Contract.html] FOR PUBLICKEY

source [../../src/fedimint_wallet_common/tweakable.rs.html#58-60]§

FN ENCODE<W: WRITE [https://doc.rust-lang.org/1.67.0/std/io/trait.Write.html]>(&SELF, WRITER: &MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]W) -> RESULT
[https://doc.rust-lang.org/1.67.0/std/io/error/type.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html]>

source [../../src/fedimint_wallet_common/tweakable.rs.html#63-67]§


IMPL CONTRACT [trait.Contract.html] FOR VEC [https://doc.rust-lang.org/1.67.0/alloc/vec/struct.Vec.html]<U8
[https://doc.rust-lang.org/1.67.0/std/primitive.u8.html]>

source [../../src/fedimint_wallet_common/tweakable.rs.html#64-66]§

FN ENCODE<W: WRITE [https://doc.rust-lang.org/1.67.0/std/io/trait.Write.html]>(&SELF, WRITER: &MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]W) -> RESULT
[https://doc.rust-lang.org/1.67.0/std/io/error/type.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html]>

source [../../src/fedimint_wallet_common/tweakable.rs.html#69-73]§


IMPL CONTRACT [trait.Contract.html] FOR [U8 [https://doc.rust-lang.org/1.67.0/std/primitive.u8.html]; 32
[https://doc.rust-lang.org/1.67.0/std/primitive.array.html]]

source [../../src/fedimint_wallet_common/tweakable.rs.html#70-72]§

FN ENCODE<W: WRITE [https://doc.rust-lang.org/1.67.0/std/io/trait.Write.html]>(&SELF, WRITER: &MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]W) -> RESULT
[https://doc.rust-lang.org/1.67.0/std/io/error/type.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html]>

source [../../src/fedimint_wallet_common/tweakable.rs.html#75-79]§


IMPL CONTRACT [trait.Contract.html] FOR XONLYPUBLICKEY

source [../../src/fedimint_wallet_common/tweakable.rs.html#76-78]§

FN ENCODE<W: WRITE [https://doc.rust-lang.org/1.67.0/std/io/trait.Write.html]>(&SELF, WRITER: &MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]W) -> RESULT
[https://doc.rust-lang.org/1.67.0/std/io/error/type.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html]>


IMPLEMENTORS§


