☰
logo [../static.files/rust-logo-151179464ae7ed46.svg]
../fedimint_wallet_client/index.html




logo [../static.files/rust-logo-151179464ae7ed46.svg]
../fedimint_wallet_client/index.html


WALLETCLIENTEXT


REQUIRED METHODS

 * get_deposit_address
 * get_withdraw_fee
 * subscribe_deposit_updates
 * subscribe_withdraw_updates
 * withdraw


IMPLEMENTATIONS ON FOREIGN TYPES

 * Client


IMPLEMENTORS


IN FEDIMINT_WALLET_CLIENT [index.html]

? [../help.html]
Change settings [../static.files/wheel-5ec35bf9ca753509.svg]../settings.html


TRAIT FEDIMINT_WALLET_CLIENT [index.html]::WALLETCLIENTEXTCopy item path [../static.files/clipboard-7571035ce49a181d.svg]

source [../src/fedimint_wallet_client/lib.rs.html#46-84] · [−]

pub trait WalletClientExt {
    fn get_deposit_address<'life0, 'async_trait>(
        &'life0 self,
        valid_until: SystemTimehttps://doc.rust-lang.org/1.67.0/std/time/struct.SystemTime.html
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Resulthttps://docs.rs/anyhow/1.0.71/anyhow/type.Result.html<(OperationId, Address)>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait;
    fn subscribe_deposit_updates<'life0, 'async_trait>(
        &'life0 self,
        operation_id: OperationId
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Resulthttps://docs.rs/anyhow/1.0.71/anyhow/type.Result.html<UpdateStreamOrOutcome<'_, DepositStateenum.DepositState.html>>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait;
    fn get_withdraw_fee<'life0, 'async_trait>(
        &'life0 self,
        address: Address,
        amount: Amount
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Resulthttps://docs.rs/anyhow/1.0.71/anyhow/type.Result.html<PegOutFeesstruct.PegOutFees.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait;
    fn withdraw<'life0, 'async_trait>(
        &'life0 self,
        address: Address,
        amount: Amount,
        fee: PegOutFeesstruct.PegOutFees.html
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Resulthttps://docs.rs/anyhow/1.0.71/anyhow/type.Result.html<OperationId>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait;
    fn subscribe_withdraw_updates<'life0, 'async_trait>(
        &'life0 self,
        operation_id: OperationId
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Resulthttps://docs.rs/anyhow/1.0.71/anyhow/type.Result.html<UpdateStreamOrOutcome<'_, WithdrawStateenum.WithdrawState.html>>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait;
}


REQUIRED METHODS§

source [../src/fedimint_wallet_client/lib.rs.html#47-50]

FN GET_DEPOSIT_ADDRESS<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    VALID_UNTIL: SYSTEMTIME [https://doc.rust-lang.org/1.67.0/std/time/struct.SystemTime.html]
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://docs.rs/anyhow/1.0.71/anyhow/type.Result.html]<(OPERATIONID, ADDRESS)>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,

source [../src/fedimint_wallet_client/lib.rs.html#52-55]

FN SUBSCRIBE_DEPOSIT_UPDATES<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    OPERATION_ID: OPERATIONID
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://docs.rs/anyhow/1.0.71/anyhow/type.Result.html]<UPDATESTREAMOROUTCOME<'_, DEPOSITSTATE [enum.DepositState.html]>>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,

source [../src/fedimint_wallet_client/lib.rs.html#63-67]

FN GET_WITHDRAW_FEE<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    ADDRESS: ADDRESS,
    AMOUNT: AMOUNT
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://docs.rs/anyhow/1.0.71/anyhow/type.Result.html]<PEGOUTFEES [struct.PegOutFees.html]>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,

Fetches the fees that would need to be paid to make the withdraw request using WalletClientExt::withdraw
[trait.WalletClientExt.html#tymethod.withdraw] work right now.

Note that we do not receive a guarantee that these fees will be valid in the future, thus even the next second using these fees
may fail. The caller should be prepared to retry with a new fee estimate.

source [../src/fedimint_wallet_client/lib.rs.html#73-78]

FN WITHDRAW<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    ADDRESS: ADDRESS,
    AMOUNT: AMOUNT,
    FEE: PEGOUTFEES [struct.PegOutFees.html]
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://docs.rs/anyhow/1.0.71/anyhow/type.Result.html]<OPERATIONID>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,

Attempt to withdraw a given amount of Bitcoin to a destination address. The caller has to supply the fee rate to be used which can
be fetched using WalletClientExt::get_withdraw_fee [trait.WalletClientExt.html#tymethod.get_withdraw_fee] and should be
acknowledged by the user since it can be unexpectedly high.

source [../src/fedimint_wallet_client/lib.rs.html#80-83]

FN SUBSCRIBE_WITHDRAW_UPDATES<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    OPERATION_ID: OPERATIONID
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://docs.rs/anyhow/1.0.71/anyhow/type.Result.html]<UPDATESTREAMOROUTCOME<'_, WITHDRAWSTATE [enum.WithdrawState.html]>>> +
SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,


IMPLEMENTATIONS ON FOREIGN TYPES§

source [../src/fedimint_wallet_client/lib.rs.html#107-344]§


IMPL WALLETCLIENTEXT [trait.WalletClientExt.html] FOR CLIENT

source [../src/fedimint_wallet_client/lib.rs.html#108-157]§

FN GET_DEPOSIT_ADDRESS<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    VALID_UNTIL: SYSTEMTIME [https://doc.rust-lang.org/1.67.0/std/time/struct.SystemTime.html]
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://docs.rs/anyhow/1.0.71/anyhow/type.Result.html]<(OPERATIONID, ADDRESS)>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,

source [../src/fedimint_wallet_client/lib.rs.html#159-235]§

FN SUBSCRIBE_DEPOSIT_UPDATES<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    OPERATION_ID: OPERATIONID
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://docs.rs/anyhow/1.0.71/anyhow/type.Result.html]<UPDATESTREAMOROUTCOME<'_, DEPOSITSTATE [enum.DepositState.html]>>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,

source [../src/fedimint_wallet_client/lib.rs.html#237-246]§

FN GET_WITHDRAW_FEE<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    ADDRESS: ADDRESS,
    AMOUNT: AMOUNT
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://docs.rs/anyhow/1.0.71/anyhow/type.Result.html]<PEGOUTFEES [struct.PegOutFees.html]>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,

source [../src/fedimint_wallet_client/lib.rs.html#248-279]§

FN WITHDRAW<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    ADDRESS: ADDRESS,
    AMOUNT: AMOUNT,
    FEE: PEGOUTFEES [struct.PegOutFees.html]
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://docs.rs/anyhow/1.0.71/anyhow/type.Result.html]<OPERATIONID>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,

source [../src/fedimint_wallet_client/lib.rs.html#281-343]§

FN SUBSCRIBE_WITHDRAW_UPDATES<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    OPERATION_ID: OPERATIONID
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://docs.rs/anyhow/1.0.71/anyhow/type.Result.html]<UPDATESTREAMOROUTCOME<'_, WITHDRAWSTATE [enum.WithdrawState.html]>>> +
SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,


IMPLEMENTORS§


