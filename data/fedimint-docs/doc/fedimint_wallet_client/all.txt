â˜°
logo [../static.files/rust-logo-151179464ae7ed46.svg]
../fedimint_wallet_client/index.html




logo [../static.files/rust-logo-151179464ae7ed46.svg]
../fedimint_wallet_client/index.html


CRATE FEDIMINT_WALLET_CLIENT

 * Structs
 * Enums
 * Constants
 * Traits
 * Functions
 * Type Definitions

? [../help.html]
Change settings [../static.files/wheel-5ec35bf9ca753509.svg]../settings.html


LIST OF ALL ITEMS


STRUCTS

 * PegOut [struct.PegOut.html]
 * PegOutFees [struct.PegOutFees.html]
 * PegOutSignatureItem [struct.PegOutSignatureItem.html]
 * PendingTransaction [struct.PendingTransaction.html]
 * Rbf [struct.Rbf.html]
 * SpendableUTXO [struct.SpendableUTXO.html]
 * UnsignedTransaction [struct.UnsignedTransaction.html]
 * UnzipWalletConsensusItem [struct.UnzipWalletConsensusItem.html]
 * WalletClientContext [struct.WalletClientContext.html]
 * WalletClientGen [struct.WalletClientGen.html]
 * WalletClientModule [struct.WalletClientModule.html]
 * WalletCommonGen [struct.WalletCommonGen.html]
 * WalletInput [struct.WalletInput.html]
 * WalletModuleTypes [struct.WalletModuleTypes.html]
 * WalletOutputOutcome [struct.WalletOutputOutcome.html]
 * config::FeeConsensus [config/struct.FeeConsensus.html]
 * config::WalletClientConfig [config/struct.WalletClientConfig.html]
 * config::WalletConfig [config/struct.WalletConfig.html]
 * config::WalletConfigConsensus [config/struct.WalletConfigConsensus.html]
 * config::WalletConfigLocal [config/struct.WalletConfigLocal.html]
 * config::WalletConfigPrivate [config/struct.WalletConfigPrivate.html]
 * config::WalletGenParams [config/struct.WalletGenParams.html]
 * config::WalletGenParamsConsensus [config/struct.WalletGenParamsConsensus.html]
 * config::WalletGenParamsLocal [config/struct.WalletGenParamsLocal.html]
 * db::BlockHashKey [db/struct.BlockHashKey.html]
 * db::BlockHashKeyPrefix [db/struct.BlockHashKeyPrefix.html]
 * db::BlockHeightVoteKey [db/struct.BlockHeightVoteKey.html]
 * db::BlockHeightVotePrefix [db/struct.BlockHeightVotePrefix.html]
 * db::DbKeyPrefixIter [db/struct.DbKeyPrefixIter.html]
 * db::FeeRateVoteKey [db/struct.FeeRateVoteKey.html]
 * db::FeeRateVotePrefix [db/struct.FeeRateVotePrefix.html]
 * db::PegOutBitcoinTransaction [db/struct.PegOutBitcoinTransaction.html]
 * db::PegOutBitcoinTransactionPrefix [db/struct.PegOutBitcoinTransactionPrefix.html]
 * db::PegOutNonceKey [db/struct.PegOutNonceKey.html]
 * db::PegOutTxSignatureCI [db/struct.PegOutTxSignatureCI.html]
 * db::PegOutTxSignatureCIPrefix [db/struct.PegOutTxSignatureCIPrefix.html]
 * db::PendingTransactionKey [db/struct.PendingTransactionKey.html]
 * db::PendingTransactionPrefixKey [db/struct.PendingTransactionPrefixKey.html]
 * db::UTXOKey [db/struct.UTXOKey.html]
 * db::UTXOPrefixKey [db/struct.UTXOPrefixKey.html]
 * db::UnsignedTransactionKey [db/struct.UnsignedTransactionKey.html]
 * db::UnsignedTransactionPrefixKey [db/struct.UnsignedTransactionPrefixKey.html]
 * keys::CompressedPublicKey [keys/struct.CompressedPublicKey.html]
 * txoproof::PegInProof [txoproof/struct.PegInProof.html]


ENUMS

 * DepositState [enum.DepositState.html]
 * ProcessPegOutSigError [enum.ProcessPegOutSigError.html]
 * WalletClientStates [enum.WalletClientStates.html]
 * WalletConsensusItem [enum.WalletConsensusItem.html]
 * WalletError [enum.WalletError.html]
 * WalletOperationMeta [enum.WalletOperationMeta.html]
 * WalletOutput [enum.WalletOutput.html]
 * WithdrawState [enum.WithdrawState.html]
 * db::DbKeyPrefix [db/enum.DbKeyPrefix.html]
 * txoproof::PegInProofError [txoproof/enum.PegInProofError.html]


TRAITS

 * IterUnzipWalletConsensusItem [trait.IterUnzipWalletConsensusItem.html]
 * WalletClientExt [trait.WalletClientExt.html]
 * api::WalletFederationApi [api/trait.WalletFederationApi.html]
 * tweakable::Contract [tweakable/trait.Contract.html]
 * tweakable::Tweakable [tweakable/trait.Tweakable.html]


FUNCTIONS

 * proprietary_tweak_key [fn.proprietary_tweak_key.html]


TYPE DEFINITIONS

 * PartialSig [type.PartialSig.html]
 * PegInDescriptor [type.PegInDescriptor.html]


CONSTANTS

 * CONFIRMATION_TARGET [constant.CONFIRMATION_TARGET.html]
 * KIND [constant.KIND.html]

