☰
logo [../../static.files/rust-logo-151179464ae7ed46.svg]
../../fedimint_ln_common/index.html




logo [../../static.files/rust-logo-151179464ae7ed46.svg]
../../fedimint_ln_common/index.html


LNFEDERATIONAPI


REQUIRED METHODS

 * fetch_consensus_block_height
 * fetch_contract
 * fetch_gateways
 * fetch_offer
 * get_incoming_contract
 * get_outgoing_contract
 * offer_exists
 * register_gateway


IMPLEMENTORS


IN FEDIMINT_LN_COMMON::API [index.html]

? [../../help.html]
Change settings [../../static.files/wheel-5ec35bf9ca753509.svg]../../settings.html


TRAIT FEDIMINT_LN_COMMON [../index.html]::API [index.html]::LNFEDERATIONAPICopy item path
[../../static.files/clipboard-7571035ce49a181d.svg]

source [../../src/fedimint_ln_common/api.rs.html#14-34] · [−]

pub trait LnFederationApi {
    fn fetch_consensus_block_height<'life0, 'async_trait>(
        &'life0 self
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = FederationResult<Optionhttps://doc.rust-lang.org/1.67.0/core/option/enum.Option.html<u64https://doc.rust-lang.org/1.67.0/std/primitive.u64.html>>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait;
    fn fetch_contract<'life0, 'async_trait>(
        &'life0 self,
        contract: ContractId../contracts/struct.ContractId.html
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = FederationResult<ContractAccount../struct.ContractAccount.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait;
    fn fetch_offer<'life0, 'async_trait>(
        &'life0 self,
        payment_hash: Sha256Hash
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = FederationResult<IncomingContractOffer../contracts/incoming/struct.IncomingContractOffer.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait;
    fn fetch_gateways<'life0, 'async_trait>(
        &'life0 self
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = FederationResult<Vechttps://doc.rust-lang.org/1.67.0/alloc/vec/struct.Vec.html<LightningGateway../struct.LightningGateway.html>>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait;
    fn register_gateway<'life0, 'life1, 'async_trait>(
        &'life0 self,
        gateway: &'life1 LightningGateway../struct.LightningGateway.html
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = FederationResult<()https://doc.rust-lang.org/1.67.0/std/primitive.unit.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait,
        'life1: 'async_trait;
    fn offer_exists<'life0, 'async_trait>(
        &'life0 self,
        payment_hash: Sha256Hash
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = FederationResult<boolhttps://doc.rust-lang.org/1.67.0/std/primitive.bool.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait;
    fn get_incoming_contract<'life0, 'async_trait>(
        &'life0 self,
        id: ContractId../contracts/struct.ContractId.html
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Resulthttps://docs.rs/anyhow/1.0.71/anyhow/type.Result.html<IncomingContractAccount../contracts/incoming/struct.IncomingContractAccount.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait;
    fn get_outgoing_contract<'life0, 'async_trait>(
        &'life0 self,
        id: ContractId../contracts/struct.ContractId.html
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Resulthttps://docs.rs/anyhow/1.0.71/anyhow/type.Result.html<OutgoingContractAccount../contracts/outgoing/struct.OutgoingContractAccount.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait;
}


REQUIRED METHODS§

source [../../src/fedimint_ln_common/api.rs.html#15]

FN FETCH_CONSENSUS_BLOCK_HEIGHT<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 SELF
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = FEDERATIONRESULT<OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<U64 [https://doc.rust-lang.org/1.67.0/std/primitive.u64.html]>>> +
SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,

source [../../src/fedimint_ln_common/api.rs.html#16]

FN FETCH_CONTRACT<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    CONTRACT: CONTRACTID [../contracts/struct.ContractId.html]
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = FEDERATIONRESULT<CONTRACTACCOUNT
[../struct.ContractAccount.html]>> + SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,

source [../../src/fedimint_ln_common/api.rs.html#17-20]

FN FETCH_OFFER<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    PAYMENT_HASH: SHA256HASH
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = FEDERATIONRESULT<INCOMINGCONTRACTOFFER
[../contracts/incoming/struct.IncomingContractOffer.html]>> + SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html]
+ 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,

source [../../src/fedimint_ln_common/api.rs.html#21]

FN FETCH_GATEWAYS<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 SELF
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = FEDERATIONRESULT<VEC
[https://doc.rust-lang.org/1.67.0/alloc/vec/struct.Vec.html]<LIGHTNINGGATEWAY [../struct.LightningGateway.html]>>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,

source [../../src/fedimint_ln_common/api.rs.html#22]

FN REGISTER_GATEWAY<'LIFE0, 'LIFE1, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    GATEWAY: &'LIFE1 LIGHTNINGGATEWAY [../struct.LightningGateway.html]
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = FEDERATIONRESULT<()
[https://doc.rust-lang.org/1.67.0/std/primitive.unit.html]>> + SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html]
+ 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,
    'LIFE1: 'ASYNC_TRAIT,

source [../../src/fedimint_ln_common/api.rs.html#23]

FN OFFER_EXISTS<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    PAYMENT_HASH: SHA256HASH
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = FEDERATIONRESULT<BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]>> + SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html]
+ 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,

source [../../src/fedimint_ln_common/api.rs.html#25-28]

FN GET_INCOMING_CONTRACT<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    ID: CONTRACTID [../contracts/struct.ContractId.html]
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://docs.rs/anyhow/1.0.71/anyhow/type.Result.html]<INCOMINGCONTRACTACCOUNT
[../contracts/incoming/struct.IncomingContractAccount.html]>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,

source [../../src/fedimint_ln_common/api.rs.html#30-33]

FN GET_OUTGOING_CONTRACT<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    ID: CONTRACTID [../contracts/struct.ContractId.html]
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://docs.rs/anyhow/1.0.71/anyhow/type.Result.html]<OUTGOINGCONTRACTACCOUNT
[../contracts/outgoing/struct.OutgoingContractAccount.html]>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,


IMPLEMENTORS§

source [../../src/fedimint_ln_common/api.rs.html#37-117]§


IMPL<T> LNFEDERATIONAPI [trait.LnFederationApi.html] FOR TWHERE
    T: IMODULEFEDERATIONAPI + MAYBESEND + MAYBESYNC + 'STATIC + ?SIZED
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

