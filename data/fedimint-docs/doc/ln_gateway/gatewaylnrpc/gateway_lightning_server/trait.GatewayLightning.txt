☰
logo [../../../static.files/rust-logo-151179464ae7ed46.svg]
../../../ln_gateway/index.html




logo [../../../static.files/rust-logo-151179464ae7ed46.svg]
../../../ln_gateway/index.html


GATEWAYLIGHTNING


REQUIRED ASSOCIATED TYPES

 * RouteHtlcsStream


REQUIRED METHODS

 * complete_htlc
 * get_node_info
 * get_route_hints
 * pay_invoice
 * route_htlcs


IMPLEMENTORS


IN LN_GATEWAY::GATEWAYLNRPC::GATEWAY_LIGHTNING_SERVER [index.html]

? [../../../help.html]
Change settings [../../../static.files/wheel-5ec35bf9ca753509.svg]../../../settings.html


TRAIT LN_GATEWAY [../../index.html]::GATEWAYLNRPC [../index.html]::GATEWAY_LIGHTNING_SERVER [index.html]::GATEWAYLIGHTNINGCopy
item path [../../../static.files/clipboard-7571035ce49a181d.svg]

source
[../../../src/ln_gateway/Users/ethantuttle/code/fedimint/up/fedimint-chat-bot/data/fedimint-docs/release/build/ln-gateway-3e20b0116ec04f2c/out/gatewaylnrpc.rs.html#355-392]
· [−]

pub trait GatewayLightning: Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + Synchttps://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html + 'static {
    type RouteHtlcsStream: Stream<Item = Resulthttps://doc.rust-lang.org/1.67.0/core/result/enum.Result.html<InterceptHtlcRequest../struct.InterceptHtlcRequest.html, Statushttps://docs.rs/tonic/0.8.3/tonic/status/struct.Status.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'static;

    fn get_node_info<'life0, 'async_trait>(
        &'life0 self,
        request: Requesthttps://docs.rs/tonic/0.8.3/tonic/request/struct.Request.html<EmptyRequest../struct.EmptyRequest.html>
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Resulthttps://doc.rust-lang.org/1.67.0/core/result/enum.Result.html<Responsehttps://docs.rs/tonic/0.8.3/tonic/response/struct.Response.html<GetNodeInfoResponse../struct.GetNodeInfoResponse.html>, Statushttps://docs.rs/tonic/0.8.3/tonic/status/struct.Status.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait;
    fn get_route_hints<'life0, 'async_trait>(
        &'life0 self,
        request: Requesthttps://docs.rs/tonic/0.8.3/tonic/request/struct.Request.html<EmptyRequest../struct.EmptyRequest.html>
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Resulthttps://doc.rust-lang.org/1.67.0/core/result/enum.Result.html<Responsehttps://docs.rs/tonic/0.8.3/tonic/response/struct.Response.html<GetRouteHintsResponse../struct.GetRouteHintsResponse.html>, Statushttps://docs.rs/tonic/0.8.3/tonic/status/struct.Status.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait;
    fn pay_invoice<'life0, 'async_trait>(
        &'life0 self,
        request: Requesthttps://docs.rs/tonic/0.8.3/tonic/request/struct.Request.html<PayInvoiceRequest../struct.PayInvoiceRequest.html>
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Resulthttps://doc.rust-lang.org/1.67.0/core/result/enum.Result.html<Responsehttps://docs.rs/tonic/0.8.3/tonic/response/struct.Response.html<PayInvoiceResponse../struct.PayInvoiceResponse.html>, Statushttps://docs.rs/tonic/0.8.3/tonic/status/struct.Status.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait;
    fn route_htlcs<'life0, 'async_trait>(
        &'life0 self,
        request: Requesthttps://docs.rs/tonic/0.8.3/tonic/request/struct.Request.html<EmptyRequest../struct.EmptyRequest.html>
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Resulthttps://doc.rust-lang.org/1.67.0/core/result/enum.Result.html<Responsehttps://docs.rs/tonic/0.8.3/tonic/response/struct.Response.html<Self::RouteHtlcsStreamtrait.GatewayLightning.html#associatedtype.RouteHtlcsStream>, Statushttps://docs.rs/tonic/0.8.3/tonic/status/struct.Status.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait;
    fn complete_htlc<'life0, 'async_trait>(
        &'life0 self,
        request: Requesthttps://docs.rs/tonic/0.8.3/tonic/request/struct.Request.html<InterceptHtlcResponse../struct.InterceptHtlcResponse.html>
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Resulthttps://doc.rust-lang.org/1.67.0/core/result/enum.Result.html<Responsehttps://docs.rs/tonic/0.8.3/tonic/response/struct.Response.html<EmptyResponse../struct.EmptyResponse.html>, Statushttps://docs.rs/tonic/0.8.3/tonic/status/struct.Status.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait;
}

Expand description

Generated trait containing gRPC methods that should be implemented for use with GatewayLightningServer.


REQUIRED ASSOCIATED TYPES§

source
[../../../src/ln_gateway/Users/ethantuttle/code/fedimint/up/fedimint-chat-bot/data/fedimint-docs/release/build/ln-gateway-3e20b0116ec04f2c/out/gatewaylnrpc.rs.html#373-377]

TYPE ROUTEHTLCSSTREAM: STREAM<ITEM = RESULT [https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<INTERCEPTHTLCREQUEST
[../struct.InterceptHtlcRequest.html], STATUS [https://docs.rs/tonic/0.8.3/tonic/status/struct.Status.html]>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'STATIC

Server streaming response type for the RouteHtlcs method.


REQUIRED METHODS§

source
[../../../src/ln_gateway/Users/ethantuttle/code/fedimint/up/fedimint-chat-bot/data/fedimint-docs/release/build/ln-gateway-3e20b0116ec04f2c/out/gatewaylnrpc.rs.html#357-360]

FN GET_NODE_INFO<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    REQUEST: REQUEST [https://docs.rs/tonic/0.8.3/tonic/request/struct.Request.html]<EMPTYREQUEST [../struct.EmptyRequest.html]>
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<RESPONSE
[https://docs.rs/tonic/0.8.3/tonic/response/struct.Response.html]<GETNODEINFORESPONSE [../struct.GetNodeInfoResponse.html]>,
STATUS [https://docs.rs/tonic/0.8.3/tonic/status/struct.Status.html]>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,

GetNodeInfo returns the public key and alias of the associated lightning node

source
[../../../src/ln_gateway/Users/ethantuttle/code/fedimint/up/fedimint-chat-bot/data/fedimint-docs/release/build/ln-gateway-3e20b0116ec04f2c/out/gatewaylnrpc.rs.html#362-365]

FN GET_ROUTE_HINTS<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    REQUEST: REQUEST [https://docs.rs/tonic/0.8.3/tonic/request/struct.Request.html]<EMPTYREQUEST [../struct.EmptyRequest.html]>
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<RESPONSE
[https://docs.rs/tonic/0.8.3/tonic/response/struct.Response.html]<GETROUTEHINTSRESPONSE [../struct.GetRouteHintsResponse.html]>,
STATUS [https://docs.rs/tonic/0.8.3/tonic/status/struct.Status.html]>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,

GetRouteHints returns the route hints to the associated lightning node

source
[../../../src/ln_gateway/Users/ethantuttle/code/fedimint/up/fedimint-chat-bot/data/fedimint-docs/release/build/ln-gateway-3e20b0116ec04f2c/out/gatewaylnrpc.rs.html#368-371]

FN PAY_INVOICE<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    REQUEST: REQUEST [https://docs.rs/tonic/0.8.3/tonic/request/struct.Request.html]<PAYINVOICEREQUEST
[../struct.PayInvoiceRequest.html]>
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<RESPONSE
[https://docs.rs/tonic/0.8.3/tonic/response/struct.Response.html]<PAYINVOICERESPONSE [../struct.PayInvoiceResponse.html]>, STATUS
[https://docs.rs/tonic/0.8.3/tonic/status/struct.Status.html]>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,

PayInvoice attempts to pay an invoice using the associated lightning node

source
[../../../src/ln_gateway/Users/ethantuttle/code/fedimint/up/fedimint-chat-bot/data/fedimint-docs/release/build/ln-gateway-3e20b0116ec04f2c/out/gatewaylnrpc.rs.html#384-387]

FN ROUTE_HTLCS<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    REQUEST: REQUEST [https://docs.rs/tonic/0.8.3/tonic/request/struct.Request.html]<EMPTYREQUEST [../struct.EmptyRequest.html]>
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<RESPONSE
[https://docs.rs/tonic/0.8.3/tonic/response/struct.Response.html]<SELF::ROUTEHTLCSSTREAM
[trait.GatewayLightning.html#associatedtype.RouteHtlcsStream]>, STATUS
[https://docs.rs/tonic/0.8.3/tonic/status/struct.Status.html]>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,

RouteHtlcs opens a bi-directional stream for the client to receive intercepted HTLCs. InterceptHtlcRequest is sent from the server
to alert the client that an HTLC has been intercepted and needs to be processed. The client is expected to response with
InterceptHtlcResponse after the HTLC has been processed with the appropriate action (Settle, Forward, Cancel).

source
[../../../src/ln_gateway/Users/ethantuttle/code/fedimint/up/fedimint-chat-bot/data/fedimint-docs/release/build/ln-gateway-3e20b0116ec04f2c/out/gatewaylnrpc.rs.html#388-391]

FN COMPLETE_HTLC<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    REQUEST: REQUEST [https://docs.rs/tonic/0.8.3/tonic/request/struct.Request.html]<INTERCEPTHTLCRESPONSE
[../struct.InterceptHtlcResponse.html]>
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<RESPONSE
[https://docs.rs/tonic/0.8.3/tonic/response/struct.Response.html]<EMPTYRESPONSE [../struct.EmptyResponse.html]>, STATUS
[https://docs.rs/tonic/0.8.3/tonic/status/struct.Status.html]>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,


IMPLEMENTORS§


