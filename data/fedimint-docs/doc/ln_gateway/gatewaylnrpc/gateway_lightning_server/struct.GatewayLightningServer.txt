☰
logo [../../../static.files/rust-logo-151179464ae7ed46.svg]
../../../ln_gateway/index.html




logo [../../../static.files/rust-logo-151179464ae7ed46.svg]
../../../ln_gateway/index.html


GATEWAYLIGHTNINGSERVER


METHODS

 * accept_compressed
 * from_arc
 * new
 * send_compressed
 * with_interceptor


TRAIT IMPLEMENTATIONS

 * Clone
 * Debug
 * NamedService
 * Service<Request<B>>


AUTO TRAIT IMPLEMENTATIONS

 * RefUnwindSafe
 * Send
 * Sync
 * Unpin
 * UnwindSafe


BLANKET IMPLEMENTATIONS

 * Any
 * Borrow<T>
 * BorrowMut<T>
 * Conv
 * FmtForward
 * From<T>
 * FromRef<T>
 * FutureExt
 * GrpcService<ReqBody>
 * GrpcService<ReqBody>
 * GrpcService<ReqBody>
 * Instrument
 * Into<U>
 * IntoRequest<T>
 * IntoRequest<T>
 * IntoRequest<T>
 * MaybeSend
 * MaybeSend
 * MaybeSync
 * Pipe
 * Same<T>
 * ServiceExt<R>
 * ServiceExt<Request>
 * Tap
 * ToOwned
 * TryConv
 * TryFrom<U>
 * TryInto<U>
 * VZip<V>
 * WithSubscriber


IN LN_GATEWAY::GATEWAYLNRPC::GATEWAY_LIGHTNING_SERVER [index.html]

? [../../../help.html]
Change settings [../../../static.files/wheel-5ec35bf9ca753509.svg]../../../settings.html


STRUCT LN_GATEWAY [../../index.html]::GATEWAYLNRPC [../index.html]::GATEWAY_LIGHTNING_SERVER [index.html]::GATEWAYLIGHTNINGSERVER
Copy item path [../../../static.files/clipboard-7571035ce49a181d.svg]

source
[../../../src/ln_gateway/Users/ethantuttle/code/fedimint/up/fedimint-chat-bot/data/fedimint-docs/release/build/ln-gateway-3e20b0116ec04f2c/out/gatewaylnrpc.rs.html#397-401]
· [−]

pub struct GatewayLightningServer<T: GatewayLightningtrait.GatewayLightning.html> { /* private fields */ }

Expand description

GatewayLightning is a service that provides limited access and functionality from a lightning node to Fedimint gateways


IMPLEMENTATIONS§

source
[../../../src/ln_gateway/Users/ethantuttle/code/fedimint/up/fedimint-chat-bot/data/fedimint-docs/release/build/ln-gateway-3e20b0116ec04f2c/out/gatewaylnrpc.rs.html#403-436]§


IMPL<T: GATEWAYLIGHTNING [trait.GatewayLightning.html]> GATEWAYLIGHTNINGSERVER [struct.GatewayLightningServer.html]<T>

source
[../../../src/ln_gateway/Users/ethantuttle/code/fedimint/up/fedimint-chat-bot/data/fedimint-docs/release/build/ln-gateway-3e20b0116ec04f2c/out/gatewaylnrpc.rs.html#404-406]

PUB FN NEW(INNER: T) -> SELF

source
[../../../src/ln_gateway/Users/ethantuttle/code/fedimint/up/fedimint-chat-bot/data/fedimint-docs/release/build/ln-gateway-3e20b0116ec04f2c/out/gatewaylnrpc.rs.html#407-414]

PUB FN FROM_ARC(INNER: ARC [https://doc.rust-lang.org/1.67.0/alloc/sync/struct.Arc.html]<T>) -> SELF

source
[../../../src/ln_gateway/Users/ethantuttle/code/fedimint/up/fedimint-chat-bot/data/fedimint-docs/release/build/ln-gateway-3e20b0116ec04f2c/out/gatewaylnrpc.rs.html#415-423]

PUB FN WITH_INTERCEPTOR<F>(
    INNER: T,
    INTERCEPTOR: F
) -> INTERCEPTEDSERVICE [https://docs.rs/tonic/0.8.3/tonic/service/interceptor/struct.InterceptedService.html]<SELF, F>WHERE
    F: INTERCEPTOR [https://docs.rs/tonic/0.8.3/tonic/service/interceptor/trait.Interceptor.html],

source
[../../../src/ln_gateway/Users/ethantuttle/code/fedimint/up/fedimint-chat-bot/data/fedimint-docs/release/build/ln-gateway-3e20b0116ec04f2c/out/gatewaylnrpc.rs.html#426-429]

PUB FN ACCEPT_COMPRESSED(SELF, ENCODING: COMPRESSIONENCODING
[https://docs.rs/tonic/0.8.3/tonic/codec/compression/enum.CompressionEncoding.html]) -> SELF

Enable decompressing requests with the given encoding.

source
[../../../src/ln_gateway/Users/ethantuttle/code/fedimint/up/fedimint-chat-bot/data/fedimint-docs/release/build/ln-gateway-3e20b0116ec04f2c/out/gatewaylnrpc.rs.html#432-435]

PUB FN SEND_COMPRESSED(SELF, ENCODING: COMPRESSIONENCODING
[https://docs.rs/tonic/0.8.3/tonic/codec/compression/enum.CompressionEncoding.html]) -> SELF

Compress responses with the given encoding, if the client supports it.


TRAIT IMPLEMENTATIONS§

source
[../../../src/ln_gateway/Users/ethantuttle/code/fedimint/up/fedimint-chat-bot/data/fedimint-docs/release/build/ln-gateway-3e20b0116ec04f2c/out/gatewaylnrpc.rs.html#667-676]§


IMPL<T: GATEWAYLIGHTNING [trait.GatewayLightning.html]> CLONE [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html] FOR
GATEWAYLIGHTNINGSERVER [struct.GatewayLightningServer.html]<T>

source
[../../../src/ln_gateway/Users/ethantuttle/code/fedimint/up/fedimint-chat-bot/data/fedimint-docs/release/build/ln-gateway-3e20b0116ec04f2c/out/gatewaylnrpc.rs.html#668-675]§

FN CLONE [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html#tymethod.clone](&SELF) -> SELF

Returns a copy of the value. Read more [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html#tymethod.clone]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/clone.rs.html#132-134]§

FN CLONE_FROM [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html#method.clone_from](&MUT SELF, SOURCE: &
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)

Performs copy-assignment from source. Read more [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html#method.clone_from]
source
[../../../src/ln_gateway/Users/ethantuttle/code/fedimint/up/fedimint-chat-bot/data/fedimint-docs/release/build/ln-gateway-3e20b0116ec04f2c/out/gatewaylnrpc.rs.html#396]§


IMPL<T: DEBUG [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Debug.html] + GATEWAYLIGHTNING [trait.GatewayLightning.html]> DEBUG
[https://doc.rust-lang.org/1.67.0/core/fmt/trait.Debug.html] FOR GATEWAYLIGHTNINGSERVER [struct.GatewayLightningServer.html]<T>

source
[../../../src/ln_gateway/Users/ethantuttle/code/fedimint/up/fedimint-chat-bot/data/fedimint-docs/release/build/ln-gateway-3e20b0116ec04f2c/out/gatewaylnrpc.rs.html#396]§

FN FMT [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Debug.html#tymethod.fmt](&SELF, F: &MUT FORMATTER
[https://doc.rust-lang.org/1.67.0/core/fmt/struct.Formatter.html]<'_>) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/fmt/type.Result.html]

Formats the value using the given formatter. Read more [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Debug.html#tymethod.fmt]
source
[../../../src/ln_gateway/Users/ethantuttle/code/fedimint/up/fedimint-chat-bot/data/fedimint-docs/release/build/ln-gateway-3e20b0116ec04f2c/out/gatewaylnrpc.rs.html#687-689]§


IMPL<T: GATEWAYLIGHTNING [trait.GatewayLightning.html]> NAMEDSERVICE
[https://docs.rs/tonic/0.8.3/tonic/server/trait.NamedService.html] FOR GATEWAYLIGHTNINGSERVER
[struct.GatewayLightningServer.html]<T>

source
[../../../src/ln_gateway/Users/ethantuttle/code/fedimint/up/fedimint-chat-bot/data/fedimint-docs/release/build/ln-gateway-3e20b0116ec04f2c/out/gatewaylnrpc.rs.html#688]§

CONST NAME [https://docs.rs/tonic/0.8.3/tonic/server/trait.NamedService.html#associatedconstant.NAME]: &'STATIC STR
[https://doc.rust-lang.org/1.67.0/std/primitive.str.html] = "GATEWAYLNRPC.GATEWAYLIGHTNING"

The Service-Name as described here [https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md#requests]. Read more
[https://docs.rs/tonic/0.8.3/tonic/server/trait.NamedService.html#associatedconstant.NAME]
source
[../../../src/ln_gateway/Users/ethantuttle/code/fedimint/up/fedimint-chat-bot/data/fedimint-docs/release/build/ln-gateway-3e20b0116ec04f2c/out/gatewaylnrpc.rs.html#437-666]§


IMPL<T, B> SERVICE<REQUEST [https://docs.rs/http/0.2.9/http/request/struct.Request.html]<B>> FOR GATEWAYLIGHTNINGSERVER
[struct.GatewayLightningServer.html]<T>WHERE
    T: GATEWAYLIGHTNING [trait.GatewayLightning.html],
    B: BODY [https://docs.rs/http-body/0.4.5/http_body/trait.Body.html] + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'STATIC,
    B::ERROR [https://docs.rs/http-body/0.4.5/http_body/trait.Body.html#associatedtype.Error]: INTO
[https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<STDERROR> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'STATIC,

§

TYPE RESPONSE = RESPONSE [https://docs.rs/http/0.2.9/http/response/struct.Response.html]<UNSYNCBOXBODY
[https://docs.rs/http-body/0.4.5/http_body/combinators/box_body/struct.UnsyncBoxBody.html]<BYTES, STATUS
[https://docs.rs/tonic/0.8.3/tonic/status/struct.Status.html]>>

Responses given by the service.
§

TYPE ERROR = INFALLIBLE [https://doc.rust-lang.org/1.67.0/core/convert/enum.Infallible.html]

Errors produced by the service.
§

TYPE FUTURE = PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<<GATEWAYLIGHTNINGSERVER [struct.GatewayLightningServer.html]<T> AS
SERVICE<REQUEST [https://docs.rs/http/0.2.9/http/request/struct.Request.html]<B>>>::RESPONSE, <GATEWAYLIGHTNINGSERVER
[struct.GatewayLightningServer.html]<T> AS SERVICE<REQUEST
[https://docs.rs/http/0.2.9/http/request/struct.Request.html]<B>>>::ERROR>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'STATIC, GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>>

The future response value.
source
[../../../src/ln_gateway/Users/ethantuttle/code/fedimint/up/fedimint-chat-bot/data/fedimint-docs/release/build/ln-gateway-3e20b0116ec04f2c/out/gatewaylnrpc.rs.html#446-451]§

FN POLL_READY(&MUT SELF, _CX: &MUT CONTEXT [https://doc.rust-lang.org/1.67.0/core/task/wake/struct.Context.html]<'_>) -> POLL
[https://doc.rust-lang.org/1.67.0/core/task/poll/enum.Poll.html]<RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
SELF::ERROR>>

Returns Poll::Ready(Ok(())) when the service is able to process requests. Read more
source
[../../../src/ln_gateway/Users/ethantuttle/code/fedimint/up/fedimint-chat-bot/data/fedimint-docs/release/build/ln-gateway-3e20b0116ec04f2c/out/gatewaylnrpc.rs.html#452-665]§

FN CALL(&MUT SELF, REQ: REQUEST [https://docs.rs/http/0.2.9/http/request/struct.Request.html]<B>) -> SELF::FUTURE

Process the request and return the response asynchronously. Read more


AUTO TRAIT IMPLEMENTATIONS§

§


IMPL<T> REFUNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.RefUnwindSafe.html] FOR
GATEWAYLIGHTNINGSERVER [struct.GatewayLightningServer.html]<T>WHERE
    T: REFUNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.RefUnwindSafe.html],

§


IMPL<T> SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] FOR GATEWAYLIGHTNINGSERVER
[struct.GatewayLightningServer.html]<T>

§


IMPL<T> SYNC [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html] FOR GATEWAYLIGHTNINGSERVER
[struct.GatewayLightningServer.html]<T>

§


IMPL<T> UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html] FOR GATEWAYLIGHTNINGSERVER
[struct.GatewayLightningServer.html]<T>

§


IMPL<T> UNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.UnwindSafe.html] FOR GATEWAYLIGHTNINGSERVER
[struct.GatewayLightningServer.html]<T>WHERE
    T: REFUNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.RefUnwindSafe.html],


BLANKET IMPLEMENTATIONS§

source [https://doc.rust-lang.org/1.67.0/src/core/any.rs.html#200]§


IMPL<T> ANY [https://doc.rust-lang.org/1.67.0/core/any/trait.Any.html] FOR TWHERE
    T: 'STATIC + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

source [https://doc.rust-lang.org/1.67.0/src/core/any.rs.html#201]§

FN TYPE_ID [https://doc.rust-lang.org/1.67.0/core/any/trait.Any.html#tymethod.type_id](&SELF) -> TYPEID
[https://doc.rust-lang.org/1.67.0/core/any/struct.TypeId.html]

Gets the TypeId of self. Read more [https://doc.rust-lang.org/1.67.0/core/any/trait.Any.html#tymethod.type_id]
source [https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#211]§


IMPL<T> BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<T> FOR TWHERE
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

const: unstable [https://github.com/rust-lang/rust/issues/91522] · source
[https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#213]§

FN BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html#tymethod.borrow](&SELF) -> &
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T

Immutably borrows from an owned value. Read more [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html#tymethod.borrow]
source [https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#220]§


IMPL<T> BORROWMUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html]<T> FOR TWHERE
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

const: unstable [https://github.com/rust-lang/rust/issues/91522] · source
[https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#221]§

FN BORROW_MUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut](&MUT SELF) -> &MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T

Mutably borrows from an owned value. Read more
[https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut]
§


IMPL<T> CONV FOR T

§

FN CONV<T>(SELF) -> TWHERE
    SELF: INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<T>,

Converts self into T using Into<T>. Read more
§


IMPL<T> FMTFORWARD FOR T

§

FN FMT_BINARY(SELF) -> FMTBINARY<SELF>WHERE
    SELF: BINARY [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Binary.html],

Causes self to use its Binary implementation when Debug-formatted.
§

FN FMT_DISPLAY(SELF) -> FMTDISPLAY<SELF>WHERE
    SELF: DISPLAY [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Display.html],

Causes self to use its Display implementation when Debug-formatted. Read more
§

FN FMT_LOWER_EXP(SELF) -> FMTLOWEREXP<SELF>WHERE
    SELF: LOWEREXP [https://doc.rust-lang.org/1.67.0/core/fmt/trait.LowerExp.html],

Causes self to use its LowerExp implementation when Debug-formatted. Read more
§

FN FMT_LOWER_HEX(SELF) -> FMTLOWERHEX<SELF>WHERE
    SELF: LOWERHEX [https://doc.rust-lang.org/1.67.0/core/fmt/trait.LowerHex.html],

Causes self to use its LowerHex implementation when Debug-formatted. Read more
§

FN FMT_OCTAL(SELF) -> FMTOCTAL<SELF>WHERE
    SELF: OCTAL [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Octal.html],

Causes self to use its Octal implementation when Debug-formatted.
§

FN FMT_POINTER(SELF) -> FMTPOINTER<SELF>WHERE
    SELF: POINTER [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Pointer.html],

Causes self to use its Pointer implementation when Debug-formatted. Read more
§

FN FMT_UPPER_EXP(SELF) -> FMTUPPEREXP<SELF>WHERE
    SELF: UPPEREXP [https://doc.rust-lang.org/1.67.0/core/fmt/trait.UpperExp.html],

Causes self to use its UpperExp implementation when Debug-formatted. Read more
§

FN FMT_UPPER_HEX(SELF) -> FMTUPPERHEX<SELF>WHERE
    SELF: UPPERHEX [https://doc.rust-lang.org/1.67.0/core/fmt/trait.UpperHex.html],

Causes self to use its UpperHex implementation when Debug-formatted. Read more
§

FN FMT_LIST(SELF) -> FMTLIST<SELF>WHERE
    &'A [https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF: FOR<'A> INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html],

Formats each item in a sequence. Read more
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#733]§


IMPL<T> FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<T> FOR T

const: unstable [https://github.com/rust-lang/rust/issues/88674] · source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#736]§

FN FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html#tymethod.from](T: T) -> T

Returns the argument unchanged.

§


IMPL<T> FROMREF<T> FOR TWHERE
    T: CLONE [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html],

§

FN FROM_REF(INPUT: & [https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T) -> T

Converts to this type from a reference to the input type.
§


IMPL<T> FUTUREEXT FOR T

§

FN WITH_CONTEXT(SELF, OTEL_CX: CONTEXT) -> WITHCONTEXT<SELF>

Attaches the provided Context [crate::Context] to this type, returning a WithContext wrapper. Read more
§

FN WITH_CURRENT_CONTEXT(SELF) -> WITHCONTEXT<SELF>

Attaches the current Context [crate::Context] to this type, returning a WithContext wrapper. Read more
source [https://docs.rs/tonic/0.9.2/src/tonic/client/service.rs.html#32]§


IMPL<T, REQBODY, RESBODY> GRPCSERVICE [https://docs.rs/tonic/0.9.2/tonic/client/service/trait.GrpcService.html]<REQBODY> FOR
TWHERE
    T: SERVICE<REQUEST [https://docs.rs/http/0.2.9/http/request/struct.Request.html]<REQBODY>, RESPONSE = RESPONSE
[https://docs.rs/http/0.2.9/http/response/struct.Response.html]<RESBODY>>,
    <T AS SERVICE<REQUEST [https://docs.rs/http/0.2.9/http/request/struct.Request.html]<REQBODY>>>::ERROR: INTO
[https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN ERROR
[https://doc.rust-lang.org/1.67.0/core/error/trait.Error.html] + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + SYNC
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html] + 'STATIC, GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>>,
    RESBODY: BODY [https://docs.rs/http-body/0.4.5/http_body/trait.Body.html],
    <RESBODY AS BODY [https://docs.rs/http-body/0.4.5/http_body/trait.Body.html]>::ERROR
[https://docs.rs/http-body/0.4.5/http_body/trait.Body.html#associatedtype.Error]: INTO
[https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN ERROR
[https://doc.rust-lang.org/1.67.0/core/error/trait.Error.html] + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + SYNC
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html] + 'STATIC, GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>>,

§

TYPE RESPONSEBODY [https://docs.rs/tonic/0.9.2/tonic/client/service/trait.GrpcService.html#associatedtype.ResponseBody] = RESBODY

Responses body given by the service.
§

TYPE ERROR [https://docs.rs/tonic/0.9.2/tonic/client/service/trait.GrpcService.html#associatedtype.Error] = <T AS SERVICE<REQUEST
[https://docs.rs/http/0.2.9/http/request/struct.Request.html]<REQBODY>>>::ERROR

Errors produced by the service.
§

TYPE FUTURE [https://docs.rs/tonic/0.9.2/tonic/client/service/trait.GrpcService.html#associatedtype.Future] = <T AS
SERVICE<REQUEST [https://docs.rs/http/0.2.9/http/request/struct.Request.html]<REQBODY>>>::FUTURE

The future response value.
source [https://docs.rs/tonic/0.9.2/src/tonic/client/service.rs.html#43]§

FN POLL_READY [https://docs.rs/tonic/0.9.2/tonic/client/service/trait.GrpcService.html#tymethod.poll_ready](
    &MUT SELF,
    CX: &MUT CONTEXT [https://doc.rust-lang.org/1.67.0/core/task/wake/struct.Context.html]<'_>
) -> POLL [https://doc.rust-lang.org/1.67.0/core/task/poll/enum.Poll.html]<RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html], <T
AS GRPCSERVICE [https://docs.rs/tonic/0.9.2/tonic/client/service/trait.GrpcService.html]<REQBODY>>::ERROR
[https://docs.rs/tonic/0.9.2/tonic/client/service/trait.GrpcService.html#associatedtype.Error]>>

Returns Ready when the service is able to process requests. Read more
[https://docs.rs/tonic/0.9.2/tonic/client/service/trait.GrpcService.html#tymethod.poll_ready]
source [https://docs.rs/tonic/0.9.2/src/tonic/client/service.rs.html#47]§

FN CALL [https://docs.rs/tonic/0.9.2/tonic/client/service/trait.GrpcService.html#tymethod.call](
    &MUT SELF,
    REQUEST: REQUEST [https://docs.rs/http/0.2.9/http/request/struct.Request.html]<REQBODY>
) -> <T AS GRPCSERVICE [https://docs.rs/tonic/0.9.2/tonic/client/service/trait.GrpcService.html]<REQBODY>>::FUTURE
[https://docs.rs/tonic/0.9.2/tonic/client/service/trait.GrpcService.html#associatedtype.Future]

Process the request and return the response asynchronously. Read more
[https://docs.rs/tonic/0.9.2/tonic/client/service/trait.GrpcService.html#tymethod.call]
source [https://docs.rs/tonic/0.8.3/src/tonic/client/service.rs.html#32]§


IMPL<T, REQBODY, RESBODY> GRPCSERVICE [https://docs.rs/tonic/0.8.3/tonic/client/service/trait.GrpcService.html]<REQBODY> FOR
TWHERE
    T: SERVICE<REQUEST [https://docs.rs/http/0.2.9/http/request/struct.Request.html]<REQBODY>, RESPONSE = RESPONSE
[https://docs.rs/http/0.2.9/http/response/struct.Response.html]<RESBODY>>,
    <T AS SERVICE<REQUEST [https://docs.rs/http/0.2.9/http/request/struct.Request.html]<REQBODY>>>::ERROR: INTO
[https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN ERROR
[https://doc.rust-lang.org/1.67.0/core/error/trait.Error.html] + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + SYNC
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html] + 'STATIC, GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>>,
    RESBODY: BODY [https://docs.rs/http-body/0.4.5/http_body/trait.Body.html],
    <RESBODY AS BODY [https://docs.rs/http-body/0.4.5/http_body/trait.Body.html]>::ERROR
[https://docs.rs/http-body/0.4.5/http_body/trait.Body.html#associatedtype.Error]: INTO
[https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN ERROR
[https://doc.rust-lang.org/1.67.0/core/error/trait.Error.html] + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + SYNC
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html] + 'STATIC, GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>>,

§

TYPE RESPONSEBODY [https://docs.rs/tonic/0.8.3/tonic/client/service/trait.GrpcService.html#associatedtype.ResponseBody] = RESBODY

Responses body given by the service.
§

TYPE ERROR [https://docs.rs/tonic/0.8.3/tonic/client/service/trait.GrpcService.html#associatedtype.Error] = <T AS SERVICE<REQUEST
[https://docs.rs/http/0.2.9/http/request/struct.Request.html]<REQBODY>>>::ERROR

Errors produced by the service.
§

TYPE FUTURE [https://docs.rs/tonic/0.8.3/tonic/client/service/trait.GrpcService.html#associatedtype.Future] = <T AS
SERVICE<REQUEST [https://docs.rs/http/0.2.9/http/request/struct.Request.html]<REQBODY>>>::FUTURE

The future response value.
source [https://docs.rs/tonic/0.8.3/src/tonic/client/service.rs.html#43]§

FN POLL_READY [https://docs.rs/tonic/0.8.3/tonic/client/service/trait.GrpcService.html#tymethod.poll_ready](
    &MUT SELF,
    CX: &MUT CONTEXT [https://doc.rust-lang.org/1.67.0/core/task/wake/struct.Context.html]<'_>
) -> POLL [https://doc.rust-lang.org/1.67.0/core/task/poll/enum.Poll.html]<RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html], <T
AS GRPCSERVICE [https://docs.rs/tonic/0.8.3/tonic/client/service/trait.GrpcService.html]<REQBODY>>::ERROR
[https://docs.rs/tonic/0.8.3/tonic/client/service/trait.GrpcService.html#associatedtype.Error]>>

Returns Ready when the service is able to process requests. Read more
[https://docs.rs/tonic/0.8.3/tonic/client/service/trait.GrpcService.html#tymethod.poll_ready]
source [https://docs.rs/tonic/0.8.3/src/tonic/client/service.rs.html#47]§

FN CALL [https://docs.rs/tonic/0.8.3/tonic/client/service/trait.GrpcService.html#tymethod.call](
    &MUT SELF,
    REQUEST: REQUEST [https://docs.rs/http/0.2.9/http/request/struct.Request.html]<REQBODY>
) -> <T AS GRPCSERVICE [https://docs.rs/tonic/0.8.3/tonic/client/service/trait.GrpcService.html]<REQBODY>>::FUTURE
[https://docs.rs/tonic/0.8.3/tonic/client/service/trait.GrpcService.html#associatedtype.Future]

Process the request and return the response asynchronously. Read more
[https://docs.rs/tonic/0.8.3/tonic/client/service/trait.GrpcService.html#tymethod.call]
source [https://docs.rs/tonic/0.6.2/src/tonic/client/service.rs.html#32]§


IMPL<T, REQBODY, RESBODY> GRPCSERVICE [https://docs.rs/tonic/0.6.2/tonic/client/service/trait.GrpcService.html]<REQBODY> FOR
TWHERE
    T: SERVICE<REQUEST [https://docs.rs/http/0.2.9/http/request/struct.Request.html]<REQBODY>, RESPONSE = RESPONSE
[https://docs.rs/http/0.2.9/http/response/struct.Response.html]<RESBODY>>,
    <T AS SERVICE<REQUEST [https://docs.rs/http/0.2.9/http/request/struct.Request.html]<REQBODY>>>::ERROR: INTO
[https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN ERROR
[https://doc.rust-lang.org/1.67.0/core/error/trait.Error.html] + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + SYNC
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html] + 'STATIC, GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>>,
    RESBODY: BODY [https://docs.rs/http-body/0.4.5/http_body/trait.Body.html],
    <RESBODY AS BODY [https://docs.rs/http-body/0.4.5/http_body/trait.Body.html]>::ERROR
[https://docs.rs/http-body/0.4.5/http_body/trait.Body.html#associatedtype.Error]: INTO
[https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN ERROR
[https://doc.rust-lang.org/1.67.0/core/error/trait.Error.html] + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + SYNC
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html] + 'STATIC, GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>>,

§

TYPE RESPONSEBODY [https://docs.rs/tonic/0.6.2/tonic/client/service/trait.GrpcService.html#associatedtype.ResponseBody] = RESBODY

Responses body given by the service.
§

TYPE ERROR [https://docs.rs/tonic/0.6.2/tonic/client/service/trait.GrpcService.html#associatedtype.Error] = <T AS SERVICE<REQUEST
[https://docs.rs/http/0.2.9/http/request/struct.Request.html]<REQBODY>>>::ERROR

Errors produced by the service.
§

TYPE FUTURE [https://docs.rs/tonic/0.6.2/tonic/client/service/trait.GrpcService.html#associatedtype.Future] = <T AS
SERVICE<REQUEST [https://docs.rs/http/0.2.9/http/request/struct.Request.html]<REQBODY>>>::FUTURE

The future response value.
source [https://docs.rs/tonic/0.6.2/src/tonic/client/service.rs.html#43]§

FN POLL_READY [https://docs.rs/tonic/0.6.2/tonic/client/service/trait.GrpcService.html#tymethod.poll_ready](
    &MUT SELF,
    CX: &MUT CONTEXT [https://doc.rust-lang.org/1.67.0/core/task/wake/struct.Context.html]<'_>
) -> POLL [https://doc.rust-lang.org/1.67.0/core/task/poll/enum.Poll.html]<RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html], <T
AS GRPCSERVICE [https://docs.rs/tonic/0.6.2/tonic/client/service/trait.GrpcService.html]<REQBODY>>::ERROR
[https://docs.rs/tonic/0.6.2/tonic/client/service/trait.GrpcService.html#associatedtype.Error]>>

Returns Ready when the service is able to process requests. Read more
[https://docs.rs/tonic/0.6.2/tonic/client/service/trait.GrpcService.html#tymethod.poll_ready]
source [https://docs.rs/tonic/0.6.2/src/tonic/client/service.rs.html#47]§

FN CALL [https://docs.rs/tonic/0.6.2/tonic/client/service/trait.GrpcService.html#tymethod.call](
    &MUT SELF,
    REQUEST: REQUEST [https://docs.rs/http/0.2.9/http/request/struct.Request.html]<REQBODY>
) -> <T AS GRPCSERVICE [https://docs.rs/tonic/0.6.2/tonic/client/service/trait.GrpcService.html]<REQBODY>>::FUTURE
[https://docs.rs/tonic/0.6.2/tonic/client/service/trait.GrpcService.html#associatedtype.Future]

Process the request and return the response asynchronously. Read more
[https://docs.rs/tonic/0.6.2/tonic/client/service/trait.GrpcService.html#tymethod.call]
source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#276]§


IMPL<T> INSTRUMENT [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.Instrument.html] FOR T

source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#82]§

FN INSTRUMENT [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.Instrument.html#method.instrument](SELF, SPAN: SPAN
[https://docs.rs/tracing/0.1.37/tracing/span/struct.Span.html]) -> INSTRUMENTED
[https://docs.rs/tracing/0.1.37/tracing/instrument/struct.Instrumented.html]<SELF>

Instruments this type with the provided Span [https://docs.rs/tracing/0.1.37/tracing/span/struct.Span.html], returning an
Instrumented wrapper. Read more [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.Instrument.html#method.instrument]
source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#121]§

FN IN_CURRENT_SPAN [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.Instrument.html#method.in_current_span](SELF) ->
INSTRUMENTED [https://docs.rs/tracing/0.1.37/tracing/instrument/struct.Instrumented.html]<SELF>

Instruments this type with the current [https://docs.rs/tracing/0.1.37/tracing/span/struct.Span.html#method.current] Span
[https://docs.rs/tracing/0.1.37/tracing/span/struct.Span.html], returning an Instrumented wrapper. Read more
[https://docs.rs/tracing/0.1.37/tracing/instrument/trait.Instrument.html#method.in_current_span]
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#717]§


IMPL<T, U> INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<U> FOR TWHERE
    U: FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<T>,

const: unstable [https://github.com/rust-lang/rust/issues/88674] · source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#725]§

FN INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html#tymethod.into](SELF) -> U

Calls U::from(self).

That is, this conversion is whatever the implementation of From [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<T>
for U chooses to do.

source [https://docs.rs/tonic/0.9.2/src/tonic/request.rs.html#384]§


IMPL<T> INTOREQUEST [https://docs.rs/tonic/0.9.2/tonic/request/trait.IntoRequest.html]<T> FOR T

source [https://docs.rs/tonic/0.9.2/src/tonic/request.rs.html#385]§

FN INTO_REQUEST [https://docs.rs/tonic/0.9.2/tonic/request/trait.IntoRequest.html#tymethod.into_request](SELF) -> REQUEST
[https://docs.rs/tonic/0.9.2/tonic/request/struct.Request.html]<T>

Wrap the input message T in a tonic::Request
source [https://docs.rs/tonic/0.8.3/src/tonic/request.rs.html#350]§


IMPL<T> INTOREQUEST [https://docs.rs/tonic/0.8.3/tonic/request/trait.IntoRequest.html]<T> FOR T

source [https://docs.rs/tonic/0.8.3/src/tonic/request.rs.html#351]§

FN INTO_REQUEST [https://docs.rs/tonic/0.8.3/tonic/request/trait.IntoRequest.html#tymethod.into_request](SELF) -> REQUEST
[https://docs.rs/tonic/0.8.3/tonic/request/struct.Request.html]<T>

Wrap the input message T in a tonic::Request
source [https://docs.rs/tonic/0.6.2/src/tonic/request.rs.html#346]§


IMPL<T> INTOREQUEST [https://docs.rs/tonic/0.6.2/tonic/request/trait.IntoRequest.html]<T> FOR T

source [https://docs.rs/tonic/0.6.2/src/tonic/request.rs.html#347]§

FN INTO_REQUEST [https://docs.rs/tonic/0.6.2/tonic/request/trait.IntoRequest.html#tymethod.into_request](SELF) -> REQUEST
[https://docs.rs/tonic/0.6.2/tonic/request/struct.Request.html]<T>

Wrap the input message T in a tonic::Request
§


IMPL<T> PIPE FOR TWHERE
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

§

FN PIPE<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](SELF) -> R) -> RWHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Pipes by value. This is generally the method you want to use. Read more
§

FN PIPE_REF<'A, R>(&'A SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF) -> R) -> RWHERE
    R: 'A,

Borrows self and passes that borrow into the pipe function. Read more
§

FN PIPE_REF_MUT<'A, R>(&'A MUT SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
MUT [https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF) -> R) -> RWHERE
    R: 'A,

Mutably borrows self and passes that borrow into the pipe function. Read more
§

FN PIPE_BORROW<'A, B, R>(&'A SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B) -> R) -> RWHERE
    SELF: BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<B>,
    B: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Borrows self, then passes self.borrow() into the pipe function. Read more
§

FN PIPE_BORROW_MUT<'A, B, R>(
    &'A MUT SELF,
    FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B) -> R
) -> RWHERE
    SELF: BORROWMUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html]<B>,
    B: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Mutably borrows self, then passes self.borrow_mut() into the pipe function. Read more
§

FN PIPE_AS_REF<'A, U, R>(&'A SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]U) -> R) -> RWHERE
    SELF: ASREF [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsRef.html]<U>,
    U: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Borrows self, then passes self.as_ref() into the pipe function.
§

FN PIPE_AS_MUT<'A, U, R>(&'A MUT SELF, FUNC: IMPL FNONCE
[https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]U) -> R) -> RWHERE
    SELF: ASMUT [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsMut.html]<U>,
    U: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Mutably borrows self, then passes self.as_mut() into the pipe function. Read more
§

FN PIPE_DEREF<'A, T, R>(&'A SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T) -> R) -> RWHERE
    SELF: DEREF [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html]<TARGET = T>,
    T: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Borrows self, then passes self.deref() into the pipe function.
§

FN PIPE_DEREF_MUT<'A, T, R>(&'A MUT SELF, FUNC: IMPL FNONCE
[https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T) -> R) -> RWHERE
    SELF: DEREFMUT [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.DerefMut.html]<TARGET = T> + DEREF
[https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html],
    T: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Mutably borrows self, then passes self.deref_mut() into the pipe function. Read more
source [https://docs.rs/typenum/1.16.0/src/typenum/type_operators.rs.html#34]§


IMPL<T> SAME [https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Same.html]<T> FOR T

§

TYPE OUTPUT [https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Same.html#associatedtype.Output] = T

Should always be Self
§


IMPL<S, R> SERVICEEXT<R> FOR SWHERE
    S: SERVICE<R>,

§

FN INTO_MAKE_SERVICE(SELF) -> INTOMAKESERVICE<S>

Convert this service into a MakeService [tower::make::MakeService], that is a [Service] whose response is another service. Read
more
§

FN INTO_MAKE_SERVICE_WITH_CONNECT_INFO<C>(
    SELF
) -> INTOMAKESERVICEWITHCONNECTINFO<S, C>

Convert this service into a MakeService [tower::make::MakeService], that will store C’s associated ConnectInfo in a request
extension such that ConnectInfo [crate::extract::connect_info::ConnectInfo] can extract it. Read more
§


IMPL<T, REQUEST> SERVICEEXT<REQUEST> FOR TWHERE
    T: SERVICE<REQUEST> + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

§

FN READY(&MUT SELF) -> READY<'_, SELF, REQUEST>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Yields a mutable reference to the service when it is ready to accept a request.
§

FN READY_AND(&MUT SELF) -> READY<'_, SELF, REQUEST>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

👎Deprecated since 0.4.6: please use the ServiceExt::ready method instead
Yields a mutable reference to the service when it is ready to accept a request.
§

FN READY_ONESHOT(SELF) -> READYONESHOT<SELF, REQUEST>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Yields the service when it is ready to accept a request.
§

FN ONESHOT(SELF, REQ: REQUEST) -> ONESHOT<SELF, REQUEST>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Consume this Service, calling with the providing request once it is ready.
§

FN CALL_ALL<S>(SELF, REQS: S) -> CALLALL<SELF, S>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::ERROR: INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN ERROR
[https://doc.rust-lang.org/1.67.0/core/error/trait.Error.html] + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + SYNC
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html] + 'STATIC, GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>>,
    S: STREAM<ITEM = REQUEST>,

Process all requests from the given Stream [https://docs.rs/futures/latest/futures/stream/trait.Stream.html], and produce a Stream
[https://docs.rs/futures/latest/futures/stream/trait.Stream.html] of their responses. Read more
§

FN AND_THEN<F>(SELF, F: F) -> ANDTHEN<SELF, F>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: CLONE [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html],

Executes a new future after this service’s future resolves. This does not alter the behaviour of the poll_ready
[crate::Service::poll_ready] method. Read more
§

FN MAP_RESPONSE<F, RESPONSE>(SELF, F: F) -> MAPRESPONSE<SELF, F>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](SELF::RESPONSE) -> RESPONSE + CLONE
[https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html],

Maps this service’s response value to a different value. This does not alter the behaviour of the poll_ready
[crate::Service::poll_ready] method. Read more
§

FN MAP_ERR<F, ERROR>(SELF, F: F) -> MAPERR<SELF, F>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](SELF::ERROR) -> ERROR + CLONE
[https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html],

Maps this service’s error value to a different value. This does not alter the behaviour of the poll_ready
[crate::Service::poll_ready] method. Read more
§

FN MAP_RESULT<F, RESPONSE, ERROR>(SELF, F: F) -> MAPRESULT<SELF, F>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    ERROR: FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<SELF::ERROR>,
    F: FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<SELF::RESPONSE, SELF::ERROR>) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<RESPONSE, ERROR> + CLONE
[https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html],

Maps this service’s result type (Result<Self::Response, Self::Error>) to a different value, regardless of whether the future
succeeds or fails. Read more
§

FN MAP_REQUEST<F, NEWREQUEST>(SELF, F: F) -> MAPREQUEST<SELF, F>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](NEWREQUEST) -> REQUEST,

Composes a function in front of the service. Read more
§

FN THEN<F, RESPONSE, ERROR, FUT>(SELF, F: F) -> THEN<SELF, F>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    ERROR: FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<SELF::ERROR>,
    F: FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<SELF::RESPONSE, SELF::ERROR>) -> FUT + CLONE
[https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html],
    FUT: FUTURE [https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<RESPONSE, ERROR>>,

Composes an asynchronous function after this service. Read more
§

FN MAP_FUTURE<F, FUT, RESPONSE, ERROR>(SELF, F: F) -> MAPFUTURE<SELF, F>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::FUTURE) -> FUT,
    ERROR: FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<SELF::ERROR>,
    FUT: FUTURE [https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<RESPONSE, ERROR>>,

Composes a function that transforms futures produced by the service. Read more
§

FN BOXED(SELF) -> BOXSERVICE<REQUEST, SELF::RESPONSE, SELF::ERROR>WHERE
    SELF: 'STATIC + SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html] + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html],
    SELF::FUTURE: 'STATIC + SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html],

Convert the service into a Service [crate::Service] + Send [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] trait
object. Read more
§

FN BOXED_CLONE(SELF) -> BOXCLONESERVICE<REQUEST, SELF::RESPONSE, SELF::ERROR>WHERE
    SELF: 'STATIC + CLONE [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html] + SIZED
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html] + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html],
    SELF::FUTURE: 'STATIC + SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html],

Convert the service into a Service [crate::Service] + Clone [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html] + Send
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] trait object. Read more
§


IMPL<T> TAP FOR T

§

FN TAP(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)) -> SELF

Immutable access to a value. Read more
§

FN TAP_MUT(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)) -> SELF

Mutable access to a value. Read more
§

FN TAP_BORROW<B>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B)) -> SELFWHERE
    SELF: BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<B>,
    B: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Immutable access to the Borrow<B> of a value. Read more
§

FN TAP_BORROW_MUT<B>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B)) -> SELFWHERE
    SELF: BORROWMUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html]<B>,
    B: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Mutable access to the BorrowMut<B> of a value. Read more
§

FN TAP_REF<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R)) -> SELFWHERE
    SELF: ASREF [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsRef.html]<R>,
    R: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Immutable access to the AsRef<R> view of a value. Read more
§

FN TAP_REF_MUT<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R)) -> SELFWHERE
    SELF: ASMUT [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsMut.html]<R>,
    R: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Mutable access to the AsMut<R> view of a value. Read more
§

FN TAP_DEREF<T>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)) -> SELFWHERE
    SELF: DEREF [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html]<TARGET = T>,
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Immutable access to the Deref::Target of a value. Read more
§

FN TAP_DEREF_MUT<T>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)) -> SELFWHERE
    SELF: DEREFMUT [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.DerefMut.html]<TARGET = T> + DEREF
[https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html],
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Mutable access to the Deref::Target of a value. Read more
§

FN TAP_DBG(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)) -> SELF

Calls .tap() only in debug builds, and is erased in release builds.
§

FN TAP_MUT_DBG(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)) -> SELF

Calls .tap_mut() only in debug builds, and is erased in release builds. Read more
§

FN TAP_BORROW_DBG<B>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B)) -> SELFWHERE
    SELF: BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<B>,
    B: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_borrow() only in debug builds, and is erased in release builds. Read more
§

FN TAP_BORROW_MUT_DBG<B>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B)) -> SELFWHERE
    SELF: BORROWMUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html]<B>,
    B: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_borrow_mut() only in debug builds, and is erased in release builds. Read more
§

FN TAP_REF_DBG<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R)) -> SELFWHERE
    SELF: ASREF [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsRef.html]<R>,
    R: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_ref() only in debug builds, and is erased in release builds. Read more
§

FN TAP_REF_MUT_DBG<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R)) -> SELFWHERE
    SELF: ASMUT [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsMut.html]<R>,
    R: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_ref_mut() only in debug builds, and is erased in release builds. Read more
§

FN TAP_DEREF_DBG<T>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)) -> SELFWHERE
    SELF: DEREF [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html]<TARGET = T>,
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_deref() only in debug builds, and is erased in release builds. Read more
§

FN TAP_DEREF_MUT_DBG<T>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)) -> SELFWHERE
    SELF: DEREFMUT [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.DerefMut.html]<TARGET = T> + DEREF
[https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html],
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_deref_mut() only in debug builds, and is erased in release builds. Read more
source [https://doc.rust-lang.org/1.67.0/src/alloc/borrow.rs.html#82]§


IMPL<T> TOOWNED [https://doc.rust-lang.org/1.67.0/alloc/borrow/trait.ToOwned.html] FOR TWHERE
    T: CLONE [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html],

§

TYPE OWNED [https://doc.rust-lang.org/1.67.0/alloc/borrow/trait.ToOwned.html#associatedtype.Owned] = T

The resulting type after obtaining ownership.
source [https://doc.rust-lang.org/1.67.0/src/alloc/borrow.rs.html#87]§

FN TO_OWNED [https://doc.rust-lang.org/1.67.0/alloc/borrow/trait.ToOwned.html#tymethod.to_owned](&SELF) -> T

Creates owned data from borrowed data, usually by cloning. Read more
[https://doc.rust-lang.org/1.67.0/alloc/borrow/trait.ToOwned.html#tymethod.to_owned]
source [https://doc.rust-lang.org/1.67.0/src/alloc/borrow.rs.html#91]§

FN CLONE_INTO [https://doc.rust-lang.org/1.67.0/alloc/borrow/trait.ToOwned.html#method.clone_into](&SELF, TARGET: &MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)

Uses borrowed data to replace owned data, usually by cloning. Read more
[https://doc.rust-lang.org/1.67.0/alloc/borrow/trait.ToOwned.html#method.clone_into]
§


IMPL<T> TRYCONV FOR T

§

FN TRY_CONV<T>(SELF) -> RESULT [https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<T, SELF::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html#associatedtype.Error]>WHERE
    SELF: TRYINTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html]<T>,

Attempts to convert self into T using TryInto<T>. Read more
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#775]§


IMPL<T, U> TRYFROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<U> FOR TWHERE
    U: INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<T>,

§

TYPE ERROR [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error] = INFALLIBLE
[https://doc.rust-lang.org/1.67.0/core/convert/enum.Infallible.html]

The type returned in the event of a conversion error.
const: unstable [https://github.com/rust-lang/rust/issues/88674] · source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#781]§

FN TRY_FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#tymethod.try_from](VALUE: U) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<T, <T AS TRYFROM
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<U>>::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error]>

Performs the conversion.
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#760]§


IMPL<T, U> TRYINTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html]<U> FOR TWHERE
    U: TRYFROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<T>,

§

TYPE ERROR [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html#associatedtype.Error] = <U AS TRYFROM
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<T>>::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error]

The type returned in the event of a conversion error.
const: unstable [https://github.com/rust-lang/rust/issues/88674] · source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#766]§

FN TRY_INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html#tymethod.try_into](SELF) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<U, <U AS TRYFROM
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<T>>::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error]>

Performs the conversion.
§


IMPL<V, T> VZIP<V> FOR TWHERE
    V: MULTILANE<T>,

§

FN VZIP(SELF) -> V

source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#334]§


IMPL<T> WITHSUBSCRIBER [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.WithSubscriber.html] FOR T

source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#169-171]§

FN WITH_SUBSCRIBER [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.WithSubscriber.html#method.with_subscriber]<S>(SELF,
SUBSCRIBER: S) -> WITHDISPATCH [https://docs.rs/tracing/0.1.37/tracing/instrument/struct.WithDispatch.html]<SELF>WHERE
    S: INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<DISPATCH
[https://docs.rs/tracing-core/0.1.22/tracing_core/dispatcher/struct.Dispatch.html]>,

Attaches the provided Subscriber [https://docs.rs/tracing-core/0.1.22/tracing_core/subscriber/trait.Subscriber.html] to this type,
returning a WithDispatch [https://docs.rs/tracing/0.1.37/tracing/instrument/struct.WithDispatch.html] wrapper. Read more
[https://docs.rs/tracing/0.1.37/tracing/instrument/trait.WithSubscriber.html#method.with_subscriber]
source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#221]§

FN WITH_CURRENT_SUBSCRIBER
[https://docs.rs/tracing/0.1.37/tracing/instrument/trait.WithSubscriber.html#method.with_current_subscriber](SELF) -> WITHDISPATCH
[https://docs.rs/tracing/0.1.37/tracing/instrument/struct.WithDispatch.html]<SELF>

Attaches the current default [https://docs.rs/tracing/0.1.37/tracing/dispatcher/index.html#setting-the-default-subscriber]
Subscriber [https://docs.rs/tracing-core/0.1.22/tracing_core/subscriber/trait.Subscriber.html] to this type, returning a
WithDispatch [https://docs.rs/tracing/0.1.37/tracing/instrument/struct.WithDispatch.html] wrapper. Read more
[https://docs.rs/tracing/0.1.37/tracing/instrument/trait.WithSubscriber.html#method.with_current_subscriber]
source [../../../src/fedimint_core/task.rs.html#568]§


IMPL<T> MAYBESEND [../../../fedimint_core/task/trait.MaybeSend.html] FOR TWHERE
    T: SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html],

§


IMPL<T> MAYBESEND FOR TWHERE
    T: SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html],

source [../../../src/fedimint_core/task.rs.html#582]§


IMPL<T> MAYBESYNC [../../../fedimint_core/task/trait.MaybeSync.html] FOR TWHERE
    T: SYNC [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html],

