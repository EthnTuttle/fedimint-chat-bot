☰
logo [../static.files/rust-logo-151179464ae7ed46.svg]
../hkdf/index.html




logo [../static.files/rust-logo-151179464ae7ed46.svg]
../hkdf/index.html


HKDF


METHODS

 * derive
 * derive_hmac
 * from_prk
 * new


TRAIT IMPLEMENTATIONS

 * Clone


AUTO TRAIT IMPLEMENTATIONS

 * RefUnwindSafe
 * Send
 * Sync
 * Unpin
 * UnwindSafe


BLANKET IMPLEMENTATIONS

 * Any
 * Borrow<T>
 * BorrowMut<T>
 * From<T>
 * Into<U>
 * ToOwned
 * TryFrom<U>
 * TryInto<U>


IN HKDF [index.html]

? [../help.html]
Change settings [../static.files/wheel-5ec35bf9ca753509.svg]../settings.html


STRUCT HKDF [index.html]::HKDFCopy item path [../static.files/clipboard-7571035ce49a181d.svg]

source [../src/hkdf/lib.rs.html#28-30] · [−]

pub struct Hkdf<H: BitcoinHashtrait.BitcoinHash.html> { /* private fields */ }

Expand description

Implements the RFC5869 [https://www.rfc-editor.org/rfc/rfc5869] hash based key derivation function using the hash function H.


IMPLEMENTATIONS§

source [../src/hkdf/lib.rs.html#32-116]§


IMPL<H: BITCOINHASH [trait.BitcoinHash.html]> HKDF [struct.Hkdf.html]<H>

source [../src/hkdf/lib.rs.html#41-48]

PUB FN NEW(IKM: &[U8 [https://doc.rust-lang.org/1.67.0/std/primitive.u8.html]], SALT: OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<&[U8 [https://doc.rust-lang.org/1.67.0/std/primitive.u8.html]]>)
-> SELF

Run HKDF-extract and keep the resulting pseudo random key as internal state

INPUTS

 * ikm: Input keying material, secret key material our keys will be derived from
 * salt: Optional salt value, if not required set to &[0; H::LEN]. As noted in the RFC the salt value can also be a secret.

source [../src/hkdf/lib.rs.html#56-58]

PUB FN FROM_PRK(PRK: HMAC<H>) -> SELF

Construct the HKDF from a pseudo random key that has the correct distribution and length already (e.g. because it’s the output of
a previous HKDF round), skipping the HKDF-extract step. If in doubt, please use Hkdf::new instead!

See also Hkdf::derive_hmac [struct.Hkdf.html#method.derive_hmac].

source [../src/hkdf/lib.rs.html#70-105]

PUB FN DERIVE<CONST LEN: USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]>(&SELF, INFO: &[U8
[https://doc.rust-lang.org/1.67.0/std/primitive.u8.html]]) -> [U8 [https://doc.rust-lang.org/1.67.0/std/primitive.u8.html]; LEN
[https://doc.rust-lang.org/1.67.0/std/primitive.array.html]]

Run HKDF-expand to generate new key material

INPUTS

 * info: Defines which key to derive. Different values lead to different keys.
 * LEN: Defines the length of the key material to generate in octets. Note that LEN <= H::LEN * 255 has to be true.

PANICS

If LEN > H::LEN * 255.

source [../src/hkdf/lib.rs.html#110-115]

PUB FN DERIVE_HMAC(&SELF, INFO: &[U8 [https://doc.rust-lang.org/1.67.0/std/primitive.u8.html]]) -> HMAC<H>

Run HKDF-expand to generate new key material with L = H::LEN

See Hkdf::derive [struct.Hkdf.html#method.derive] for more information.


TRAIT IMPLEMENTATIONS§

source [../src/hkdf/lib.rs.html#27]§


IMPL<H: CLONE [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html] + BITCOINHASH [trait.BitcoinHash.html]> CLONE
[https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html] FOR HKDF [struct.Hkdf.html]<H>

source [../src/hkdf/lib.rs.html#27]§

FN CLONE [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html#tymethod.clone](&SELF) -> HKDF [struct.Hkdf.html]<H>

Returns a copy of the value. Read more [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html#tymethod.clone]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/clone.rs.html#132-134]§

FN CLONE_FROM [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html#method.clone_from](&MUT SELF, SOURCE: &
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)

Performs copy-assignment from source. Read more [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html#method.clone_from]


AUTO TRAIT IMPLEMENTATIONS§

§


IMPL<H> REFUNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.RefUnwindSafe.html] FOR HKDF
[struct.Hkdf.html]<H>WHERE
    H: REFUNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.RefUnwindSafe.html],

§


IMPL<H> SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] FOR HKDF [struct.Hkdf.html]<H>WHERE
    H: SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html],

§


IMPL<H> SYNC [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html] FOR HKDF [struct.Hkdf.html]<H>WHERE
    H: SYNC [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html],

§


IMPL<H> UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html] FOR HKDF [struct.Hkdf.html]<H>WHERE
    H: UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html],

§


IMPL<H> UNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.UnwindSafe.html] FOR HKDF
[struct.Hkdf.html]<H>WHERE
    H: UNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.UnwindSafe.html],


BLANKET IMPLEMENTATIONS§

source [https://doc.rust-lang.org/1.67.0/src/core/any.rs.html#200]§


IMPL<T> ANY [https://doc.rust-lang.org/1.67.0/core/any/trait.Any.html] FOR TWHERE
    T: 'STATIC + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

source [https://doc.rust-lang.org/1.67.0/src/core/any.rs.html#201]§

FN TYPE_ID [https://doc.rust-lang.org/1.67.0/core/any/trait.Any.html#tymethod.type_id](&SELF) -> TYPEID
[https://doc.rust-lang.org/1.67.0/core/any/struct.TypeId.html]

Gets the TypeId of self. Read more [https://doc.rust-lang.org/1.67.0/core/any/trait.Any.html#tymethod.type_id]
source [https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#211]§


IMPL<T> BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<T> FOR TWHERE
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

const: unstable [https://github.com/rust-lang/rust/issues/91522] · source
[https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#213]§

FN BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html#tymethod.borrow](&SELF) -> &
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T

Immutably borrows from an owned value. Read more [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html#tymethod.borrow]
source [https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#220]§


IMPL<T> BORROWMUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html]<T> FOR TWHERE
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

const: unstable [https://github.com/rust-lang/rust/issues/91522] · source
[https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#221]§

FN BORROW_MUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut](&MUT SELF) -> &MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T

Mutably borrows from an owned value. Read more
[https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut]
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#733]§


IMPL<T> FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<T> FOR T

const: unstable [https://github.com/rust-lang/rust/issues/88674] · source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#736]§

FN FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html#tymethod.from](T: T) -> T

Returns the argument unchanged.

source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#717]§


IMPL<T, U> INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<U> FOR TWHERE
    U: FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<T>,

const: unstable [https://github.com/rust-lang/rust/issues/88674] · source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#725]§

FN INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html#tymethod.into](SELF) -> U

Calls U::from(self).

That is, this conversion is whatever the implementation of From [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<T>
for U chooses to do.

source [https://doc.rust-lang.org/1.67.0/src/alloc/borrow.rs.html#82]§


IMPL<T> TOOWNED [https://doc.rust-lang.org/1.67.0/alloc/borrow/trait.ToOwned.html] FOR TWHERE
    T: CLONE [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html],

§

TYPE OWNED [https://doc.rust-lang.org/1.67.0/alloc/borrow/trait.ToOwned.html#associatedtype.Owned] = T

The resulting type after obtaining ownership.
source [https://doc.rust-lang.org/1.67.0/src/alloc/borrow.rs.html#87]§

FN TO_OWNED [https://doc.rust-lang.org/1.67.0/alloc/borrow/trait.ToOwned.html#tymethod.to_owned](&SELF) -> T

Creates owned data from borrowed data, usually by cloning. Read more
[https://doc.rust-lang.org/1.67.0/alloc/borrow/trait.ToOwned.html#tymethod.to_owned]
source [https://doc.rust-lang.org/1.67.0/src/alloc/borrow.rs.html#91]§

FN CLONE_INTO [https://doc.rust-lang.org/1.67.0/alloc/borrow/trait.ToOwned.html#method.clone_into](&SELF, TARGET: &MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)

Uses borrowed data to replace owned data, usually by cloning. Read more
[https://doc.rust-lang.org/1.67.0/alloc/borrow/trait.ToOwned.html#method.clone_into]
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#775]§


IMPL<T, U> TRYFROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<U> FOR TWHERE
    U: INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<T>,

§

TYPE ERROR [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error] = INFALLIBLE
[https://doc.rust-lang.org/1.67.0/core/convert/enum.Infallible.html]

The type returned in the event of a conversion error.
const: unstable [https://github.com/rust-lang/rust/issues/88674] · source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#781]§

FN TRY_FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#tymethod.try_from](VALUE: U) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<T, <T AS TRYFROM
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<U>>::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error]>

Performs the conversion.
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#760]§


IMPL<T, U> TRYINTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html]<U> FOR TWHERE
    U: TRYFROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<T>,

§

TYPE ERROR [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html#associatedtype.Error] = <U AS TRYFROM
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<T>>::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error]

The type returned in the event of a conversion error.
const: unstable [https://github.com/rust-lang/rust/issues/88674] · source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#766]§

FN TRY_INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html#tymethod.try_into](SELF) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<U, <U AS TRYFROM
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<T>>::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error]>

Performs the conversion.
