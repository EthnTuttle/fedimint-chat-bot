☰
logo [../../../static.files/rust-logo-151179464ae7ed46.svg]
../../../fedimint_server/index.html




logo [../../../static.files/rust-logo-151179464ae7ed46.svg]
../../../fedimint_server/index.html


BIDIFRAMED


METHODS

 * borrow_parts
 * new
 * new_from_tcp


TRAIT IMPLEMENTATIONS

 * Debug
 * FramedTransport<T>
 * Sink<T>
 * Stream


AUTO TRAIT IMPLEMENTATIONS

 * RefUnwindSafe
 * Send
 * Sync
 * Unpin
 * UnwindSafe


BLANKET IMPLEMENTATIONS

 * Any
 * Borrow<T>
 * BorrowMut<T>
 * Conv
 * FmtForward
 * From<T>
 * FutureExt
 * Instrument
 * Into<U>
 * IntoRequest<T>
 * IntoStreamingRequest
 * MaybeSend
 * MaybeSend
 * MaybeSync
 * Message
 * NextOrPending
 * Pipe
 * Same<T>
 * SinkExt<Item>
 * StreamExt
 * StreamExt
 * Tap
 * TryConv
 * TryFrom<U>
 * TryInto<U>
 * TryStream
 * TryStreamExt
 * VZip<V>
 * WithSubscriber


IN FEDIMINT_SERVER::NET::FRAMED [index.html]

? [../../../help.html]
Change settings [../../../static.files/wheel-5ec35bf9ca753509.svg]../../../settings.html


STRUCT FEDIMINT_SERVER [../../index.html]::NET [../index.html]::FRAMED [index.html]::BIDIFRAMEDCopy item path
[../../../static.files/clipboard-7571035ce49a181d.svg]

source [../../../src/fedimint_server/net/framed.rs.html#59-62] · [−]

pub struct BidiFramed<T, WH, RH> { /* private fields */ }

Expand description

Framed transport codec for streams

Wraps a stream S and allows sending packetized data of type T over it. Data items are encoded using bincode
[https://docs.rs/bincode/1.3.3/bincode/index.html] and the bytes are sent over the stream prepended with a length field.
BidiFramed implements Sink<T> and Stream<Item=Result<T, _>>.


IMPLEMENTATIONS§

source [../../../src/fedimint_server/net/framed.rs.html#70-99]§


IMPL<T, WH, RH> BIDIFRAMED [struct.BidiFramed.html]<T, WH, RH>WHERE
    WH: ASYNCWRITE,
    RH: ASYNCREAD,
    T: SERIALIZE [https://docs.rs/serde/1.0.163/serde/ser/trait.Serialize.html] + DESERIALIZEOWNED
[https://docs.rs/serde/1.0.163/serde/de/trait.DeserializeOwned.html],

source [../../../src/fedimint_server/net/framed.rs.html#80-89]

PUB FN NEW<S>(STREAM: S) -> BIDIFRAMED [struct.BidiFramed.html]<T, WRITEHALF<S>, READHALF<S>>WHERE
    S: ASYNCREAD + ASYNCWRITE,

Builds a new BidiFramed codec around a stream stream.

See TcpBidiFramed::new_from_tcp [struct.BidiFramed.html#method.new_from_tcp] for a more efficient version in case the stream is a
tokio TCP stream.

source [../../../src/fedimint_server/net/framed.rs.html#96-98]

PUB FN BORROW_PARTS(
    &MUT SELF
) -> (&MUT FRAMEDSINK [type.FramedSink.html]<WH, T>, &MUT FRAMEDSTREAM [type.FramedStream.html]<RH, T>)

Splits the codec in its sending and receiving parts

This can be useful in cases where potentially simultaneous read and write operations are required. Otherwise a we would need a
mutex to guard access.

source [../../../src/fedimint_server/net/framed.rs.html#101-117]§


IMPL<T> BIDIFRAMED [struct.BidiFramed.html]<T, OWNEDWRITEHALF, OWNEDREADHALF>WHERE
    T: SERIALIZE [https://docs.rs/serde/1.0.163/serde/ser/trait.Serialize.html] + DESERIALIZEOWNED
[https://docs.rs/serde/1.0.163/serde/de/trait.DeserializeOwned.html],

source [../../../src/fedimint_server/net/framed.rs.html#110-116]

PUB FN NEW_FROM_TCP(STREAM: TCPSTREAM) -> TCPBIDIFRAMED [type.TcpBidiFramed.html]<T>

Special constructor for tokio TCP connections.

Tokio TcpStream [tokio::net::TcpStream] implements an efficient method of splitting the stream into a read and a write half this
constructor takes advantage of.


TRAIT IMPLEMENTATIONS§

source [../../../src/fedimint_server/net/framed.rs.html#58]§


IMPL<T: DEBUG [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Debug.html], WH: DEBUG
[https://doc.rust-lang.org/1.67.0/core/fmt/trait.Debug.html], RH: DEBUG
[https://doc.rust-lang.org/1.67.0/core/fmt/trait.Debug.html]> DEBUG [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Debug.html]
FOR BIDIFRAMED [struct.BidiFramed.html]<T, WH, RH>

source [../../../src/fedimint_server/net/framed.rs.html#58]§

FN FMT [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Debug.html#tymethod.fmt](&SELF, F: &MUT FORMATTER
[https://doc.rust-lang.org/1.67.0/core/fmt/struct.Formatter.html]<'_>) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/fmt/type.Result.html]

Formats the value using the given formatter. Read more [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Debug.html#tymethod.fmt]
source [../../../src/fedimint_server/net/framed.rs.html#157-172]§


IMPL<T, WH, RH> FRAMEDTRANSPORT [trait.FramedTransport.html]<T> FOR BIDIFRAMED [struct.BidiFramed.html]<T, WH, RH>WHERE
    T: DEBUG [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Debug.html] + SERIALIZE
[https://docs.rs/serde/1.0.163/serde/ser/trait.Serialize.html] + DESERIALIZEOWNED
[https://docs.rs/serde/1.0.163/serde/de/trait.DeserializeOwned.html] + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html],
    WH: ASYNCWRITE + SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + UNPIN
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html],
    RH: ASYNCREAD + SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + UNPIN
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html],

source [../../../src/fedimint_server/net/framed.rs.html#163-171]§

FN BORROW_SPLIT [trait.FramedTransport.html#tymethod.borrow_split](
    &MUT SELF
) -> (&MUT (DYN SINK<T, ERROR = ERROR [https://docs.rs/anyhow/1.0.71/anyhow/struct.Error.html]> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + UNPIN
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html]), &MUT (DYN STREAM<ITEM = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<T, ERROR
[https://docs.rs/anyhow/1.0.71/anyhow/struct.Error.html]>> + SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] +
UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html]))

Split the framed transport into read and write half
source [../../../src/fedimint_server/net/framed.rs.html#35-40]§

FN INTO_DYN [trait.FramedTransport.html#method.into_dyn](SELF) -> ANYFRAMEDTRANSPORT [type.AnyFramedTransport.html]<T>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html] + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + UNPIN
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html] + 'STATIC,

Transforms concrete FramedTransport object into an owned trait object
source [../../../src/fedimint_server/net/framed.rs.html#119-142]§


IMPL<T, WH, RH> SINK<T> FOR BIDIFRAMED [struct.BidiFramed.html]<T, WH, RH>WHERE
    WH: ASYNCWRITE + UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html],
    RH: UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html],
    T: DEBUG [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Debug.html] + SERIALIZE
[https://docs.rs/serde/1.0.163/serde/ser/trait.Serialize.html],

§

TYPE ERROR = ERROR [https://docs.rs/anyhow/1.0.71/anyhow/struct.Error.html]

The type of value produced by the sink when an error occurs.
source [../../../src/fedimint_server/net/framed.rs.html#127-129]§

FN POLL_READY(
    SELF: PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF>,
    CX: &MUT CONTEXT [https://doc.rust-lang.org/1.67.0/core/task/wake/struct.Context.html]<'_>
) -> POLL [https://doc.rust-lang.org/1.67.0/core/task/poll/enum.Poll.html]<RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
SELF::ERROR>>

Attempts to prepare the Sink to receive a value. Read more
source [../../../src/fedimint_server/net/framed.rs.html#131-133]§

FN START_SEND(SELF: PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF>, ITEM: T) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
SELF::ERROR>

Begin the process of sending a value to the sink. Each call to this function must be preceded by a successful call to poll_ready
which returned Poll::Ready(Ok(())). Read more
source [../../../src/fedimint_server/net/framed.rs.html#135-137]§

FN POLL_FLUSH(
    SELF: PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF>,
    CX: &MUT CONTEXT [https://doc.rust-lang.org/1.67.0/core/task/wake/struct.Context.html]<'_>
) -> POLL [https://doc.rust-lang.org/1.67.0/core/task/poll/enum.Poll.html]<RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
SELF::ERROR>>

Flush any remaining output from this sink. Read more
source [../../../src/fedimint_server/net/framed.rs.html#139-141]§

FN POLL_CLOSE(
    SELF: PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF>,
    CX: &MUT CONTEXT [https://doc.rust-lang.org/1.67.0/core/task/wake/struct.Context.html]<'_>
) -> POLL [https://doc.rust-lang.org/1.67.0/core/task/poll/enum.Poll.html]<RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
SELF::ERROR>>

Flush any remaining output and close this sink, if necessary. Read more
source [../../../src/fedimint_server/net/framed.rs.html#144-155]§


IMPL<T, WH, RH> STREAM FOR BIDIFRAMED [struct.BidiFramed.html]<T, WH, RH>WHERE
    T: DESERIALIZEOWNED [https://docs.rs/serde/1.0.163/serde/de/trait.DeserializeOwned.html],
    WH: UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html],
    RH: ASYNCREAD + UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html],

§

TYPE ITEM = RESULT [https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<T, ERROR
[https://docs.rs/anyhow/1.0.71/anyhow/struct.Error.html]>

Values yielded by the stream.
source [../../../src/fedimint_server/net/framed.rs.html#152-154]§

FN POLL_NEXT(
    SELF: PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF>,
    CX: &MUT CONTEXT [https://doc.rust-lang.org/1.67.0/core/task/wake/struct.Context.html]<'_>
) -> POLL [https://doc.rust-lang.org/1.67.0/core/task/poll/enum.Poll.html]<OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<SELF::ITEM>>

Attempt to pull out the next value of this stream, registering the current task for wakeup if the value is not yet available, and
returning None if the stream is exhausted. Read more
§

FN SIZE_HINT(&SELF) -> (USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html], OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]>)

Returns the bounds on the remaining length of the stream. Read more


AUTO TRAIT IMPLEMENTATIONS§

§


IMPL<T, WH, RH> REFUNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.RefUnwindSafe.html] FOR BIDIFRAMED
[struct.BidiFramed.html]<T, WH, RH>WHERE
    RH: REFUNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.RefUnwindSafe.html],
    T: REFUNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.RefUnwindSafe.html],
    WH: REFUNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.RefUnwindSafe.html],

§


IMPL<T, WH, RH> SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] FOR BIDIFRAMED [struct.BidiFramed.html]<T, WH,
RH>WHERE
    RH: SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html],
    T: SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html],
    WH: SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html],

§


IMPL<T, WH, RH> SYNC [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html] FOR BIDIFRAMED [struct.BidiFramed.html]<T, WH,
RH>WHERE
    RH: SYNC [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html],
    T: SYNC [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html],
    WH: SYNC [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html],

§


IMPL<T, WH, RH> UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html] FOR BIDIFRAMED [struct.BidiFramed.html]<T,
WH, RH>WHERE
    RH: UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html],
    WH: UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html],

§


IMPL<T, WH, RH> UNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.UnwindSafe.html] FOR BIDIFRAMED
[struct.BidiFramed.html]<T, WH, RH>WHERE
    RH: UNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.UnwindSafe.html],
    T: UNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.UnwindSafe.html],
    WH: UNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.UnwindSafe.html],


BLANKET IMPLEMENTATIONS§

source [https://doc.rust-lang.org/1.67.0/src/core/any.rs.html#200]§


IMPL<T> ANY [https://doc.rust-lang.org/1.67.0/core/any/trait.Any.html] FOR TWHERE
    T: 'STATIC + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

source [https://doc.rust-lang.org/1.67.0/src/core/any.rs.html#201]§

FN TYPE_ID [https://doc.rust-lang.org/1.67.0/core/any/trait.Any.html#tymethod.type_id](&SELF) -> TYPEID
[https://doc.rust-lang.org/1.67.0/core/any/struct.TypeId.html]

Gets the TypeId of self. Read more [https://doc.rust-lang.org/1.67.0/core/any/trait.Any.html#tymethod.type_id]
source [https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#211]§


IMPL<T> BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<T> FOR TWHERE
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

const: unstable [https://github.com/rust-lang/rust/issues/91522] · source
[https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#213]§

FN BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html#tymethod.borrow](&SELF) -> &
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T

Immutably borrows from an owned value. Read more [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html#tymethod.borrow]
source [https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#220]§


IMPL<T> BORROWMUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html]<T> FOR TWHERE
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

const: unstable [https://github.com/rust-lang/rust/issues/91522] · source
[https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#221]§

FN BORROW_MUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut](&MUT SELF) -> &MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T

Mutably borrows from an owned value. Read more
[https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut]
§


IMPL<T> CONV FOR T

§

FN CONV<T>(SELF) -> TWHERE
    SELF: INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<T>,

Converts self into T using Into<T>. Read more
§


IMPL<T> FMTFORWARD FOR T

§

FN FMT_BINARY(SELF) -> FMTBINARY<SELF>WHERE
    SELF: BINARY [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Binary.html],

Causes self to use its Binary implementation when Debug-formatted.
§

FN FMT_DISPLAY(SELF) -> FMTDISPLAY<SELF>WHERE
    SELF: DISPLAY [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Display.html],

Causes self to use its Display implementation when Debug-formatted. Read more
§

FN FMT_LOWER_EXP(SELF) -> FMTLOWEREXP<SELF>WHERE
    SELF: LOWEREXP [https://doc.rust-lang.org/1.67.0/core/fmt/trait.LowerExp.html],

Causes self to use its LowerExp implementation when Debug-formatted. Read more
§

FN FMT_LOWER_HEX(SELF) -> FMTLOWERHEX<SELF>WHERE
    SELF: LOWERHEX [https://doc.rust-lang.org/1.67.0/core/fmt/trait.LowerHex.html],

Causes self to use its LowerHex implementation when Debug-formatted. Read more
§

FN FMT_OCTAL(SELF) -> FMTOCTAL<SELF>WHERE
    SELF: OCTAL [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Octal.html],

Causes self to use its Octal implementation when Debug-formatted.
§

FN FMT_POINTER(SELF) -> FMTPOINTER<SELF>WHERE
    SELF: POINTER [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Pointer.html],

Causes self to use its Pointer implementation when Debug-formatted. Read more
§

FN FMT_UPPER_EXP(SELF) -> FMTUPPEREXP<SELF>WHERE
    SELF: UPPEREXP [https://doc.rust-lang.org/1.67.0/core/fmt/trait.UpperExp.html],

Causes self to use its UpperExp implementation when Debug-formatted. Read more
§

FN FMT_UPPER_HEX(SELF) -> FMTUPPERHEX<SELF>WHERE
    SELF: UPPERHEX [https://doc.rust-lang.org/1.67.0/core/fmt/trait.UpperHex.html],

Causes self to use its UpperHex implementation when Debug-formatted. Read more
§

FN FMT_LIST(SELF) -> FMTLIST<SELF>WHERE
    &'A [https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF: FOR<'A> INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html],

Formats each item in a sequence. Read more
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#733]§


IMPL<T> FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<T> FOR T

const: unstable [https://github.com/rust-lang/rust/issues/88674] · source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#736]§

FN FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html#tymethod.from](T: T) -> T

Returns the argument unchanged.

§


IMPL<T> FUTUREEXT FOR T

§

FN WITH_CONTEXT(SELF, OTEL_CX: CONTEXT) -> WITHCONTEXT<SELF>

Attaches the provided Context [crate::Context] to this type, returning a WithContext wrapper. Read more
§

FN WITH_CURRENT_CONTEXT(SELF) -> WITHCONTEXT<SELF>

Attaches the current Context [crate::Context] to this type, returning a WithContext wrapper. Read more
source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#276]§


IMPL<T> INSTRUMENT [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.Instrument.html] FOR T

source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#82]§

FN INSTRUMENT [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.Instrument.html#method.instrument](SELF, SPAN: SPAN
[https://docs.rs/tracing/0.1.37/tracing/span/struct.Span.html]) -> INSTRUMENTED
[https://docs.rs/tracing/0.1.37/tracing/instrument/struct.Instrumented.html]<SELF>

Instruments this type with the provided Span [https://docs.rs/tracing/0.1.37/tracing/span/struct.Span.html], returning an
Instrumented wrapper. Read more [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.Instrument.html#method.instrument]
source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#121]§

FN IN_CURRENT_SPAN [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.Instrument.html#method.in_current_span](SELF) ->
INSTRUMENTED [https://docs.rs/tracing/0.1.37/tracing/instrument/struct.Instrumented.html]<SELF>

Instruments this type with the current [https://docs.rs/tracing/0.1.37/tracing/span/struct.Span.html#method.current] Span
[https://docs.rs/tracing/0.1.37/tracing/span/struct.Span.html], returning an Instrumented wrapper. Read more
[https://docs.rs/tracing/0.1.37/tracing/instrument/trait.Instrument.html#method.in_current_span]
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#717]§


IMPL<T, U> INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<U> FOR TWHERE
    U: FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<T>,

const: unstable [https://github.com/rust-lang/rust/issues/88674] · source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#725]§

FN INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html#tymethod.into](SELF) -> U

Calls U::from(self).

That is, this conversion is whatever the implementation of From [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<T>
for U chooses to do.

source [https://docs.rs/tonic/0.9.2/src/tonic/request.rs.html#384]§


IMPL<T> INTOREQUEST [https://docs.rs/tonic/0.9.2/tonic/request/trait.IntoRequest.html]<T> FOR T

source [https://docs.rs/tonic/0.9.2/src/tonic/request.rs.html#385]§

FN INTO_REQUEST [https://docs.rs/tonic/0.9.2/tonic/request/trait.IntoRequest.html#tymethod.into_request](SELF) -> REQUEST
[https://docs.rs/tonic/0.9.2/tonic/request/struct.Request.html]<T>

Wrap the input message T in a tonic::Request
source [https://docs.rs/tonic/0.9.2/src/tonic/request.rs.html#396]§


IMPL<T> INTOSTREAMINGREQUEST [https://docs.rs/tonic/0.9.2/tonic/request/trait.IntoStreamingRequest.html] FOR TWHERE
    T: 'STATIC + STREAM + SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html],

§

TYPE STREAM [https://docs.rs/tonic/0.9.2/tonic/request/trait.IntoStreamingRequest.html#associatedtype.Stream] = T

The RPC request stream type
§

TYPE MESSAGE [https://docs.rs/tonic/0.9.2/tonic/request/trait.IntoStreamingRequest.html#associatedtype.Message] = <T AS
STREAM>::ITEM

The RPC request type
source [https://docs.rs/tonic/0.9.2/src/tonic/request.rs.html#403]§

FN INTO_STREAMING_REQUEST
[https://docs.rs/tonic/0.9.2/tonic/request/trait.IntoStreamingRequest.html#tymethod.into_streaming_request](SELF) -> REQUEST
[https://docs.rs/tonic/0.9.2/tonic/request/struct.Request.html]<T>

Wrap the stream of messages in a tonic::Request
§


IMPL<S> NEXTORPENDING [../../util/trait.NextOrPending.html] FOR SWHERE
    S: STREAM + UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html] + MAYBESEND
[../../task/trait.MaybeSend.html],
    <S AS STREAM>::ITEM: MAYBESEND [../../task/trait.MaybeSend.html],

§

FN OK [../../util/trait.NextOrPending.html#tymethod.ok]<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 MUT SELF
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<<S AS NEXTORPENDING [../../util/trait.NextOrPending.html]>::OUTPUT
[../../util/trait.NextOrPending.html#associatedtype.Output], ERROR [https://docs.rs/anyhow/1.0.71/anyhow/struct.Error.html]>> +
SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT, GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>>WHERE
    'LIFE0: 'ASYNC_TRAIT,
    S: 'ASYNC_TRAIT,

Waits for the next item in a stream. If the stream is closed while waiting, returns an error. Useful when expecting a stream to
progress.

§

FN NEXT_OR_PENDING [../../util/trait.NextOrPending.html#tymethod.next_or_pending]<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 MUT SELF
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = <S AS NEXTORPENDING
[../../util/trait.NextOrPending.html]>::OUTPUT [../../util/trait.NextOrPending.html#associatedtype.Output]> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT, GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>>WHERE
    'LIFE0: 'ASYNC_TRAIT,
    S: 'ASYNC_TRAIT,

Waits for the next item in a stream. If the stream is closed while waiting the future will be pending forever. This is useful in
cases where the future will be cancelled by shutdown logic anyway and handling each place where a stream may terminate would be
too much trouble.

§

TYPE OUTPUT [../../util/trait.NextOrPending.html#associatedtype.Output] = <S AS STREAM>::ITEM

§


IMPL<T> PIPE FOR TWHERE
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

§

FN PIPE<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](SELF) -> R) -> RWHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Pipes by value. This is generally the method you want to use. Read more
§

FN PIPE_REF<'A, R>(&'A SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF) -> R) -> RWHERE
    R: 'A,

Borrows self and passes that borrow into the pipe function. Read more
§

FN PIPE_REF_MUT<'A, R>(&'A MUT SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
MUT [https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF) -> R) -> RWHERE
    R: 'A,

Mutably borrows self and passes that borrow into the pipe function. Read more
§

FN PIPE_BORROW<'A, B, R>(&'A SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B) -> R) -> RWHERE
    SELF: BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<B>,
    B: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Borrows self, then passes self.borrow() into the pipe function. Read more
§

FN PIPE_BORROW_MUT<'A, B, R>(
    &'A MUT SELF,
    FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B) -> R
) -> RWHERE
    SELF: BORROWMUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html]<B>,
    B: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Mutably borrows self, then passes self.borrow_mut() into the pipe function. Read more
§

FN PIPE_AS_REF<'A, U, R>(&'A SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]U) -> R) -> RWHERE
    SELF: ASREF [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsRef.html]<U>,
    U: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Borrows self, then passes self.as_ref() into the pipe function.
§

FN PIPE_AS_MUT<'A, U, R>(&'A MUT SELF, FUNC: IMPL FNONCE
[https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]U) -> R) -> RWHERE
    SELF: ASMUT [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsMut.html]<U>,
    U: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Mutably borrows self, then passes self.as_mut() into the pipe function. Read more
§

FN PIPE_DEREF<'A, T, R>(&'A SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T) -> R) -> RWHERE
    SELF: DEREF [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html]<TARGET = T>,
    T: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Borrows self, then passes self.deref() into the pipe function.
§

FN PIPE_DEREF_MUT<'A, T, R>(&'A MUT SELF, FUNC: IMPL FNONCE
[https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T) -> R) -> RWHERE
    SELF: DEREFMUT [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.DerefMut.html]<TARGET = T> + DEREF
[https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html],
    T: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Mutably borrows self, then passes self.deref_mut() into the pipe function. Read more
source [https://docs.rs/typenum/1.16.0/src/typenum/type_operators.rs.html#34]§


IMPL<T> SAME [https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Same.html]<T> FOR T

§

TYPE OUTPUT [https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Same.html#associatedtype.Output] = T

Should always be Self
§


IMPL<T, ITEM> SINKEXT<ITEM> FOR TWHERE
    T: SINK<ITEM> + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

§

FN WITH<U, FUT, F, E>(SELF, F: F) -> WITH<SELF, ITEM, U, FUT, F>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](U) -> FUT,
    FUT: FUTURE [https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<ITEM, E>>,
    E: FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<SELF::ERROR>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Composes a function in front of the sink. Read more
§

FN WITH_FLAT_MAP<U, ST, F>(SELF, F: F) -> WITHFLATMAP<SELF, ITEM, U, ST, F>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](U) -> ST,
    ST: STREAM<ITEM = RESULT [https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<ITEM, SELF::ERROR>>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Composes a function in front of the sink. Read more
§

FN SINK_MAP_ERR<E, F>(SELF, F: F) -> SINKMAPERR<SELF, F>WHERE
    F: FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](SELF::ERROR) -> E,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Transforms the error returned by the sink.
§

FN SINK_ERR_INTO<E>(SELF) -> SINKERRINTO<SELF, ITEM, E>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::ERROR: INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<E>,

Map this sink’s error to a different error type using the Into trait. Read more
§

FN BUFFER(SELF, CAPACITY: USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]) -> BUFFER<SELF, ITEM>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Adds a fixed-size buffer to the current sink. Read more
§

FN CLOSE(&MUT SELF) -> CLOSE<'_, SELF, ITEM>WHERE
    SELF: UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html],

Close the sink.
§

FN FANOUT<SI>(SELF, OTHER: SI) -> FANOUT<SELF, SI>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    ITEM: CLONE [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html],
    SI: SINK<ITEM, ERROR = SELF::ERROR>,

Fanout items to multiple sinks. Read more
§

FN FLUSH(&MUT SELF) -> FLUSH<'_, SELF, ITEM>WHERE
    SELF: UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html],

Flush the sink, processing all pending items. Read more
§

FN SEND(&MUT SELF, ITEM: ITEM) -> SEND<'_, SELF, ITEM>WHERE
    SELF: UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html],

A future that completes after the given item has been fully processed into the sink, including flushing. Read more
§

FN FEED(&MUT SELF, ITEM: ITEM) -> FEED<'_, SELF, ITEM>WHERE
    SELF: UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html],

A future that completes after the given item has been received by the sink. Read more
§

FN SEND_ALL<ST, 'A>(&'A MUT SELF, STREAM: &'A MUT [https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]ST) ->
SENDALL<'A, SELF, ST>WHERE
    ST: TRYSTREAM<OK = ITEM, ERROR = SELF::ERROR> + STREAM + UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html]
+ ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF: UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html],

A future that completes after the given stream has been fully processed into the sink, including flushing. Read more
§

FN LEFT_SINK<SI2>(SELF) -> EITHER<SELF, SI2>WHERE
    SI2: SINK<ITEM, ERROR = SELF::ERROR>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Wrap this sink in an Either sink, making it the left-hand variant of that Either. Read more
§

FN RIGHT_SINK<SI1>(SELF) -> EITHER<SI1, SELF>WHERE
    SI1: SINK<ITEM, ERROR = SELF::ERROR>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Wrap this stream in an Either stream, making it the right-hand variant of that Either. Read more
§

FN POLL_READY_UNPIN(
    &MUT SELF,
    CX: &MUT CONTEXT [https://doc.rust-lang.org/1.67.0/core/task/wake/struct.Context.html]<'_>
) -> POLL [https://doc.rust-lang.org/1.67.0/core/task/poll/enum.Poll.html]<RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
SELF::ERROR>>WHERE
    SELF: UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html],

A convenience method for calling [Sink::poll_ready] on Unpin [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html] sink
types. Read more
§

FN START_SEND_UNPIN(&MUT SELF, ITEM: ITEM) -> RESULT [https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<()
[https://doc.rust-lang.org/1.67.0/std/primitive.unit.html], SELF::ERROR>WHERE
    SELF: UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html],

A convenience method for calling [Sink::start_send] on Unpin [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html] sink
types. Read more
§

FN POLL_FLUSH_UNPIN(
    &MUT SELF,
    CX: &MUT CONTEXT [https://doc.rust-lang.org/1.67.0/core/task/wake/struct.Context.html]<'_>
) -> POLL [https://doc.rust-lang.org/1.67.0/core/task/poll/enum.Poll.html]<RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
SELF::ERROR>>WHERE
    SELF: UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html],

A convenience method for calling [Sink::poll_flush] on Unpin [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html] sink
types. Read more
§

FN POLL_CLOSE_UNPIN(
    &MUT SELF,
    CX: &MUT CONTEXT [https://doc.rust-lang.org/1.67.0/core/task/wake/struct.Context.html]<'_>
) -> POLL [https://doc.rust-lang.org/1.67.0/core/task/poll/enum.Poll.html]<RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
SELF::ERROR>>WHERE
    SELF: UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html],

A convenience method for calling [Sink::poll_close] on Unpin [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html] sink
types. Read more
§


IMPL<T> STREAMEXT FOR TWHERE
    T: STREAM + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

§

FN NEXT(&MUT SELF) -> NEXT<'_, SELF>WHERE
    SELF: UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html],

Creates a future that resolves to the next item in the stream. Read more
§

FN INTO_FUTURE(SELF) -> STREAMFUTURE<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html] + UNPIN
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html],

Converts this stream into a future of (next_item, tail_of_stream). If the stream terminates, then the next item is None
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html#variant.None]. Read more
§

FN MAP<T, F>(SELF, F: F) -> MAP<SELF, F>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM) -> T,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Maps this stream’s items to a different type, returning a new stream of the resulting type. Read more
§

FN ENUMERATE(SELF) -> ENUMERATE<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Creates a stream which gives the current iteration count as well as the next value. Read more
§

FN FILTER<FUT, F>(SELF, F: F) -> FILTER<SELF, FUT, F>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM) -> FUT,
    FUT: FUTURE [https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Filters the values produced by this stream according to the provided asynchronous predicate. Read more
§

FN FILTER_MAP<FUT, T, F>(SELF, F: F) -> FILTERMAP<SELF, FUT, F>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM) -> FUT,
    FUT: FUTURE [https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<T>>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Filters the values produced by this stream while simultaneously mapping them to a different type according to the provided
asynchronous closure. Read more
§

FN THEN<FUT, F>(SELF, F: F) -> THEN<SELF, FUT, F>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM) -> FUT,
    FUT: FUTURE [https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html],
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Computes from this stream’s items new items of a different type using an asynchronous closure. Read more
§

FN COLLECT<C>(SELF) -> COLLECT<SELF, C>WHERE
    C: DEFAULT [https://doc.rust-lang.org/1.67.0/core/default/trait.Default.html] + EXTEND
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.Extend.html]<SELF::ITEM>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Transforms a stream into a collection, returning a future representing the result of that computation. Read more
§

FN UNZIP<A, B, FROMA, FROMB>(SELF) -> UNZIP<SELF, FROMA, FROMB>WHERE
    FROMA: DEFAULT [https://doc.rust-lang.org/1.67.0/core/default/trait.Default.html] + EXTEND
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.Extend.html]<A>,
    FROMB: DEFAULT [https://doc.rust-lang.org/1.67.0/core/default/trait.Default.html] + EXTEND
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.Extend.html]<B>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html] + STREAM<ITEM = (A, B)
[https://doc.rust-lang.org/1.67.0/std/primitive.tuple.html]>,

Converts a stream of pairs into a future, which resolves to pair of containers. Read more
§

FN CONCAT(SELF) -> CONCAT<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::ITEM: EXTEND [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.Extend.html]<<SELF::ITEM AS INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item]> + INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html] + DEFAULT
[https://doc.rust-lang.org/1.67.0/core/default/trait.Default.html],

Concatenate all items of a stream into a single extendable destination, returning a future representing the end result. Read more
§

FN COUNT(SELF) -> COUNT<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Drives the stream to completion, counting the number of items. Read more
§

FN CYCLE(SELF) -> CYCLE<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html] + CLONE
[https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html],

Repeats a stream endlessly. Read more
§

FN FOLD<T, FUT, F>(SELF, INIT: T, F: F) -> FOLD<SELF, FUT, T, F>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](T, SELF::ITEM) -> FUT,
    FUT: FUTURE [https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = T>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Execute an accumulating asynchronous computation over a stream, collecting all the values into one final result. Read more
§

FN ANY<FUT, F>(SELF, F: F) -> ANY<SELF, FUT, F>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM) -> FUT,
    FUT: FUTURE [https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Execute predicate over asynchronous stream, and return true if any element in stream satisfied a predicate. Read more
§

FN ALL<FUT, F>(SELF, F: F) -> ALL<SELF, FUT, F>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM) -> FUT,
    FUT: FUTURE [https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Execute predicate over asynchronous stream, and return true if all element in stream satisfied a predicate. Read more
§

FN FLATTEN(SELF) -> FLATTEN<SELF>WHERE
    SELF::ITEM: STREAM,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Flattens a stream of streams into just one continuous stream. Read more
§

FN FLATTEN_UNORDERED(
    SELF,
    LIMIT: IMPL INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]>>
) -> FLATTENUNORDEREDWITHFLOWCONTROLLER<SELF, () [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html]>WHERE
    SELF::ITEM: STREAM + UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html],
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Flattens a stream of streams into just one continuous stream. Polls inner streams produced by the base stream concurrently. Read
more
§

FN FLAT_MAP<U, F>(SELF, F: F) -> FLATMAP<SELF, U, F>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM) -> U,
    U: STREAM,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Maps a stream like [StreamExt::map] but flattens nested Streams. Read more
§

FN FLAT_MAP_UNORDERED<U, F>(
    SELF,
    LIMIT: IMPL INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]>>,
    F: F
) -> FLATMAPUNORDERED<SELF, U, F>WHERE
    U: STREAM + UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM) -> U,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Maps a stream like [StreamExt::map] but flattens nested Streams and polls them concurrently, yielding items in any order, as they
made available. Read more
§

FN SCAN<S, B, FUT, F>(SELF, INITIAL_STATE: S, F: F) -> SCAN<SELF, S, FUT, F>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]S, SELF::ITEM) -> FUT,
    FUT: FUTURE [https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<B>>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Combinator similar to [StreamExt::fold] that holds internal state and produces a new stream. Read more
§

FN SKIP_WHILE<FUT, F>(SELF, F: F) -> SKIPWHILE<SELF, FUT, F>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM) -> FUT,
    FUT: FUTURE [https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Skip elements on this stream while the provided asynchronous predicate resolves to true. Read more
§

FN TAKE_WHILE<FUT, F>(SELF, F: F) -> TAKEWHILE<SELF, FUT, F>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM) -> FUT,
    FUT: FUTURE [https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Take elements from this stream while the provided asynchronous predicate resolves to true. Read more
§

FN TAKE_UNTIL<FUT>(SELF, FUT: FUT) -> TAKEUNTIL<SELF, FUT>WHERE
    FUT: FUTURE [https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html],
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Take elements from this stream until the provided future resolves. Read more
§

FN FOR_EACH<FUT, F>(SELF, F: F) -> FOREACH<SELF, FUT, F>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM) -> FUT,
    FUT: FUTURE [https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = ()
[https://doc.rust-lang.org/1.67.0/std/primitive.unit.html]>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Runs this stream to completion, executing the provided asynchronous closure for each element on the stream. Read more
§

FN FOR_EACH_CONCURRENT<FUT, F>(
    SELF,
    LIMIT: IMPL INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]>>,
    F: F
) -> FOREACHCONCURRENT<SELF, FUT, F>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM) -> FUT,
    FUT: FUTURE [https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = ()
[https://doc.rust-lang.org/1.67.0/std/primitive.unit.html]>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Runs this stream to completion, executing the provided asynchronous closure for each element on the stream concurrently as
elements become available. Read more
§

FN TAKE(SELF, N: USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]) -> TAKE<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Creates a new stream of at most n items of the underlying stream. Read more
§

FN SKIP(SELF, N: USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]) -> SKIP<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Creates a new stream which skips n items of the underlying stream. Read more
§

FN FUSE(SELF) -> FUSE<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Fuse a stream such that poll_next [Stream::poll_next] will never again be called once it has finished. This method can be used to
turn any Stream into a FusedStream. Read more
§

FN BY_REF(&MUT SELF) -> &MUT [https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF

Borrows a stream, rather than consuming it. Read more
§

FN CATCH_UNWIND(SELF) -> CATCHUNWIND<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html] + UNWINDSAFE
[https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.UnwindSafe.html],

Catches unwinding panics while polling the stream. Read more
§

FN BOXED<'A>(
    SELF
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN STREAM<ITEM = SELF::ITEM> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'A, GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>>WHERE
    SELF: 'A + SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html] + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html],

Wrap the stream in a Box, pinning it. Read more
§

FN BOXED_LOCAL<'A>(SELF) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN STREAM<ITEM = SELF::ITEM> + 'A, GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>>WHERE
    SELF: 'A + SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Wrap the stream in a Box, pinning it. Read more
§

FN BUFFERED(SELF, N: USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]) -> BUFFERED<SELF>WHERE
    SELF::ITEM: FUTURE [https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html],
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

An adaptor for creating a buffered list of pending futures. Read more
§

FN BUFFER_UNORDERED(SELF, N: USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]) -> BUFFERUNORDERED<SELF>WHERE
    SELF::ITEM: FUTURE [https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html],
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

An adaptor for creating a buffered list of pending futures (unordered). Read more
§

FN ZIP<ST>(SELF, OTHER: ST) -> ZIP<SELF, ST>WHERE
    ST: STREAM,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

An adapter for zipping two streams together. Read more
§

FN CHAIN<ST>(SELF, OTHER: ST) -> CHAIN<SELF, ST>WHERE
    ST: STREAM<ITEM = SELF::ITEM>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Adapter for chaining two streams. Read more
§

FN PEEKABLE(SELF) -> PEEKABLE<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Creates a new stream which exposes a peek method. Read more
§

FN CHUNKS(SELF, CAPACITY: USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]) -> CHUNKS<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

An adaptor for chunking up items of the stream inside a vector. Read more
§

FN READY_CHUNKS(SELF, CAPACITY: USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]) -> READYCHUNKS<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

An adaptor for chunking up ready items of the stream inside a vector. Read more
§

FN FORWARD<S>(SELF, SINK: S) -> FORWARD<SELF, S>WHERE
    S: SINK<SELF::OK, ERROR = SELF::ERROR>,
    SELF: TRYSTREAM + SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

A future that completes after the given stream has been fully processed into the sink and the sink has been flushed and closed.
Read more
§

FN SPLIT<ITEM>(SELF) -> (SPLITSINK<SELF, ITEM>, SPLITSTREAM<SELF>)WHERE
    SELF: SINK<ITEM> + SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Splits this Stream + Sink object into separate Sink and Stream objects. Read more
§

FN INSPECT<F>(SELF, F: F) -> INSPECT<SELF, F>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM),
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Do something with each item of this stream, afterwards passing it on. Read more
§

FN LEFT_STREAM<B>(SELF) -> EITHER<SELF, B>WHERE
    B: STREAM<ITEM = SELF::ITEM>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Wrap this stream in an Either stream, making it the left-hand variant of that Either. Read more
§

FN RIGHT_STREAM<B>(SELF) -> EITHER<B, SELF>WHERE
    B: STREAM<ITEM = SELF::ITEM>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Wrap this stream in an Either stream, making it the right-hand variant of that Either. Read more
§

FN POLL_NEXT_UNPIN(&MUT SELF, CX: &MUT CONTEXT [https://doc.rust-lang.org/1.67.0/core/task/wake/struct.Context.html]<'_>) -> POLL
[https://doc.rust-lang.org/1.67.0/core/task/poll/enum.Poll.html]<OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<SELF::ITEM>>WHERE
    SELF: UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html],

A convenience method for calling [Stream::poll_next] on Unpin [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html]
stream types. Read more
§

FN SELECT_NEXT_SOME(&MUT SELF) -> SELECTNEXTSOME<'_, SELF>WHERE
    SELF: UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html] + FUSEDSTREAM,

Returns a Future [https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html] that resolves when the next item in this
stream is ready. Read more
§


IMPL<ST> STREAMEXT FOR STWHERE
    ST: STREAM + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

§

FN NEXT(&MUT SELF) -> NEXT<'_, SELF>WHERE
    SELF: UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html],

Consumes and returns the next value in the stream or None if the stream is finished. Read more
§

FN TRY_NEXT<T, E>(&MUT SELF) -> TRYNEXT<'_, SELF>WHERE
    SELF: STREAM<ITEM = RESULT [https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<T, E>> + UNPIN
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html],

Consumes and returns the next item in the stream. If an error is encountered before the next item, the error is returned instead.
Read more
§

FN MAP<T, F>(SELF, F: F) -> MAP<SELF, F>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM) -> T,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Maps this stream’s items to a different type, returning a new stream of the resulting type. Read more
§

FN MAP_WHILE<T, F>(SELF, F: F) -> MAPWHILE<SELF, F>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM) -> OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<T>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Map this stream’s items to a different type for as long as determined by the provided closure. A stream of the target type will be
returned, which will yield elements until the closure returns None. Read more
§

FN THEN<F, FUT>(SELF, F: F) -> THEN<SELF, FUT, F>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM) -> FUT,
    FUT: FUTURE [https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html],
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Maps this stream’s items asynchronously to a different type, returning a new stream of the resulting type. Read more
§

FN MERGE<U>(SELF, OTHER: U) -> MERGE<SELF, U>WHERE
    U: STREAM<ITEM = SELF::ITEM>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Combine two streams into one by interleaving the output of both as it is produced. Read more
§

FN FILTER<F>(SELF, F: F) -> FILTER<SELF, F>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html],
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Filters the values produced by this stream according to the provided predicate. Read more
§

FN FILTER_MAP<T, F>(SELF, F: F) -> FILTERMAP<SELF, F>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM) -> OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<T>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Filters the values produced by this stream while simultaneously mapping them to a different type according to the provided
closure. Read more
§

FN FUSE(SELF) -> FUSE<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Creates a stream which ends after the first None. Read more
§

FN TAKE(SELF, N: USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]) -> TAKE<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Creates a new stream of at most n items of the underlying stream. Read more
§

FN TAKE_WHILE<F>(SELF, F: F) -> TAKEWHILE<SELF, F>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html],
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Take elements from this stream while the provided predicate resolves to true. Read more
§

FN SKIP(SELF, N: USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]) -> SKIP<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Creates a new stream that will skip the n first items of the underlying stream. Read more
§

FN SKIP_WHILE<F>(SELF, F: F) -> SKIPWHILE<SELF, F>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html],
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Skip elements from the underlying stream while the provided predicate resolves to true. Read more
§

FN ALL<F>(&MUT SELF, F: F) -> ALLFUTURE<'_, SELF, F>WHERE
    SELF: UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html],

Tests if every element of the stream matches a predicate. Read more
§

FN ANY<F>(&MUT SELF, F: F) -> ANYFUTURE<'_, SELF, F>WHERE
    SELF: UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html],

Tests if any element of the stream matches a predicate. Read more
§

FN CHAIN<U>(SELF, OTHER: U) -> CHAIN<SELF, U>WHERE
    U: STREAM<ITEM = SELF::ITEM>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Combine two streams into one by first returning all values from the first stream then all values from the second stream. Read more
§

FN FOLD<B, F>(SELF, INIT: B, F: F) -> FOLDFUTURE<SELF, B, F>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](B, SELF::ITEM) -> B,

A combinator that applies a function to every element in a stream producing a single, final value. Read more
§

FN COLLECT<T>(SELF) -> COLLECT<SELF, T>WHERE
    T: FROMSTREAM<SELF::ITEM>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Drain stream pushing all emitted values into a collection. Read more
§

FN TIMEOUT(SELF, DURATION: DURATION [https://doc.rust-lang.org/1.67.0/core/time/struct.Duration.html]) -> TIMEOUT<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Applies a per-item timeout to the passed stream. Read more
§

FN TIMEOUT_REPEATING(SELF, INTERVAL: INTERVAL) -> TIMEOUTREPEATING<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Applies a per-item timeout to the passed stream. Read more
§

FN THROTTLE(SELF, DURATION: DURATION [https://doc.rust-lang.org/1.67.0/core/time/struct.Duration.html]) -> THROTTLE<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Slows down a stream by enforcing a delay between items. Read more
§

FN CHUNKS_TIMEOUT(
    SELF,
    MAX_SIZE: USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html],
    DURATION: DURATION [https://doc.rust-lang.org/1.67.0/core/time/struct.Duration.html]
) -> CHUNKSTIMEOUT<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Batches the items in the given stream using a maximum duration and size for each batch. Read more
§


IMPL<T> TAP FOR T

§

FN TAP(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)) -> SELF

Immutable access to a value. Read more
§

FN TAP_MUT(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)) -> SELF

Mutable access to a value. Read more
§

FN TAP_BORROW<B>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B)) -> SELFWHERE
    SELF: BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<B>,
    B: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Immutable access to the Borrow<B> of a value. Read more
§

FN TAP_BORROW_MUT<B>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B)) -> SELFWHERE
    SELF: BORROWMUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html]<B>,
    B: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Mutable access to the BorrowMut<B> of a value. Read more
§

FN TAP_REF<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R)) -> SELFWHERE
    SELF: ASREF [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsRef.html]<R>,
    R: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Immutable access to the AsRef<R> view of a value. Read more
§

FN TAP_REF_MUT<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R)) -> SELFWHERE
    SELF: ASMUT [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsMut.html]<R>,
    R: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Mutable access to the AsMut<R> view of a value. Read more
§

FN TAP_DEREF<T>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)) -> SELFWHERE
    SELF: DEREF [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html]<TARGET = T>,
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Immutable access to the Deref::Target of a value. Read more
§

FN TAP_DEREF_MUT<T>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)) -> SELFWHERE
    SELF: DEREFMUT [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.DerefMut.html]<TARGET = T> + DEREF
[https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html],
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Mutable access to the Deref::Target of a value. Read more
§

FN TAP_DBG(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)) -> SELF

Calls .tap() only in debug builds, and is erased in release builds.
§

FN TAP_MUT_DBG(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)) -> SELF

Calls .tap_mut() only in debug builds, and is erased in release builds. Read more
§

FN TAP_BORROW_DBG<B>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B)) -> SELFWHERE
    SELF: BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<B>,
    B: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_borrow() only in debug builds, and is erased in release builds. Read more
§

FN TAP_BORROW_MUT_DBG<B>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B)) -> SELFWHERE
    SELF: BORROWMUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html]<B>,
    B: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_borrow_mut() only in debug builds, and is erased in release builds. Read more
§

FN TAP_REF_DBG<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R)) -> SELFWHERE
    SELF: ASREF [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsRef.html]<R>,
    R: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_ref() only in debug builds, and is erased in release builds. Read more
§

FN TAP_REF_MUT_DBG<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R)) -> SELFWHERE
    SELF: ASMUT [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsMut.html]<R>,
    R: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_ref_mut() only in debug builds, and is erased in release builds. Read more
§

FN TAP_DEREF_DBG<T>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)) -> SELFWHERE
    SELF: DEREF [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html]<TARGET = T>,
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_deref() only in debug builds, and is erased in release builds. Read more
§

FN TAP_DEREF_MUT_DBG<T>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)) -> SELFWHERE
    SELF: DEREFMUT [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.DerefMut.html]<TARGET = T> + DEREF
[https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html],
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_deref_mut() only in debug builds, and is erased in release builds. Read more
§


IMPL<T> TRYCONV FOR T

§

FN TRY_CONV<T>(SELF) -> RESULT [https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<T, SELF::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html#associatedtype.Error]>WHERE
    SELF: TRYINTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html]<T>,

Attempts to convert self into T using TryInto<T>. Read more
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#775]§


IMPL<T, U> TRYFROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<U> FOR TWHERE
    U: INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<T>,

§

TYPE ERROR [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error] = INFALLIBLE
[https://doc.rust-lang.org/1.67.0/core/convert/enum.Infallible.html]

The type returned in the event of a conversion error.
const: unstable [https://github.com/rust-lang/rust/issues/88674] · source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#781]§

FN TRY_FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#tymethod.try_from](VALUE: U) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<T, <T AS TRYFROM
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<U>>::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error]>

Performs the conversion.
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#760]§


IMPL<T, U> TRYINTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html]<U> FOR TWHERE
    U: TRYFROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<T>,

§

TYPE ERROR [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html#associatedtype.Error] = <U AS TRYFROM
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<T>>::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error]

The type returned in the event of a conversion error.
const: unstable [https://github.com/rust-lang/rust/issues/88674] · source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#766]§

FN TRY_INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html#tymethod.try_into](SELF) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<U, <U AS TRYFROM
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<T>>::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error]>

Performs the conversion.
§


IMPL<S, T, E> TRYSTREAM FOR SWHERE
    S: STREAM<ITEM = RESULT [https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<T, E>> + ?SIZED
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

§

TYPE OK = T

The type of successful values yielded by this future
§

TYPE ERROR = E

The type of failures yielded by this future
§

FN TRY_POLL_NEXT(
    SELF: PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]S>,
    CX: &MUT CONTEXT [https://doc.rust-lang.org/1.67.0/core/task/wake/struct.Context.html]<'_>
) -> POLL [https://doc.rust-lang.org/1.67.0/core/task/poll/enum.Poll.html]<OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<<S AS TRYSTREAM>::OK, <S AS TRYSTREAM>::ERROR>>>

Poll this TryStream as if it were a Stream. Read more
§


IMPL<S> TRYSTREAMEXT FOR SWHERE
    S: TRYSTREAM + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

§

FN ERR_INTO<E>(SELF) -> ERRINTO<SELF, E>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::ERROR: INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<E>,

Wraps the current stream in a new stream which converts the error type into the one provided. Read more
§

FN MAP_OK<T, F>(SELF, F: F) -> MAPOK<SELF, F>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::OK) -> T,

Wraps the current stream in a new stream which maps the success value using the provided closure. Read more
§

FN MAP_ERR<E, F>(SELF, F: F) -> MAPERR<SELF, F>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ERROR) -> E,

Wraps the current stream in a new stream which maps the error value using the provided closure. Read more
§

FN AND_THEN<FUT, F>(SELF, F: F) -> ANDTHEN<SELF, FUT, F>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::OK) -> FUT,
    FUT: TRYFUTURE<ERROR = SELF::ERROR>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Chain on a computation for when a value is ready, passing the successful results to the provided closure f. Read more
§

FN OR_ELSE<FUT, F>(SELF, F: F) -> ORELSE<SELF, FUT, F>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ERROR) -> FUT,
    FUT: TRYFUTURE<OK = SELF::OK>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Chain on a computation for when an error happens, passing the erroneous result to the provided closure f. Read more
§

FN INSPECT_OK<F>(SELF, F: F) -> INSPECTOK<SELF, F>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::OK),
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Do something with the success value of this stream, afterwards passing it on. Read more
§

FN INSPECT_ERR<F>(SELF, F: F) -> INSPECTERR<SELF, F>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ERROR),
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Do something with the error value of this stream, afterwards passing it on. Read more
§

FN INTO_STREAM(SELF) -> INTOSTREAM<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Wraps a [TryStream] into a type that implements Stream [futures_core::stream::Stream] Read more
§

FN TRY_NEXT(&MUT SELF) -> TRYNEXT<'_, SELF>WHERE
    SELF: UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html],

Creates a future that attempts to resolve the next item in the stream. If an error is encountered before the next item, the error
is returned instead. Read more
§

FN TRY_FOR_EACH<FUT, F>(SELF, F: F) -> TRYFOREACH<SELF, FUT, F>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::OK) -> FUT,
    FUT: TRYFUTURE<OK = () [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html], ERROR = SELF::ERROR>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Attempts to run this stream to completion, executing the provided asynchronous closure for each element on the stream. Read more
§

FN TRY_SKIP_WHILE<FUT, F>(SELF, F: F) -> TRYSKIPWHILE<SELF, FUT, F>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::OK) -> FUT,
    FUT: TRYFUTURE<OK = BOOL [https://doc.rust-lang.org/1.67.0/std/primitive.bool.html], ERROR = SELF::ERROR>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Skip elements on this stream while the provided asynchronous predicate resolves to true. Read more
§

FN TRY_TAKE_WHILE<FUT, F>(SELF, F: F) -> TRYTAKEWHILE<SELF, FUT, F>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::OK) -> FUT,
    FUT: TRYFUTURE<OK = BOOL [https://doc.rust-lang.org/1.67.0/std/primitive.bool.html], ERROR = SELF::ERROR>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Take elements on this stream while the provided asynchronous predicate resolves to true. Read more
§

FN TRY_FOR_EACH_CONCURRENT<FUT, F>(
    SELF,
    LIMIT: IMPL INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]>>,
    F: F
) -> TRYFOREACHCONCURRENT<SELF, FUT, F>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::OK) -> FUT,
    FUT: FUTURE [https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
SELF::ERROR>>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Attempts to run this stream to completion, executing the provided asynchronous closure for each element on the stream concurrently
as elements become available, exiting as soon as an error occurs. Read more
§

FN TRY_COLLECT<C>(SELF) -> TRYCOLLECT<SELF, C>WHERE
    C: DEFAULT [https://doc.rust-lang.org/1.67.0/core/default/trait.Default.html] + EXTEND
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.Extend.html]<SELF::OK>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Attempt to transform a stream into a collection, returning a future representing the result of that computation. Read more
§

FN TRY_CHUNKS(SELF, CAPACITY: USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]) -> TRYCHUNKS<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

An adaptor for chunking up successful items of the stream inside a vector. Read more
§

FN TRY_FILTER<FUT, F>(SELF, F: F) -> TRYFILTER<SELF, FUT, F>WHERE
    FUT: FUTURE [https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]>,
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::OK) -> FUT,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Attempt to filter the values produced by this stream according to the provided asynchronous closure. Read more
§

FN TRY_FILTER_MAP<FUT, F, T>(SELF, F: F) -> TRYFILTERMAP<SELF, FUT, F>WHERE
    FUT: TRYFUTURE<OK = OPTION [https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<T>, ERROR = SELF::ERROR>,
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::OK) -> FUT,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Attempt to filter the values produced by this stream while simultaneously mapping them to a different type according to the
provided asynchronous closure. Read more
§

FN TRY_FLATTEN_UNORDERED(
    SELF,
    LIMIT: IMPL INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]>>
) -> TRYFLATTENUNORDERED<SELF>WHERE
    SELF::OK: TRYSTREAM + UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html],
    <SELF::OK AS TRYSTREAM>::ERROR: FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<SELF::ERROR>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Flattens a stream of streams into just one continuous stream. Produced streams will be polled concurrently and any errors will be
passed through without looking at them. If the underlying base stream returns an error, it will be immediately propagated. Read
more
§

FN TRY_FLATTEN(SELF) -> TRYFLATTEN<SELF>WHERE
    SELF::OK: TRYSTREAM,
    <SELF::OK AS TRYSTREAM>::ERROR: FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<SELF::ERROR>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Flattens a stream of streams into just one continuous stream. Read more
§

FN TRY_FOLD<T, FUT, F>(SELF, INIT: T, F: F) -> TRYFOLD<SELF, FUT, T, F>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](T, SELF::OK) -> FUT,
    FUT: TRYFUTURE<OK = T, ERROR = SELF::ERROR>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Attempt to execute an accumulating asynchronous computation over a stream, collecting all the values into one final result. Read
more
§

FN TRY_CONCAT(SELF) -> TRYCONCAT<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::OK: EXTEND [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.Extend.html]<<SELF::OK AS INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item]> + INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html] + DEFAULT
[https://doc.rust-lang.org/1.67.0/core/default/trait.Default.html],

Attempt to concatenate all items of a stream into a single extendable destination, returning a future representing the end result.
Read more
§

FN TRY_BUFFER_UNORDERED(SELF, N: USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]) ->
TRYBUFFERUNORDERED<SELF>WHERE
    SELF::OK: TRYFUTURE<ERROR = SELF::ERROR>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Attempt to execute several futures from a stream concurrently (unordered). Read more
§

FN TRY_BUFFERED(SELF, N: USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]) -> TRYBUFFERED<SELF>WHERE
    SELF::OK: TRYFUTURE<ERROR = SELF::ERROR>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Attempt to execute several futures from a stream concurrently. Read more
§

FN TRY_POLL_NEXT_UNPIN(
    &MUT SELF,
    CX: &MUT CONTEXT [https://doc.rust-lang.org/1.67.0/core/task/wake/struct.Context.html]<'_>
) -> POLL [https://doc.rust-lang.org/1.67.0/core/task/poll/enum.Poll.html]<OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<SELF::OK, SELF::ERROR>>>WHERE
    SELF: UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html],

A convenience method for calling [TryStream::try_poll_next] on Unpin
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html] stream types. Read more
§

FN INTO_ASYNC_READ(SELF) -> INTOASYNCREAD<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html] + TRYSTREAMEXT<ERROR = ERROR
[https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>,
    SELF::OK: ASREF [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsRef.html]<[U8
[https://doc.rust-lang.org/1.67.0/std/primitive.u8.html]]>,

Adapter that converts this stream into an AsyncBufRead [crate::io::AsyncBufRead]. Read more
§


IMPL<V, T> VZIP<V> FOR TWHERE
    V: MULTILANE<T>,

§

FN VZIP(SELF) -> V

source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#334]§


IMPL<T> WITHSUBSCRIBER [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.WithSubscriber.html] FOR T

source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#169-171]§

FN WITH_SUBSCRIBER [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.WithSubscriber.html#method.with_subscriber]<S>(SELF,
SUBSCRIBER: S) -> WITHDISPATCH [https://docs.rs/tracing/0.1.37/tracing/instrument/struct.WithDispatch.html]<SELF>WHERE
    S: INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<DISPATCH
[https://docs.rs/tracing-core/0.1.22/tracing_core/dispatcher/struct.Dispatch.html]>,

Attaches the provided Subscriber [https://docs.rs/tracing-core/0.1.22/tracing_core/subscriber/trait.Subscriber.html] to this type,
returning a WithDispatch [https://docs.rs/tracing/0.1.37/tracing/instrument/struct.WithDispatch.html] wrapper. Read more
[https://docs.rs/tracing/0.1.37/tracing/instrument/trait.WithSubscriber.html#method.with_subscriber]
source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#221]§

FN WITH_CURRENT_SUBSCRIBER
[https://docs.rs/tracing/0.1.37/tracing/instrument/trait.WithSubscriber.html#method.with_current_subscriber](SELF) -> WITHDISPATCH
[https://docs.rs/tracing/0.1.37/tracing/instrument/struct.WithDispatch.html]<SELF>

Attaches the current default [https://docs.rs/tracing/0.1.37/tracing/dispatcher/index.html#setting-the-default-subscriber]
Subscriber [https://docs.rs/tracing-core/0.1.22/tracing_core/subscriber/trait.Subscriber.html] to this type, returning a
WithDispatch [https://docs.rs/tracing/0.1.37/tracing/instrument/struct.WithDispatch.html] wrapper. Read more
[https://docs.rs/tracing/0.1.37/tracing/instrument/trait.WithSubscriber.html#method.with_current_subscriber]
§


IMPL<T> MAYBESEND [../../task/trait.MaybeSend.html] FOR TWHERE
    T: SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html],

§


IMPL<T> MAYBESEND FOR TWHERE
    T: SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html],

§


IMPL<T> MAYBESYNC [../../task/trait.MaybeSync.html] FOR TWHERE
    T: SYNC [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html],

§


IMPL<M> MESSAGE FOR MWHERE
    M: DEBUG [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Debug.html] + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + SYNC
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html],

