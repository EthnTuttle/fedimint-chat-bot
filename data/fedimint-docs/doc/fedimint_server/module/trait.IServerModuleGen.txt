☰
logo [../../static.files/rust-logo-151179464ae7ed46.svg]
../../fedimint_server/index.html




logo [../../static.files/rust-logo-151179464ae7ed46.svg]
../../fedimint_server/index.html


ISERVERMODULEGEN


REQUIRED METHODS

 * as_common
 * database_version
 * distributed_gen
 * dump_database
 * get_client_config
 * get_database_migrations
 * init
 * supported_api_versions
 * trusted_dealer_gen
 * validate_config
 * validate_params


IMPLEMENTORS


IN FEDIMINT_SERVER::MODULE [index.html]

? [../../help.html]
Change settings [../../static.files/wheel-5ec35bf9ca753509.svg]../../settings.html


TRAIT FEDIMINT_SERVER [../index.html]::MODULE [index.html]::ISERVERMODULEGENCopy item path
[../../static.files/clipboard-7571035ce49a181d.svg]

[−]

pub trait IServerModuleGen: IDynCommonModuleGentrait.IDynCommonModuleGen.html {
    fn as_common(&self) -> &(dyn IDynCommonModuleGentrait.IDynCommonModuleGen.html + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + Synchttps://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html + 'static);
    fn supported_api_versions(&self) -> SupportedModuleApiVersionsstruct.SupportedModuleApiVersions.html;
    fn database_version(&self) -> DatabaseVersion;
    fn init<'life0, 'life1, 'async_trait>(
        &'life0 self,
        cfg: ServerModuleConfig../config/struct.ServerModuleConfig.html,
        db: Database,
        task_group: &'life1 mut TaskGroup../task/struct.TaskGroup.html
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Resulthttps://doc.rust-lang.org/1.67.0/core/result/enum.Result.html<DynServerModule../core/server/struct.DynServerModule.html, Errorhttps://docs.rs/anyhow/1.0.71/anyhow/struct.Error.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait, Globalhttps://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html>>
    where
        'life0: 'async_trait,
        'life1: 'async_trait,
        Self: 'async_trait;
    fn get_database_migrations(
        &self
    ) -> BTreeMaphttps://doc.rust-lang.org/1.67.0/alloc/collections/btree/map/struct.BTreeMap.html<DatabaseVersion, fnhttps://doc.rust-lang.org/1.67.0/std/primitive.fn.html(_: &'b mut DatabaseTransaction<'_>) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Resulthttps://doc.rust-lang.org/1.67.0/core/result/enum.Result.html<()https://doc.rust-lang.org/1.67.0/std/primitive.unit.html, Errorhttps://docs.rs/anyhow/1.0.71/anyhow/struct.Error.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'b, Globalhttps://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html>>, Globalhttps://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html>;
    fn validate_params(
        &self,
        params: &ConfigGenModuleParams../config/struct.ConfigGenModuleParams.html
    ) -> Resulthttps://doc.rust-lang.org/1.67.0/core/result/enum.Result.html<()https://doc.rust-lang.org/1.67.0/std/primitive.unit.html, Errorhttps://docs.rs/anyhow/1.0.71/anyhow/struct.Error.html>;
    fn trusted_dealer_gen(
        &self,
        peers: &[PeerId../struct.PeerId.html],
        params: &ConfigGenModuleParams../config/struct.ConfigGenModuleParams.html
    ) -> BTreeMaphttps://doc.rust-lang.org/1.67.0/alloc/collections/btree/map/struct.BTreeMap.html<PeerId../struct.PeerId.html, ServerModuleConfig../config/struct.ServerModuleConfig.html, Globalhttps://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html>;
    fn distributed_gen<'life0, 'life1, 'life2, 'async_trait>(
        &'life0 self,
        peers: &'life1 PeerHandlestruct.PeerHandle.html<'_>,
        params: &'life2 ConfigGenModuleParams../config/struct.ConfigGenModuleParams.html
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Resulthttps://doc.rust-lang.org/1.67.0/core/result/enum.Result.html<ServerModuleConfig../config/struct.ServerModuleConfig.html, DkgError../config/enum.DkgError.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait, Globalhttps://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html>>
    where
        'life0: 'async_trait,
        'life1: 'async_trait,
        'life2: 'async_trait,
        Self: 'async_trait;
    fn validate_config(
        &self,
        identity: &PeerId../struct.PeerId.html,
        config: ServerModuleConfig../config/struct.ServerModuleConfig.html
    ) -> Resulthttps://doc.rust-lang.org/1.67.0/core/result/enum.Result.html<()https://doc.rust-lang.org/1.67.0/std/primitive.unit.html, Errorhttps://docs.rs/anyhow/1.0.71/anyhow/struct.Error.html>;
    fn get_client_config(
        &self,
        module_instance_id: u16https://doc.rust-lang.org/1.67.0/std/primitive.u16.html,
        config: &ServerModuleConsensusConfig../config/struct.ServerModuleConsensusConfig.html
    ) -> Resulthttps://doc.rust-lang.org/1.67.0/core/result/enum.Result.html<ClientModuleConfig../config/struct.ClientModuleConfig.html, Errorhttps://docs.rs/anyhow/1.0.71/anyhow/struct.Error.html>;
    fn dump_database<'life0, 'life1, 'life2, 'async_trait>(
        &'life0 self,
        dbtx: &'life1 mut ModuleDatabaseTransaction<'life2, u16https://doc.rust-lang.org/1.67.0/std/primitive.u16.html>,
        prefix_names: Vechttps://doc.rust-lang.org/1.67.0/alloc/vec/struct.Vec.html<Stringhttps://doc.rust-lang.org/1.67.0/alloc/string/struct.String.html, Globalhttps://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html>
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Iteratorhttps://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html<Item = (Stringhttps://doc.rust-lang.org/1.67.0/alloc/string/struct.String.html, Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Serializehttps://docs.rs/erased-serde/0.3.25/erased_serde/ser/trait.Serialize.html + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'static, Globalhttps://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html>)> + 'life0, Globalhttps://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait, Globalhttps://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html>>
    where
        'life0: 'async_trait,
        'life1: 'async_trait,
        'life2: 'async_trait,
        Self: 'async_trait;
}

Expand description

Interface for Module Generation

This trait contains the methods responsible for the module’s

 * initialization
 * config generation
 * config validation

Once the module configuration is ready, the module can be instantiated via [Self::init].


REQUIRED METHODS§

FN AS_COMMON(&SELF) -> &(DYN IDYNCOMMONMODULEGEN [trait.IDynCommonModuleGen.html] + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + SYNC
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html] + 'STATIC)

FN SUPPORTED_API_VERSIONS(&SELF) -> SUPPORTEDMODULEAPIVERSIONS [struct.SupportedModuleApiVersions.html]

FN DATABASE_VERSION(&SELF) -> DATABASEVERSION

FN INIT<'LIFE0, 'LIFE1, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    CFG: SERVERMODULECONFIG [../config/struct.ServerModuleConfig.html],
    DB: DATABASE,
    TASK_GROUP: &'LIFE1 MUT TASKGROUP [../task/struct.TaskGroup.html]
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<DYNSERVERMODULE [../core/server/struct.DynServerModule.html],
ERROR [https://docs.rs/anyhow/1.0.71/anyhow/struct.Error.html]>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT, GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>>WHERE
    'LIFE0: 'ASYNC_TRAIT,
    'LIFE1: 'ASYNC_TRAIT,
    SELF: 'ASYNC_TRAIT,

Initialize the DynServerModule [../core/server/struct.DynServerModule.html] instance from its config

FN GET_DATABASE_MIGRATIONS(
    &SELF
) -> BTREEMAP [https://doc.rust-lang.org/1.67.0/alloc/collections/btree/map/struct.BTreeMap.html]<DATABASEVERSION, FN
[https://doc.rust-lang.org/1.67.0/std/primitive.fn.html](_: &'B MUT DATABASETRANSACTION<'_>) -> PIN
[https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX [https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN
FUTURE [https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://docs.rs/anyhow/1.0.71/anyhow/struct.Error.html]>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'B, GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>>, GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>

Retrieves the MigrationMap from the module to be applied to the database before the module is initialized. The MigrationMap is
indexed on the from version.

FN VALIDATE_PARAMS(&SELF, PARAMS: &CONFIGGENMODULEPARAMS [../config/struct.ConfigGenModuleParams.html]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://docs.rs/anyhow/1.0.71/anyhow/struct.Error.html]>

FN TRUSTED_DEALER_GEN(
    &SELF,
    PEERS: &[PEERID [../struct.PeerId.html]],
    PARAMS: &CONFIGGENMODULEPARAMS [../config/struct.ConfigGenModuleParams.html]
) -> BTREEMAP [https://doc.rust-lang.org/1.67.0/alloc/collections/btree/map/struct.BTreeMap.html]<PEERID [../struct.PeerId.html],
SERVERMODULECONFIG [../config/struct.ServerModuleConfig.html], GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>

FN DISTRIBUTED_GEN<'LIFE0, 'LIFE1, 'LIFE2, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    PEERS: &'LIFE1 PEERHANDLE [struct.PeerHandle.html]<'_>,
    PARAMS: &'LIFE2 CONFIGGENMODULEPARAMS [../config/struct.ConfigGenModuleParams.html]
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<SERVERMODULECONFIG [../config/struct.ServerModuleConfig.html],
DKGERROR [../config/enum.DkgError.html]>> + SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT,
GLOBAL [https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>>WHERE
    'LIFE0: 'ASYNC_TRAIT,
    'LIFE1: 'ASYNC_TRAIT,
    'LIFE2: 'ASYNC_TRAIT,
    SELF: 'ASYNC_TRAIT,

FN VALIDATE_CONFIG(
    &SELF,
    IDENTITY: &PEERID [../struct.PeerId.html],
    CONFIG: SERVERMODULECONFIG [../config/struct.ServerModuleConfig.html]
) -> RESULT [https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<()
[https://doc.rust-lang.org/1.67.0/std/primitive.unit.html], ERROR [https://docs.rs/anyhow/1.0.71/anyhow/struct.Error.html]>

FN GET_CLIENT_CONFIG(
    &SELF,
    MODULE_INSTANCE_ID: U16 [https://doc.rust-lang.org/1.67.0/std/primitive.u16.html],
    CONFIG: &SERVERMODULECONSENSUSCONFIG [../config/struct.ServerModuleConsensusConfig.html]
) -> RESULT [https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<CLIENTMODULECONFIG
[../config/struct.ClientModuleConfig.html], ERROR [https://docs.rs/anyhow/1.0.71/anyhow/struct.Error.html]>

FN DUMP_DATABASE<'LIFE0, 'LIFE1, 'LIFE2, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    DBTX: &'LIFE1 MUT MODULEDATABASETRANSACTION<'LIFE2, U16 [https://doc.rust-lang.org/1.67.0/std/primitive.u16.html]>,
    PREFIX_NAMES: VEC [https://doc.rust-lang.org/1.67.0/alloc/vec/struct.Vec.html]<STRING
[https://doc.rust-lang.org/1.67.0/alloc/string/struct.String.html], GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN ITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html]<ITEM = (STRING
[https://doc.rust-lang.org/1.67.0/alloc/string/struct.String.html], BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN SERIALIZE
[https://docs.rs/erased-serde/0.3.25/erased_serde/ser/trait.Serialize.html] + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'STATIC, GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>)> + 'LIFE0, GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT, GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>>WHERE
    'LIFE0: 'ASYNC_TRAIT,
    'LIFE1: 'ASYNC_TRAIT,
    'LIFE2: 'ASYNC_TRAIT,
    SELF: 'ASYNC_TRAIT,


IMPLEMENTORS§

§


IMPL<T> ISERVERMODULEGEN [trait.IServerModuleGen.html] FOR TWHERE
    T: 'STATIC + SERVERMODULEGEN [trait.ServerModuleGen.html] + SYNC
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html],

