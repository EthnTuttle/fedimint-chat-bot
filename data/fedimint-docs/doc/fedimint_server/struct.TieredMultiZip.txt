☰
logo [../static.files/rust-logo-151179464ae7ed46.svg]
../fedimint_server/index.html




logo [../static.files/rust-logo-151179464ae7ed46.svg]
../fedimint_server/index.html


TIEREDMULTIZIP


METHODS

 * new


TRAIT IMPLEMENTATIONS

 * Iterator


AUTO TRAIT IMPLEMENTATIONS

 * RefUnwindSafe
 * Send
 * Sync
 * Unpin
 * UnwindSafe


BLANKET IMPLEMENTATIONS

 * Any
 * Borrow<T>
 * BorrowMut<T>
 * Conv
 * FmtForward
 * From<T>
 * FutureExt
 * Instrument
 * Into<U>
 * IntoIterator
 * IntoRequest<T>
 * IteratorRandom
 * Itertools
 * MaybeSend
 * MaybeSend
 * MaybeSync
 * MultiUnzip<(FromA, FromB)>
 * Pipe
 * Same<T>
 * Tap
 * TryConv
 * TryFrom<U>
 * TryInto<U>
 * VZip<V>
 * WithSubscriber


IN FEDIMINT_SERVER [index.html]

? [../help.html]
Change settings [../static.files/wheel-5ec35bf9ca753509.svg]../settings.html


STRUCT FEDIMINT_SERVER [index.html]::TIEREDMULTIZIPCopy item path [../static.files/clipboard-7571035ce49a181d.svg]

[−]

pub struct TieredMultiZip<'a, I, T>where
    I: 'a,{ /* private fields */ }


IMPLEMENTATIONS§

§


IMPL<'A, I, C> TIEREDMULTIZIP [struct.TieredMultiZip.html]<'A, I, C>

PUB FN NEW(ITERS: VEC [https://doc.rust-lang.org/1.67.0/alloc/vec/struct.Vec.html]<I, GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>) -> TIEREDMULTIZIP [struct.TieredMultiZip.html]<'A, I, C> Ⓘ

Creates a new MultiZip Iterator from Notes iterators. These have to be checked for structural equality! There also has to be at
least one iterator in the iter vector.


TRAIT IMPLEMENTATIONS§

§


IMPL<'A, I, C> ITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html] FOR TIEREDMULTIZIP
[struct.TieredMultiZip.html]<'A, I, C>WHERE
    I: ITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html]<ITEM = (AMOUNT
[struct.Amount.html], C)>,

§

TYPE ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item] = (AMOUNT
[struct.Amount.html], VEC [https://doc.rust-lang.org/1.67.0/alloc/vec/struct.Vec.html]<C, GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>)

The type of the elements being iterated over.
§

FN NEXT [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#tymethod.next](&MUT SELF) -> OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<<TIEREDMULTIZIP [struct.TieredMultiZip.html]<'A, I, C> AS ITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html]>::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>

Advances the iterator and returns the next value. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#tymethod.next]
source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#138-142]§

FN NEXT_CHUNK [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.next_chunk]<CONST N: USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]>(
    &MUT SELF
) -> RESULT [https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<[SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]; N
[https://doc.rust-lang.org/1.67.0/std/primitive.array.html]], INTOITER
[https://doc.rust-lang.org/1.67.0/core/array/iter/struct.IntoIter.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], N>>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

🔬This is a nightly-only experimental API. (iter_next_chunk)
Advances the iterator and returns an array containing the next N values. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.next_chunk]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#215]§

FN SIZE_HINT [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.size_hint](&SELF) -> (USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html], OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]>)

Returns the bounds on the remaining length of the iterator. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.size_hint]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#252-254]§

FN COUNT [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.count](SELF) -> USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Consumes the iterator, counting the number of iterations and returning it. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.count]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#282-284]§

FN LAST [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.last](SELF) -> OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Consumes the iterator, returning the last element. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.last]
source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#328]§

FN ADVANCE_BY [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.advance_by](&MUT SELF, N:
USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]>

🔬This is a nightly-only experimental API. (iter_advance_by)
Advances the iterator by n elements. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.advance_by]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#376]§

FN NTH [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.nth](&MUT SELF, N: USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]) -> OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>

Returns the nth element of the iterator. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.nth]
1.28.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#428-430]§

FN STEP_BY [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.step_by](SELF, STEP: USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]) -> STEPBY
[https://doc.rust-lang.org/1.67.0/core/iter/adapters/step_by/struct.StepBy.html]<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Creates an iterator starting at the same point, but stepping by the given amount at each iteration. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.step_by]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#499-502]§

FN CHAIN [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.chain]<U>(SELF, OTHER: U) -> CHAIN
[https://doc.rust-lang.org/1.67.0/core/iter/adapters/chain/struct.Chain.html]<SELF, <U AS INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::INTOITER
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    U: INTOITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]<ITEM = SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>,

Takes two iterators and creates a new iterator over both in sequence. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.chain]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#617-620]§

FN ZIP [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.zip]<U>(SELF, OTHER: U) -> ZIP
[https://doc.rust-lang.org/1.67.0/core/iter/adapters/zip/struct.Zip.html]<SELF, <U AS INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::INTOITER
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    U: INTOITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html],

‘Zips up’ two iterators into a single iterator of pairs. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.zip]
source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#717-720]§

FN INTERSPERSE_WITH
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.intersperse_with]<G>(SELF, SEPARATOR: G) ->
INTERSPERSEWITH [https://doc.rust-lang.org/1.67.0/core/iter/adapters/intersperse/struct.IntersperseWith.html]<SELF, G>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    G: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html]() -> SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item],

🔬This is a nightly-only experimental API. (iter_intersperse)
Creates a new iterator which places an item generated by separator between adjacent items of the original iterator. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.intersperse_with]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#776-779]§

FN MAP [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.map]<B, F>(SELF, F: F) -> MAP
[https://doc.rust-lang.org/1.67.0/core/iter/adapters/map/struct.Map.html]<SELF, F>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> B,

Takes a closure and creates an iterator which calls that closure on each element. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.map]
1.21.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#821-824]§

FN FOR_EACH [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.for_each]<F>(SELF, F: F)WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]),

Calls a closure on each element of an iterator. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.for_each]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#896-899]§

FN FILTER [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.filter]<P>(SELF, PREDICATE: P) ->
FILTER [https://doc.rust-lang.org/1.67.0/core/iter/adapters/filter/struct.Filter.html]<SELF, P>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    P: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html],

Creates an iterator which uses a closure to determine if an element should be yielded. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.filter]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#941-944]§

FN FILTER_MAP [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.filter_map]<B, F>(SELF, F: F)
-> FILTERMAP [https://doc.rust-lang.org/1.67.0/core/iter/adapters/filter_map/struct.FilterMap.html]<SELF, F>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<B>,

Creates an iterator that both filters and maps. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.filter_map]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#987-989]§

FN ENUMERATE [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.enumerate](SELF) -> ENUMERATE
[https://doc.rust-lang.org/1.67.0/core/iter/adapters/enumerate/struct.Enumerate.html]<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Creates an iterator which gives the current iteration count as well as the next value. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.enumerate]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#1058-1060]§

FN PEEKABLE [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.peekable](SELF) -> PEEKABLE
[https://doc.rust-lang.org/1.67.0/core/iter/adapters/peekable/struct.Peekable.html]<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Creates an iterator which can use the peek
[https://doc.rust-lang.org/1.67.0/core/iter/adapters/peekable/struct.Peekable.html#method.peek] and peek_mut
[https://doc.rust-lang.org/1.67.0/core/iter/adapters/peekable/struct.Peekable.html#method.peek_mut] methods to look at the next
element of the iterator without consuming it. See their documentation for more information. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.peekable]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#1123-1126]§

FN SKIP_WHILE [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.skip_while]<P>(SELF,
PREDICATE: P) -> SKIPWHILE [https://doc.rust-lang.org/1.67.0/core/iter/adapters/skip_while/struct.SkipWhile.html]<SELF, P>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    P: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html],

Creates an iterator that skip [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.skip]s
elements based on a predicate. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.skip_while]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#1204-1207]§

FN TAKE_WHILE [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.take_while]<P>(SELF,
PREDICATE: P) -> TAKEWHILE [https://doc.rust-lang.org/1.67.0/core/iter/adapters/take_while/struct.TakeWhile.html]<SELF, P>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    P: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html],

Creates an iterator that yields elements based on a predicate. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.take_while]
1.57.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#1292-1295]§

FN MAP_WHILE [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.map_while]<B, P>(SELF,
PREDICATE: P) -> MAPWHILE [https://doc.rust-lang.org/1.67.0/core/iter/adapters/map_while/struct.MapWhile.html]<SELF, P>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    P: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<B>,

Creates an iterator that both yields elements based on a predicate and maps. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.map_while]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#1323-1325]§

FN SKIP [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.skip](SELF, N: USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]) -> SKIP
[https://doc.rust-lang.org/1.67.0/core/iter/adapters/skip/struct.Skip.html]<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Creates an iterator that skips the first n elements. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.skip]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#1376-1378]§

FN TAKE [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.take](SELF, N: USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]) -> TAKE
[https://doc.rust-lang.org/1.67.0/core/iter/adapters/take/struct.Take.html]<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Creates an iterator that yields the first n elements, or fewer if the underlying iterator ends sooner. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.take]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#1420-1423]§

FN SCAN [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.scan]<ST, B, F>(SELF,
INITIAL_STATE: ST, F: F) -> SCAN [https://doc.rust-lang.org/1.67.0/core/iter/adapters/scan/struct.Scan.html]<SELF, ST, F>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]ST, SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<B>,

An iterator adapter similar to fold [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.fold]
that holds internal state and produces a new iterator. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.scan]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#1460-1464]§

FN FLAT_MAP [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.flat_map]<U, F>(SELF, F: F) ->
FLATMAP [https://doc.rust-lang.org/1.67.0/core/iter/adapters/flatten/struct.FlatMap.html]<SELF, U, F>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    U: INTOITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> U,

Creates an iterator that works like map, but flattens nested structure. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.flat_map]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#1600-1602]§

FN FUSE [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.fuse](SELF) -> FUSE
[https://doc.rust-lang.org/1.67.0/core/iter/adapters/fuse/struct.Fuse.html]<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Creates an iterator which ends after the first None [https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html#variant.None].
Read more [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.fuse]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#1684-1687]§

FN INSPECT [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.inspect]<F>(SELF, F: F) ->
INSPECT [https://doc.rust-lang.org/1.67.0/core/iter/adapters/inspect/struct.Inspect.html]<SELF, F>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]),

Does something with each element of an iterator, passing the value on. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.inspect]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#1714-1716]§

FN BY_REF [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.by_ref](&MUT SELF) -> &MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELFWHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Borrows an iterator, rather than consuming it. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.by_ref]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#1832-1834]§

FN COLLECT [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.collect]<B>(SELF) -> BWHERE
    B: FROMITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.FromIterator.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Transforms an iterator into a collection. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.collect]
source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#1983-1985]§

FN COLLECT_INTO [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.collect_into]<E>(SELF,
COLLECTION: &MUT [https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]E) -> &MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]EWHERE
    E: EXTEND [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.Extend.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

🔬This is a nightly-only experimental API. (iter_collect_into)
Collects all the items from an iterator into a collection. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.collect_into]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#2017-2021]§

FN PARTITION [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.partition]<B, F>(SELF, F: F)
-> (B, B) [https://doc.rust-lang.org/1.67.0/std/primitive.tuple.html]WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    B: DEFAULT [https://doc.rust-lang.org/1.67.0/core/default/trait.Default.html] + EXTEND
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.Extend.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>,
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html],

Consumes an iterator, creating two collections from it. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.partition]
source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#2136-2139]§

FN IS_PARTITIONED [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.is_partitioned]<P>(SELF,
PREDICATE: P) -> BOOL [https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    P: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html],

🔬This is a nightly-only experimental API. (iter_is_partitioned)
Checks if the elements of this iterator are partitioned according to the given predicate, such that all those that return true
precede all those that return false. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.is_partitioned]
1.27.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#2230-2234]§

FN TRY_FOLD [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.try_fold]<B, F, R>(&MUT SELF,
INIT: B, F: F) -> RWHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](B, SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> R,
    R: TRY [https://doc.rust-lang.org/1.67.0/core/ops/try_trait/trait.Try.html]<OUTPUT = B>,

An iterator method that applies a function as long as it returns successfully, producing a single, final value. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.try_fold]
1.27.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#2288-2292]§

FN TRY_FOR_EACH [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.try_for_each]<F, R>(&MUT
SELF, F: F) -> RWHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> R,
    R: TRY [https://doc.rust-lang.org/1.67.0/core/ops/try_trait/trait.Try.html]<OUTPUT = ()
[https://doc.rust-lang.org/1.67.0/std/primitive.unit.html]>,

An iterator method that applies a fallible function to each item in the iterator, stopping at the first error and returning that
error. Read more [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.try_for_each]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#2407-2410]§

FN FOLD [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.fold]<B, F>(SELF, INIT: B, F: F) ->
BWHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](B, SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> B,

Folds every element into an accumulator by applying an operation, returning the final result. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.fold]
1.51.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#2444-2447]§

FN REDUCE [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.reduce]<F>(SELF, F: F) -> OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item],

Reduces the elements to a single one, by repeatedly applying a reducing operation. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.reduce]
source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#2515-2520]§

FN TRY_REDUCE [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.try_reduce]<F, R>(
    &MUT SELF,
    F: F
) -> <<R AS TRY [https://doc.rust-lang.org/1.67.0/core/ops/try_trait/trait.Try.html]>::RESIDUAL
[https://doc.rust-lang.org/1.67.0/core/ops/try_trait/trait.Try.html#associatedtype.Residual] AS RESIDUAL
[https://doc.rust-lang.org/1.67.0/core/ops/try_trait/trait.Residual.html]<OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<<R AS TRY
[https://doc.rust-lang.org/1.67.0/core/ops/try_trait/trait.Try.html]>::OUTPUT
[https://doc.rust-lang.org/1.67.0/core/ops/try_trait/trait.Try.html#associatedtype.Output]>>>::TRYTYPE
[https://doc.rust-lang.org/1.67.0/core/ops/try_trait/trait.Residual.html#associatedtype.TryType]WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> R,
    R: TRY [https://doc.rust-lang.org/1.67.0/core/ops/try_trait/trait.Try.html]<OUTPUT = SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>,
    <R AS TRY [https://doc.rust-lang.org/1.67.0/core/ops/try_trait/trait.Try.html]>::RESIDUAL
[https://doc.rust-lang.org/1.67.0/core/ops/try_trait/trait.Try.html#associatedtype.Residual]: RESIDUAL
[https://doc.rust-lang.org/1.67.0/core/ops/try_trait/trait.Residual.html]<OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>>,

🔬This is a nightly-only experimental API. (iterator_try_reduce)
Reduces the elements to a single one by repeatedly applying a reducing operation. If the closure returns a failure, the failure is
propagated back to the caller immediately. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.try_reduce]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#2572-2575]§

FN ALL [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.all]<F>(&MUT SELF, F: F) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html],

Tests if every element of the iterator matches a predicate. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.all]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#2625-2628]§

FN ANY [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.any]<F>(&MUT SELF, F: F) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html],

Tests if any element of the iterator matches a predicate. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.any]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#2685-2688]§

FN FIND [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.find]<P>(&MUT SELF, PREDICATE: P)
-> OPTION [https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    P: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html],

Searches for an element of an iterator that satisfies a predicate. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.find]
1.30.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#2716-2719]§

FN FIND_MAP [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.find_map]<B, F>(&MUT SELF, F:
F) -> OPTION [https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<B>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<B>,

Applies function to the elements of iterator and returns the first non-none result. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.find_map]
source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#2772-2777]§

FN TRY_FIND [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.try_find]<F, R>(
    &MUT SELF,
    F: F
) -> <<R AS TRY [https://doc.rust-lang.org/1.67.0/core/ops/try_trait/trait.Try.html]>::RESIDUAL
[https://doc.rust-lang.org/1.67.0/core/ops/try_trait/trait.Try.html#associatedtype.Residual] AS RESIDUAL
[https://doc.rust-lang.org/1.67.0/core/ops/try_trait/trait.Residual.html]<OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>>>::TRYTYPE
[https://doc.rust-lang.org/1.67.0/core/ops/try_trait/trait.Residual.html#associatedtype.TryType]WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> R,
    R: TRY [https://doc.rust-lang.org/1.67.0/core/ops/try_trait/trait.Try.html]<OUTPUT = BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]>,
    <R AS TRY [https://doc.rust-lang.org/1.67.0/core/ops/try_trait/trait.Try.html]>::RESIDUAL
[https://doc.rust-lang.org/1.67.0/core/ops/try_trait/trait.Try.html#associatedtype.Residual]: RESIDUAL
[https://doc.rust-lang.org/1.67.0/core/ops/try_trait/trait.Residual.html]<OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>>,

🔬This is a nightly-only experimental API. (try_find)
Applies function to the elements of iterator and returns the first true result or the first error. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.try_find]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#2854-2857]§

FN POSITION [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.position]<P>(&MUT SELF,
PREDICATE: P) -> OPTION [https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    P: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html],

Searches for an element in an iterator, returning its index. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.position]
1.6.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#3022-3025]§

FN MAX_BY_KEY [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.max_by_key]<B, F>(SELF, F: F)
-> OPTION [https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>WHERE
    B: ORD [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Ord.html],
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> B,

Returns the element that gives the maximum value from the specified function. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.max_by_key]
1.15.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#3055-3058]§

FN MAX_BY [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.max_by]<F>(SELF, COMPARE: F) ->
OPTION [https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], &SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> ORDERING
[https://doc.rust-lang.org/1.67.0/core/cmp/enum.Ordering.html],

Returns the element that gives the maximum value with respect to the specified comparison function. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.max_by]
1.6.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#3082-3085]§

FN MIN_BY_KEY [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.min_by_key]<B, F>(SELF, F: F)
-> OPTION [https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>WHERE
    B: ORD [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Ord.html],
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> B,

Returns the element that gives the minimum value from the specified function. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.min_by_key]
1.15.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#3115-3118]§

FN MIN_BY [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.min_by]<F>(SELF, COMPARE: F) ->
OPTION [https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], &SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> ORDERING
[https://doc.rust-lang.org/1.67.0/core/cmp/enum.Ordering.html],

Returns the element that gives the minimum value with respect to the specified comparison function. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.min_by]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#3190-3194]§

FN UNZIP [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.unzip]<A, B, FROMA, FROMB>(SELF)
-> (FROMA, FROMB) [https://doc.rust-lang.org/1.67.0/std/primitive.tuple.html]WHERE
    FROMA: DEFAULT [https://doc.rust-lang.org/1.67.0/core/default/trait.Default.html] + EXTEND
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.Extend.html]<A>,
    FROMB: DEFAULT [https://doc.rust-lang.org/1.67.0/core/default/trait.Default.html] + EXTEND
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.Extend.html]<B>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html] + ITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html]<ITEM = (A, B)
[https://doc.rust-lang.org/1.67.0/std/primitive.tuple.html]>,

Converts an iterator of pairs into a pair of containers. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.unzip]
1.36.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#3222-3225]§

FN COPIED [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.copied]<'A, T>(SELF) -> COPIED
[https://doc.rust-lang.org/1.67.0/core/iter/adapters/copied/struct.Copied.html]<SELF>WHERE
    T: 'A + COPY [https://doc.rust-lang.org/1.67.0/core/marker/trait.Copy.html],
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html] + ITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html]<ITEM = &'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T>,

Creates an iterator which copies all of its elements. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.copied]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#3269-3272]§

FN CLONED [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.cloned]<'A, T>(SELF) -> CLONED
[https://doc.rust-lang.org/1.67.0/core/iter/adapters/cloned/struct.Cloned.html]<SELF>WHERE
    T: 'A + CLONE [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html],
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html] + ITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html]<ITEM = &'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T>,

Creates an iterator which clone [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html#tymethod.clone]s all of its
elements. Read more [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.cloned]
source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#3346-3348]§

FN ARRAY_CHUNKS [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.array_chunks]<CONST
N: USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]>(SELF) -> ARRAYCHUNKS
[https://doc.rust-lang.org/1.67.0/core/iter/adapters/array_chunks/struct.ArrayChunks.html]<SELF, N>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

🔬This is a nightly-only experimental API. (iter_array_chunks)
Returns an iterator over N elements of the iterator at a time. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.array_chunks]
1.11.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#3376-3379]§

FN SUM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.sum]<S>(SELF) -> SWHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    S: SUM [https://doc.rust-lang.org/1.67.0/core/iter/traits/accum/trait.Sum.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>,

Sums the elements of an iterator. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.sum]
1.11.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#3405-3408]§

FN PRODUCT [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.product]<P>(SELF) -> PWHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    P: PRODUCT [https://doc.rust-lang.org/1.67.0/core/iter/traits/accum/trait.Product.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>,

Iterates over the entire iterator, multiplying all the elements Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.product]
source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#3455-3459]§

FN CMP_BY [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.cmp_by]<I, F>(SELF, OTHER: I,
CMP: F) -> ORDERING [https://doc.rust-lang.org/1.67.0/core/cmp/enum.Ordering.html]WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    I: INTOITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], <I AS INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item]) -> ORDERING
[https://doc.rust-lang.org/1.67.0/core/cmp/enum.Ordering.html],

🔬This is a nightly-only experimental API. (iter_order_by)
Lexicographically [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Ord.html#lexicographical-comparison] compares the elements of
this Iterator [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html] with those of another with respect
to the specified comparison function. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.cmp_by]
1.5.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#3493-3497]§

FN PARTIAL_CMP [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.partial_cmp]<I>(SELF, OTHER:
I) -> OPTION [https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<ORDERING
[https://doc.rust-lang.org/1.67.0/core/cmp/enum.Ordering.html]>WHERE
    I: INTOITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: PARTIALORD
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialOrd.html]<<I AS INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item]>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Lexicographically [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Ord.html#lexicographical-comparison] compares the elements of
this Iterator [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html] with those of another. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.partial_cmp]
source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#3531-3535]§

FN PARTIAL_CMP_BY [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.partial_cmp_by]<I,
F>(SELF, OTHER: I, PARTIAL_CMP: F) -> OPTION [https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<ORDERING
[https://doc.rust-lang.org/1.67.0/core/cmp/enum.Ordering.html]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    I: INTOITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], <I AS INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item]) -> OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<ORDERING
[https://doc.rust-lang.org/1.67.0/core/cmp/enum.Ordering.html]>,

🔬This is a nightly-only experimental API. (iter_order_by)
Lexicographically [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Ord.html#lexicographical-comparison] compares the elements of
this Iterator [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html] with those of another with respect
to the specified comparison function. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.partial_cmp_by]
1.5.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#3564-3568]§

FN EQ [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.eq]<I>(SELF, OTHER: I) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]WHERE
    I: INTOITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: PARTIALEQ
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialEq.html]<<I AS INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item]>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Determines if the elements of this Iterator [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html] are
equal to those of another. Read more [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.eq]
source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#3589-3593]§

FN EQ_BY [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.eq_by]<I, F>(SELF, OTHER: I, EQ:
F) -> BOOL [https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    I: INTOITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], <I AS INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item]) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html],

🔬This is a nightly-only experimental API. (iter_order_by)
Determines if the elements of this Iterator [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html] are
equal to those of another with respect to the specified equality function. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.eq_by]
1.5.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#3621-3625]§

FN NE [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.ne]<I>(SELF, OTHER: I) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]WHERE
    I: INTOITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: PARTIALEQ
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialEq.html]<<I AS INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item]>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Determines if the elements of this Iterator [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html] are
unequal to those of another. Read more [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.ne]
1.5.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#3642-3646]§

FN LT [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.lt]<I>(SELF, OTHER: I) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]WHERE
    I: INTOITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: PARTIALORD
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialOrd.html]<<I AS INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item]>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Determines if the elements of this Iterator [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html] are
lexicographically [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Ord.html#lexicographical-comparison] less than those of
another. Read more [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.lt]
1.5.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#3663-3667]§

FN LE [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.le]<I>(SELF, OTHER: I) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]WHERE
    I: INTOITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: PARTIALORD
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialOrd.html]<<I AS INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item]>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Determines if the elements of this Iterator [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html] are
lexicographically [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Ord.html#lexicographical-comparison] less or equal to those of
another. Read more [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.le]
1.5.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#3684-3688]§

FN GT [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.gt]<I>(SELF, OTHER: I) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]WHERE
    I: INTOITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: PARTIALORD
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialOrd.html]<<I AS INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item]>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Determines if the elements of this Iterator [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html] are
lexicographically [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Ord.html#lexicographical-comparison] greater than those of
another. Read more [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.gt]
1.5.0 · source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#3705-3709]§

FN GE [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.ge]<I>(SELF, OTHER: I) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]WHERE
    I: INTOITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: PARTIALORD
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialOrd.html]<<I AS INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item]>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Determines if the elements of this Iterator [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html] are
lexicographically [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Ord.html#lexicographical-comparison] greater than or equal to
those of another. Read more [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.ge]
source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#3764-3767]§

FN IS_SORTED_BY [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted_by]<F>(SELF,
COMPARE: F) -> BOOL [https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], &SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<ORDERING
[https://doc.rust-lang.org/1.67.0/core/cmp/enum.Ordering.html]>,

🔬This is a nightly-only experimental API. (is_sorted)
Checks if the elements of this iterator are sorted using the given comparator function. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted_by]
source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/iterator.rs.html#3810-3814]§

FN IS_SORTED_BY_KEY [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted_by_key]<F,
K>(SELF, F: F) -> BOOL [https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> K,
    K: PARTIALORD [https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialOrd.html]<K>,

🔬This is a nightly-only experimental API. (is_sorted)
Checks if the elements of this iterator are sorted using the given key extraction function. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted_by_key]


AUTO TRAIT IMPLEMENTATIONS§

§


IMPL<'A, I, T> REFUNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.RefUnwindSafe.html] FOR TIEREDMULTIZIP
[struct.TieredMultiZip.html]<'A, I, T>WHERE
    I: REFUNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.RefUnwindSafe.html],
    T: REFUNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.RefUnwindSafe.html],

§


IMPL<'A, I, T> SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] FOR TIEREDMULTIZIP
[struct.TieredMultiZip.html]<'A, I, T>WHERE
    I: SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html],
    T: SYNC [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html],

§


IMPL<'A, I, T> SYNC [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html] FOR TIEREDMULTIZIP
[struct.TieredMultiZip.html]<'A, I, T>WHERE
    I: SYNC [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html],
    T: SYNC [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html],

§


IMPL<'A, I, T> UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html] FOR TIEREDMULTIZIP
[struct.TieredMultiZip.html]<'A, I, T>WHERE
    I: UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html],

§


IMPL<'A, I, T> UNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.UnwindSafe.html] FOR TIEREDMULTIZIP
[struct.TieredMultiZip.html]<'A, I, T>WHERE
    I: UNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.UnwindSafe.html],
    T: REFUNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.RefUnwindSafe.html],


BLANKET IMPLEMENTATIONS§

source [https://doc.rust-lang.org/1.67.0/src/core/any.rs.html#200]§


IMPL<T> ANY [https://doc.rust-lang.org/1.67.0/core/any/trait.Any.html] FOR TWHERE
    T: 'STATIC + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

source [https://doc.rust-lang.org/1.67.0/src/core/any.rs.html#201]§

FN TYPE_ID [https://doc.rust-lang.org/1.67.0/core/any/trait.Any.html#tymethod.type_id](&SELF) -> TYPEID
[https://doc.rust-lang.org/1.67.0/core/any/struct.TypeId.html]

Gets the TypeId of self. Read more [https://doc.rust-lang.org/1.67.0/core/any/trait.Any.html#tymethod.type_id]
source [https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#211]§


IMPL<T> BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<T> FOR TWHERE
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

const: unstable [https://github.com/rust-lang/rust/issues/91522] · source
[https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#213]§

FN BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html#tymethod.borrow](&SELF) -> &
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T

Immutably borrows from an owned value. Read more [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html#tymethod.borrow]
source [https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#220]§


IMPL<T> BORROWMUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html]<T> FOR TWHERE
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

const: unstable [https://github.com/rust-lang/rust/issues/91522] · source
[https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#221]§

FN BORROW_MUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut](&MUT SELF) -> &MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T

Mutably borrows from an owned value. Read more
[https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut]
§


IMPL<T> CONV FOR T

§

FN CONV<T>(SELF) -> TWHERE
    SELF: INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<T>,

Converts self into T using Into<T>. Read more
§


IMPL<T> FMTFORWARD FOR T

§

FN FMT_BINARY(SELF) -> FMTBINARY<SELF>WHERE
    SELF: BINARY [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Binary.html],

Causes self to use its Binary implementation when Debug-formatted.
§

FN FMT_DISPLAY(SELF) -> FMTDISPLAY<SELF>WHERE
    SELF: DISPLAY [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Display.html],

Causes self to use its Display implementation when Debug-formatted. Read more
§

FN FMT_LOWER_EXP(SELF) -> FMTLOWEREXP<SELF>WHERE
    SELF: LOWEREXP [https://doc.rust-lang.org/1.67.0/core/fmt/trait.LowerExp.html],

Causes self to use its LowerExp implementation when Debug-formatted. Read more
§

FN FMT_LOWER_HEX(SELF) -> FMTLOWERHEX<SELF>WHERE
    SELF: LOWERHEX [https://doc.rust-lang.org/1.67.0/core/fmt/trait.LowerHex.html],

Causes self to use its LowerHex implementation when Debug-formatted. Read more
§

FN FMT_OCTAL(SELF) -> FMTOCTAL<SELF>WHERE
    SELF: OCTAL [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Octal.html],

Causes self to use its Octal implementation when Debug-formatted.
§

FN FMT_POINTER(SELF) -> FMTPOINTER<SELF>WHERE
    SELF: POINTER [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Pointer.html],

Causes self to use its Pointer implementation when Debug-formatted. Read more
§

FN FMT_UPPER_EXP(SELF) -> FMTUPPEREXP<SELF>WHERE
    SELF: UPPEREXP [https://doc.rust-lang.org/1.67.0/core/fmt/trait.UpperExp.html],

Causes self to use its UpperExp implementation when Debug-formatted. Read more
§

FN FMT_UPPER_HEX(SELF) -> FMTUPPERHEX<SELF>WHERE
    SELF: UPPERHEX [https://doc.rust-lang.org/1.67.0/core/fmt/trait.UpperHex.html],

Causes self to use its UpperHex implementation when Debug-formatted. Read more
§

FN FMT_LIST(SELF) -> FMTLIST<SELF>WHERE
    &'A [https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF: FOR<'A> INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html],

Formats each item in a sequence. Read more
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#733]§


IMPL<T> FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<T> FOR T

const: unstable [https://github.com/rust-lang/rust/issues/88674] · source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#736]§

FN FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html#tymethod.from](T: T) -> T

Returns the argument unchanged.

§


IMPL<T> FUTUREEXT FOR T

§

FN WITH_CONTEXT(SELF, OTEL_CX: CONTEXT) -> WITHCONTEXT<SELF>

Attaches the provided Context [crate::Context] to this type, returning a WithContext wrapper. Read more
§

FN WITH_CURRENT_CONTEXT(SELF) -> WITHCONTEXT<SELF>

Attaches the current Context [crate::Context] to this type, returning a WithContext wrapper. Read more
source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#276]§


IMPL<T> INSTRUMENT [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.Instrument.html] FOR T

source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#82]§

FN INSTRUMENT [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.Instrument.html#method.instrument](SELF, SPAN: SPAN
[https://docs.rs/tracing/0.1.37/tracing/span/struct.Span.html]) -> INSTRUMENTED
[https://docs.rs/tracing/0.1.37/tracing/instrument/struct.Instrumented.html]<SELF>

Instruments this type with the provided Span [https://docs.rs/tracing/0.1.37/tracing/span/struct.Span.html], returning an
Instrumented wrapper. Read more [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.Instrument.html#method.instrument]
source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#121]§

FN IN_CURRENT_SPAN [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.Instrument.html#method.in_current_span](SELF) ->
INSTRUMENTED [https://docs.rs/tracing/0.1.37/tracing/instrument/struct.Instrumented.html]<SELF>

Instruments this type with the current [https://docs.rs/tracing/0.1.37/tracing/span/struct.Span.html#method.current] Span
[https://docs.rs/tracing/0.1.37/tracing/span/struct.Span.html], returning an Instrumented wrapper. Read more
[https://docs.rs/tracing/0.1.37/tracing/instrument/trait.Instrument.html#method.in_current_span]
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#717]§


IMPL<T, U> INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<U> FOR TWHERE
    U: FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<T>,

const: unstable [https://github.com/rust-lang/rust/issues/88674] · source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#725]§

FN INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html#tymethod.into](SELF) -> U

Calls U::from(self).

That is, this conversion is whatever the implementation of From [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<T>
for U chooses to do.

source [https://doc.rust-lang.org/1.67.0/src/core/iter/traits/collect.rs.html#267]§


IMPL<I> INTOITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html] FOR IWHERE
    I: ITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html],

§

TYPE ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item] = <I AS ITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html]>::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]

The type of the elements being iterated over.
§

TYPE INTOITER [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter] = I

Which kind of iterator are we turning this into?
const: unstable [https://github.com/rust-lang/rust/issues/90603] · source
[https://doc.rust-lang.org/1.67.0/src/core/iter/traits/collect.rs.html#272]§

FN INTO_ITER [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter](SELF) -> I

Creates an iterator from a value. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter]
source [https://docs.rs/tonic/0.9.2/src/tonic/request.rs.html#384]§


IMPL<T> INTOREQUEST [https://docs.rs/tonic/0.9.2/tonic/request/trait.IntoRequest.html]<T> FOR T

source [https://docs.rs/tonic/0.9.2/src/tonic/request.rs.html#385]§

FN INTO_REQUEST [https://docs.rs/tonic/0.9.2/tonic/request/trait.IntoRequest.html#tymethod.into_request](SELF) -> REQUEST
[https://docs.rs/tonic/0.9.2/tonic/request/struct.Request.html]<T>

Wrap the input message T in a tonic::Request
source [https://rust-random.github.io/rand/src/rand/seq/mod.rs.html#615]§


IMPL<I> ITERATORRANDOM [https://rust-random.github.io/rand/rand/seq/trait.IteratorRandom.html] FOR IWHERE
    I: ITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html],

source [https://rust-random.github.io/rand/src/rand/seq/mod.rs.html#304-305]§

FN CHOOSE [https://rust-random.github.io/rand/rand/seq/trait.IteratorRandom.html#method.choose]<R>(SELF, RNG: &MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R) -> OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>WHERE
    R: RNG [https://rust-random.github.io/rand/rand/rng/trait.Rng.html] + ?SIZED
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Choose one element at random from the iterator. Read more
[https://rust-random.github.io/rand/rand/seq/trait.IteratorRandom.html#method.choose]
source [https://rust-random.github.io/rand/src/rand/seq/mod.rs.html#373-374]§

FN CHOOSE_STABLE [https://rust-random.github.io/rand/rand/seq/trait.IteratorRandom.html#method.choose_stable]<R>(SELF, RNG: &MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R) -> OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>WHERE
    R: RNG [https://rust-random.github.io/rand/rand/rng/trait.Rng.html] + ?SIZED
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Choose one element at random from the iterator. Read more
[https://rust-random.github.io/rand/rand/seq/trait.IteratorRandom.html#method.choose_stable]
source [https://rust-random.github.io/rand/src/rand/seq/mod.rs.html#426-427]§

FN CHOOSE_MULTIPLE_FILL
[https://rust-random.github.io/rand/rand/seq/trait.IteratorRandom.html#method.choose_multiple_fill]<R>(SELF, RNG: &MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R, BUF: &MUT [SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]]) -> USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]WHERE
    R: RNG [https://rust-random.github.io/rand/rand/rng/trait.Rng.html] + ?SIZED
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Collects values at random from the iterator into a supplied buffer until that buffer is filled. Read more
[https://rust-random.github.io/rand/rand/seq/trait.IteratorRandom.html#method.choose_multiple_fill]
source [https://rust-random.github.io/rand/src/rand/seq/mod.rs.html#466-467]§

FN CHOOSE_MULTIPLE [https://rust-random.github.io/rand/rand/seq/trait.IteratorRandom.html#method.choose_multiple]<R>(SELF, RNG:
&MUT [https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R, AMOUNT: USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]) -> VEC
[https://doc.rust-lang.org/1.67.0/alloc/vec/struct.Vec.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]> ⒾWHERE
    R: RNG [https://rust-random.github.io/rand/rand/rng/trait.Rng.html] + ?SIZED
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Collects amount values at random from the iterator into a vector. Read more
[https://rust-random.github.io/rand/rand/seq/trait.IteratorRandom.html#method.choose_multiple]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#3662]§


IMPL<T> ITERTOOLS [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html] FOR TWHERE
    T: ITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html] + ?SIZED
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#446-448]§

FN INTERLEAVE [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.interleave]<J>(
    SELF,
    OTHER: J
) -> INTERLEAVE [https://docs.rs/itertools/0.8/itertools/adaptors/struct.Interleave.html]<SELF, <J AS INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::INTOITER
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter]>WHERE
    J: INTOITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]<ITEM = SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Alternate elements from two iterators until both have run out. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.interleave]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#464-466]§

FN INTERLEAVE_SHORTEST [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.interleave_shortest]<J>(
    SELF,
    OTHER: J
) -> INTERLEAVESHORTEST [https://docs.rs/itertools/0.8/itertools/adaptors/struct.InterleaveShortest.html]<SELF, <J AS INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::INTOITER
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter]>WHERE
    J: INTOITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]<ITEM = SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Alternate elements from two iterators until at least one of them has run out. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.interleave_shortest]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#483-485]§

FN INTERSPERSE [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.intersperse](
    SELF,
    ELEMENT: SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]
) -> INTERSPERSEWITH [https://docs.rs/itertools/0.8/itertools/intersperse/struct.IntersperseWith.html]<SELF,
INTERSPERSEELEMENTSIMPLE<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: CLONE
[https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html],

An iterator adaptor to insert a particular value between each element of the adapted iterator. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.intersperse]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#504-506]§

FN INTERSPERSE_WITH [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.intersperse_with]<F>(SELF, ELEMENT: F) ->
INTERSPERSEWITH [https://docs.rs/itertools/0.8/itertools/intersperse/struct.IntersperseWith.html]<SELF, F>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html]() -> SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item],

An iterator adaptor to insert a particular value created by a function between each element of the adapted iterator. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.intersperse_with]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#538-540]§

FN ZIP_LONGEST [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.zip_longest]<J>(
    SELF,
    OTHER: J
) -> ZIPLONGEST [https://docs.rs/itertools/0.8/itertools/zip_longest/struct.ZipLongest.html]<SELF, <J AS INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::INTOITER
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter]>WHERE
    J: INTOITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html],
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Create an iterator which iterates over both this and the specified iterator simultaneously, yielding pairs of two optional
elements. Read more [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.zip_longest]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#551-553]§

FN ZIP_EQ [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.zip_eq]<J>(SELF, OTHER: J) -> ZIPEQ
[https://docs.rs/itertools/0.8/itertools/zip_eq_impl/struct.ZipEq.html]<SELF, <J AS INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::INTOITER
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter]>WHERE
    J: INTOITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html],
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Create an iterator which iterates over both this and the specified iterator simultaneously, yielding pairs of elements. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.zip_eq]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#581-583]§

FN BATCHING [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.batching]<B, F>(SELF, F: F) -> BATCHING
[https://docs.rs/itertools/0.8/itertools/adaptors/struct.Batching.html]<SELF, F>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF) -> OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<B>,
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

A “meta iterator adaptor”. Its closure receives a reference to the iterator and may pick off as many elements as it likes, to
produce the next iterator element. Read more [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.batching]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#623-626]§

FN GROUP_BY [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.group_by]<K, F>(SELF, KEY: F) -> GROUPBY
[https://docs.rs/itertools/0.8/itertools/groupbylazy/struct.GroupBy.html]<K, SELF, F>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> K,
    K: PARTIALEQ [https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialEq.html]<K>,

Return an iterable that can group iterator elements. Consecutive elements that map to the same key (“runs”), are assigned to the
same group. Read more [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.group_by]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#659-660]§

FN CHUNKS [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.chunks](SELF, SIZE: USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]) -> INTOCHUNKS
[https://docs.rs/itertools/0.8/itertools/groupbylazy/struct.IntoChunks.html]<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Return an iterable that can chunk the iterator. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.chunks]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#699-702]§

FN TUPLE_WINDOWS [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.tuple_windows]<T>(SELF) -> TUPLEWINDOWS
[https://docs.rs/itertools/0.8/itertools/tuple_impl/struct.TupleWindows.html]<SELF, T>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html] + ITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html]<ITEM = <T AS TUPLECOLLECT>::ITEM>,
    T: HOMOGENEOUSTUPLE [https://docs.rs/itertools/0.8/itertools/tuple_impl/trait.HomogeneousTuple.html],
    <T AS TUPLECOLLECT>::ITEM: CLONE [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html],

Return an iterator over all contiguous windows producing tuples of a specific size (up to 12). Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.tuple_windows]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#734-737]§

FN CIRCULAR_TUPLE_WINDOWS [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.circular_tuple_windows]<T>(SELF) ->
CIRCULARTUPLEWINDOWS [https://docs.rs/itertools/0.8/itertools/tuple_impl/struct.CircularTupleWindows.html]<SELF, T>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html] + CLONE
[https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html] + ITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html]<ITEM = <T AS TUPLECOLLECT>::ITEM> +
EXACTSIZEITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/exact_size/trait.ExactSizeIterator.html],
    T: TUPLECOLLECT + CLONE [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html],
    <T AS TUPLECOLLECT>::ITEM: CLONE [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html],

Return an iterator over all windows, wrapping back to the first elements when the window would otherwise exceed the length of the
iterator, producing tuples of a specific size (up to 12). Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.circular_tuple_windows]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#772-774]§

FN TUPLES [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.tuples]<T>(SELF) -> TUPLES
[https://docs.rs/itertools/0.8/itertools/tuple_impl/struct.Tuples.html]<SELF, T>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html] + ITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html]<ITEM = <T AS TUPLECOLLECT>::ITEM>,
    T: HOMOGENEOUSTUPLE [https://docs.rs/itertools/0.8/itertools/tuple_impl/trait.HomogeneousTuple.html],

Return an iterator that groups the items in tuples of a specific size (up to 12). Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.tuples]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#797-799]§

FN TEE [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.tee](SELF) -> (TEE
[https://docs.rs/itertools/0.8/itertools/tee/struct.Tee.html]<SELF>, TEE
[https://docs.rs/itertools/0.8/itertools/tee/struct.Tee.html]<SELF>)WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: CLONE
[https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html],

Split into an iterator pair that both yield all elements from the original iterator. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.tee]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#822-823]§

FN STEP [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.step](SELF, N: USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]) -> STEP
[https://docs.rs/itertools/0.8/itertools/adaptors/struct.Step.html]<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

👎Deprecated since 0.8.0: Use std .step_by() instead
Return an iterator adaptor that steps n elements in the base iterator for each iteration. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.step]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#835-837]§

FN MAP_INTO [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.map_into]<R>(SELF) -> MAPSPECIALCASE<SELF,
MAPSPECIALCASEFNINTO<R>>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: INTO
[https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<R>,

Convert each item of the iterator using the Into [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html] trait. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.map_into]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#844-846]§

FN MAP_RESULTS [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.map_results]<F, T, U, E>(
    SELF,
    F: F
) -> MAPSPECIALCASE<SELF, MAPSPECIALCASEFNOK<F>>WHERE
    SELF: ITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html]<ITEM = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<T, E>> + SIZED
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](T) -> U,

👎Deprecated since 0.10.0: Use .map_ok() instead
See .map_ok() [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.map_ok].
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#862-864]§

FN MAP_OK [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.map_ok]<F, T, U, E>(SELF, F: F) ->
MAPSPECIALCASE<SELF, MAPSPECIALCASEFNOK<F>>WHERE
    SELF: ITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html]<ITEM = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<T, E>> + SIZED
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](T) -> U,

Return an iterator adaptor that applies the provided closure to every Result::Ok value. Result::Err values are unchanged. Read
more [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.map_ok]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#880-882]§

FN FILTER_OK [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.filter_ok]<F, T, E>(SELF, F: F) -> FILTEROK
[https://docs.rs/itertools/0.8/itertools/adaptors/struct.FilterOk.html]<SELF, F>WHERE
    SELF: ITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html]<ITEM = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<T, E>> + SIZED
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html],

Return an iterator adaptor that filters every Result::Ok value with the provided closure. Result::Err values are unchanged. Read
more [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.filter_ok]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#898-900]§

FN FILTER_MAP_OK [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.filter_map_ok]<F, T, U, E>(SELF, F: F) ->
FILTERMAPOK [https://docs.rs/itertools/0.8/itertools/adaptors/struct.FilterMapOk.html]<SELF, F>WHERE
    SELF: ITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html]<ITEM = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<T, E>> + SIZED
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](T) -> OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<U>,

Return an iterator adaptor that filters and transforms every Result::Ok value with the provided closure. Result::Err values are
unchanged. Read more [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.filter_map_ok]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#922-924]§

FN FLATTEN_OK [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.flatten_ok]<T, E>(SELF) -> FLATTENOK
[https://docs.rs/itertools/0.8/itertools/flatten_ok/struct.FlattenOk.html]<SELF, T, E>WHERE
    SELF: ITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html]<ITEM = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<T, E>> + SIZED
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    T: INTOITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html],

Return an iterator adaptor that flattens every Result::Ok value into a series of Result::Ok values. Result::Err values are
unchanged. Read more [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.flatten_ok]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#943-946]§

FN MERGE [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.merge]<J>(
    SELF,
    OTHER: J
) -> MERGEBY [https://docs.rs/itertools/0.8/itertools/adaptors/struct.MergeBy.html]<SELF, <J AS INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::INTOITER
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter], MERGELTE>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: PARTIALORD
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialOrd.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>,
    J: INTOITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]<ITEM = SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>,

Return an iterator adaptor that merges the two base iterators in ascending order. If both base iterators are sorted (ascending),
the result is sorted. Read more [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.merge]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#967-970]§

FN MERGE_BY [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.merge_by]<J, F>(
    SELF,
    OTHER: J,
    IS_FIRST: F
) -> MERGEBY [https://docs.rs/itertools/0.8/itertools/adaptors/struct.MergeBy.html]<SELF, <J AS INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::INTOITER
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter], F>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    J: INTOITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]<ITEM = SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>,
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], &SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html],

Return an iterator adaptor that merges the two base iterators in order. This is much like .merge()
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.merge] but allows for a custom ordering. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.merge_by]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1003-1006]§

FN MERGE_JOIN_BY [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.merge_join_by]<J, F>(
    SELF,
    OTHER: J,
    CMP_FN: F
) -> MERGEJOINBY [https://docs.rs/itertools/0.8/itertools/merge_join/struct.MergeJoinBy.html]<SELF, <J AS INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::INTOITER
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter], F>WHERE
    J: INTOITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], &<J AS INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item]) -> ORDERING
[https://doc.rust-lang.org/1.67.0/core/cmp/enum.Ordering.html],
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Create an iterator that merges items from both this and the specified iterator in ascending order. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.merge_join_by]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1028-1031]§

FN KMERGE [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.kmerge](SELF) -> KMERGEBY
[https://docs.rs/itertools/0.8/itertools/kmerge_impl/struct.KMergeBy.html]<<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item] AS INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::INTOITER
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter], KMERGEBYLT>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html],
    <SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item] AS
INTOITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item]: PARTIALORD
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialOrd.html]<<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item] AS INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item]>,

Return an iterator adaptor that flattens an iterator of iterators by merging them in ascending order. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.kmerge]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1057-1062]§

FN KMERGE_BY [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.kmerge_by]<F>(
    SELF,
    FIRST: F
) -> KMERGEBY [https://docs.rs/itertools/0.8/itertools/kmerge_impl/struct.KMergeBy.html]<<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item] AS INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::INTOITER
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter], F>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item] AS INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item], &<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item] AS INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item]) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html],

Return an iterator adaptor that flattens an iterator of iterators by merging them according to the given closure. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.kmerge_by]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1078-1082]§

FN CARTESIAN_PRODUCT [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.cartesian_product]<J>(
    SELF,
    OTHER: J
) -> PRODUCT [https://docs.rs/itertools/0.8/itertools/adaptors/struct.Product.html]<SELF, <J AS INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::INTOITER
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: CLONE
[https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html],
    J: INTOITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html],
    <J AS INTOITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::INTOITER
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter]: CLONE
[https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html],

Return an iterator adaptor that iterates over the cartesian product of the element sets of two iterators self and J. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.cartesian_product]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1113-1117]§

FN MULTI_CARTESIAN_PRODUCT [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.multi_cartesian_product](
    SELF
) -> MULTIPRODUCT [https://docs.rs/itertools/0.8/itertools/adaptors/multi_product/struct.MultiProduct.html]<<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item] AS INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::INTOITER
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html],
    <SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item] AS
INTOITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::INTOITER
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter]: CLONE
[https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html],
    <SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item] AS
INTOITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item]: CLONE
[https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html],

Return an iterator adaptor that iterates over the cartesian product of all subiterators returned by meta-iterator self. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.multi_cartesian_product]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1150-1153]§

FN COALESCE [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.coalesce]<F>(SELF, F: F) -> COALESCEBY<SELF, F,
SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], (SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item])>,

Return an iterator adaptor that uses the passed-in closure to optionally merge together consecutive elements. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.coalesce]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1172-1174]§

FN DEDUP [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.dedup](SELF) -> COALESCEBY<SELF,
DEDUPPRED2COALESCEPRED<DEDUPEQ>, SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: PARTIALEQ
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialEq.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>,

Remove duplicates from sections of consecutive identical elements. If the iterator is sorted, all elements will be unique. Read
more [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.dedup]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1194-1196]§

FN DEDUP_BY [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.dedup_by]<CMP>(
    SELF,
    CMP: CMP
) -> COALESCEBY<SELF, DEDUPPRED2COALESCEPRED<CMP>, SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    CMP: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], &SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html],

Remove duplicates from sections of consecutive identical elements, determining equality using a comparison function. If the
iterator is sorted, all elements will be unique. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.dedup_by]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1216-1218]§

FN DEDUP_WITH_COUNT [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.dedup_with_count](
    SELF
) -> COALESCEBY<SELF, DEDUPPREDWITHCOUNT2COALESCEPRED<DEDUPEQ>, (USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html], SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item])>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Remove duplicates from sections of consecutive identical elements, while keeping a count of how many repeated elements were
present. If the iterator is sorted, all elements will be unique. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.dedup_with_count]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1239-1242]§

FN DEDUP_BY_WITH_COUNT [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.dedup_by_with_count]<CMP>(
    SELF,
    CMP: CMP
) -> COALESCEBY<SELF, DEDUPPREDWITHCOUNT2COALESCEPRED<CMP>, (USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html],
SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item])>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    CMP: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], &SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html],

Remove duplicates from sections of consecutive identical elements, while keeping a count of how many repeated elements were
present. This will determine equality using a comparison function. If the iterator is sorted, all elements will be unique. Read
more [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.dedup_by_with_count]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1262-1264]§

FN DUPLICATES [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.duplicates](SELF) -> DUPLICATESBY<SELF,
SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], BYID>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: EQ
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.Eq.html] + HASH [https://doc.rust-lang.org/1.67.0/core/hash/trait.Hash.html],

Return an iterator adaptor that produces elements that appear more than once during the iteration. Duplicates are detected using
hash and equality. Read more [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.duplicates]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1287-1290]§

FN DUPLICATES_BY [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.duplicates_by]<V, F>(SELF, F: F) ->
DUPLICATESBY<SELF, V, BYFN<F>>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    V: EQ [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Eq.html] + HASH
[https://doc.rust-lang.org/1.67.0/core/hash/trait.Hash.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> V,

Return an iterator adaptor that produces elements that appear more than once during the iteration. Duplicates are detected using
hash and equality. Read more [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.duplicates_by]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1314-1316]§

FN UNIQUE [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.unique](SELF) -> UNIQUE
[https://docs.rs/itertools/0.8/itertools/unique_impl/struct.Unique.html]<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: CLONE
[https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html] + EQ [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Eq.html] +
HASH [https://doc.rust-lang.org/1.67.0/core/hash/trait.Hash.html],

Return an iterator adaptor that filters out elements that have already been produced once during the iteration. Duplicates are
detected using hash and equality. Read more [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.unique]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1340-1343]§

FN UNIQUE_BY [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.unique_by]<V, F>(SELF, F: F) -> UNIQUEBY
[https://docs.rs/itertools/0.8/itertools/unique_impl/struct.UniqueBy.html]<SELF, V, F>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    V: EQ [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Eq.html] + HASH
[https://doc.rust-lang.org/1.67.0/core/hash/trait.Hash.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> V,

Return an iterator adaptor that filters out elements that have already been produced once during the iteration. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.unique_by]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1360-1362]§

FN PEEKING_TAKE_WHILE [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.peeking_take_while]<F>(&MUT SELF,
ACCEPT: F) -> PEEKINGTAKEWHILE [https://docs.rs/itertools/0.8/itertools/peeking_take_while/struct.PeekingTakeWhile.html]<'_, SELF,
F>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html] + PEEKINGNEXT
[https://docs.rs/itertools/0.8/itertools/peeking_take_while/trait.PeekingNext.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html],

Return an iterator adaptor that borrows from this iterator and takes items while the closure accept returns true. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.peeking_take_while]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1385-1387]§

FN TAKE_WHILE_REF [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.take_while_ref]<F>(&MUT SELF, ACCEPT: F) ->
TAKEWHILEREF [https://docs.rs/itertools/0.8/itertools/adaptors/struct.TakeWhileRef.html]<'_, SELF, F>WHERE
    SELF: CLONE [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html],

Return an iterator adaptor that borrows from a Clone-able iterator to only pick off elements while the predicate accept returns
true. Read more [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.take_while_ref]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1406-1407]§

FN WHILE_SOME [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.while_some]<A>(SELF) -> WHILESOME
[https://docs.rs/itertools/0.8/itertools/adaptors/struct.WhileSome.html]<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html] + ITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html]<ITEM = OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<A>>,

Return an iterator adaptor that filters Option<A> iterator elements and produces A. Stops on the first None encountered. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.while_some]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1445-1448]§

FN TUPLE_COMBINATIONS [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.tuple_combinations]<T>(SELF) ->
TUPLECOMBINATIONS [https://docs.rs/itertools/0.8/itertools/adaptors/struct.TupleCombinations.html]<SELF, T>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html] + CLONE
[https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: CLONE
[https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html],
    T: HASCOMBINATION<SELF>,

Return an iterator adaptor that iterates over the combinations of the elements from an iterator. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.tuple_combinations]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1483-1485]§

FN COMBINATIONS [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.combinations](SELF, K: USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]) -> COMBINATIONS
[https://docs.rs/itertools/0.8/itertools/combinations/struct.Combinations.html]<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: CLONE
[https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html],

Return an iterator adaptor that iterates over the k-length combinations of the elements from an iterator. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.combinations]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1510-1513]§

FN COMBINATIONS_WITH_REPLACEMENT
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.combinations_with_replacement](
    SELF,
    K: USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]
) -> COMBINATIONSWITHREPLACEMENT
[https://docs.rs/itertools/0.8/itertools/combinations_with_replacement/struct.CombinationsWithReplacement.html]<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: CLONE
[https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html],

Return an iterator that iterates over the k-length combinations of the elements from an iterator, with replacement. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.combinations_with_replacement]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1556-1558]§

FN PERMUTATIONS [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.permutations](SELF, K: USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]) -> PERMUTATIONS
[https://docs.rs/itertools/0.8/itertools/permutations/struct.Permutations.html]<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: CLONE
[https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html],

Return an iterator adaptor that iterates over all k-permutations of the elements from an iterator. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.permutations]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1592-1594]§

FN POWERSET [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.powerset](SELF) -> POWERSET
[https://docs.rs/itertools/0.8/itertools/powerset/struct.Powerset.html]<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: CLONE
[https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html],

Return an iterator that iterates through the powerset of the elements from an iterator. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.powerset]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1616-1618]§

FN PAD_USING [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.pad_using]<F>(SELF, MIN: USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html], F: F) -> PADUSING
[https://docs.rs/itertools/0.8/itertools/pad_tail/struct.PadUsing.html]<SELF, F>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]) -> SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item],

Return an iterator adaptor that pads the sequence to a minimum length of min by filling missing elements using a closure f. Read
more [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.pad_using]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1642-1643]§

FN WITH_POSITION [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.with_position](SELF) -> WITHPOSITION
[https://docs.rs/itertools/0.8/itertools/with_position/struct.WithPosition.html]<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Return an iterator adaptor that wraps each element in a Position to ease special-case handling of the first or last elements. Read
more [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.with_position]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1661-1663]§

FN POSITIONS [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.positions]<P>(SELF, PREDICATE: P) -> POSITIONS
[https://docs.rs/itertools/0.8/itertools/adaptors/struct.Positions.html]<SELF, P>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    P: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html],

Return an iterator adaptor that yields the indices of all elements satisfying a predicate, counted from the start of the iterator.
Read more [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.positions]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1678-1680]§

FN UPDATE [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.update]<F>(SELF, UPDATER: F) -> UPDATE
[https://docs.rs/itertools/0.8/itertools/adaptors/struct.Update.html]<SELF, F>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&MUT SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]),

Return an iterator adaptor that applies a mutating function to each element before yielding it. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.update]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1699-1701]§

FN NEXT_TUPLE [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.next_tuple]<T>(&MUT SELF) -> OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<T>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html] + ITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html]<ITEM = <T AS TUPLECOLLECT>::ITEM>,
    T: HOMOGENEOUSTUPLE [https://docs.rs/itertools/0.8/itertools/tuple_impl/trait.HomogeneousTuple.html],

Advances the iterator and returns the next items grouped in a tuple of a specific size (up to 12). Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.next_tuple]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1724-1726]§

FN COLLECT_TUPLE [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.collect_tuple]<T>(SELF) -> OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<T>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html] + ITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html]<ITEM = <T AS TUPLECOLLECT>::ITEM>,
    T: HOMOGENEOUSTUPLE [https://docs.rs/itertools/0.8/itertools/tuple_impl/trait.HomogeneousTuple.html],

Collects all items from the iterator into a tuple of a specific size (up to 12). Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.collect_tuple]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1748-1749]§

FN FIND_POSITION [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.find_position]<P>(&MUT SELF, PRED: P) ->
OPTION [https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<(USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html], SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item])>WHERE
    P: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html],

Find the position and value of the first element satisfying a predicate. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.find_position]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1770-1772]§

FN FIND_OR_LAST [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.find_or_last]<P>(SELF, PREDICATE: P) ->
OPTION [https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    P: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html],

Find the value of the first element satisfying a predicate or return the last element, if any. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.find_or_last]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1790-1792]§

FN FIND_OR_FIRST [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.find_or_first]<P>(SELF, PREDICATE: P) ->
OPTION [https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    P: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html],

Find the value of the first element satisfying a predicate or return the first element, if any. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.find_or_first]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1826-1830]§

FN CONTAINS [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.contains]<Q>(&MUT SELF, QUERY: &
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]Q) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: BORROW
[https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<Q>,
    Q: PARTIALEQ [https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialEq.html]<Q>,

Returns true if the given item is present in this iterator. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.contains]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1851-1853]§

FN ALL_EQUAL [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.all_equal](&MUT SELF) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: PARTIALEQ
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialEq.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>,

Check whether all elements compare equal. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.all_equal]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1877-1879]§

FN ALL_UNIQUE [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.all_unique](&MUT SELF) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: EQ
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.Eq.html] + HASH [https://doc.rust-lang.org/1.67.0/core/hash/trait.Hash.html],

Check whether all elements are unique (non equal). Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.all_unique]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1900-1901]§

FN DROPPING [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.dropping](SELF, N: USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]) -> SELFWHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Consume the first n elements from the iterator eagerly, and return the same iterator again. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.dropping]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1924-1926]§

FN DROPPING_BACK [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.dropping_back](SELF, N: USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]) -> SELFWHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html] + DOUBLEENDEDITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html],

Consume the last n elements from the iterator eagerly, and return the same iterator again. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.dropping_back]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1952-1954]§

FN FOREACH [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.foreach]<F>(SELF, F: F)WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]),
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

👎Deprecated since 0.8.0: Use .for_each() instead
Run the closure f eagerly on each element of the iterator. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.foreach]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1972-1974]§

FN CONCAT [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.concat](SELF) -> SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: EXTEND
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.Extend.html]<<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item] AS INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]>::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item]> + INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html] + DEFAULT
[https://doc.rust-lang.org/1.67.0/core/default/trait.Default.html],

Combine all an iterator’s elements into one element by using Extend
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.Extend.html]. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.concat]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#1982-1983]§

FN COLLECT_VEC [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.collect_vec](SELF) -> VEC
[https://doc.rust-lang.org/1.67.0/alloc/vec/struct.Vec.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]> ⒾWHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

.collect_vec() is simply a type specialization of Iterator::collect
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.collect], for convenience. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.collect_vec]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#2009-2012]§

FN TRY_COLLECT [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.try_collect]<T, U, E>(SELF) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<U, E>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html] + ITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html]<ITEM = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<T, E>>,
    RESULT [https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<U, E>: FROMITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.FromIterator.html]<RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<T, E>>,

.try_collect() is more convenient way of writing .collect::<Result<_, _>>() Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.try_collect]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#2033-2035]§

FN SET_FROM [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.set_from]<'A, A, J>(&MUT SELF, FROM: J) -> USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]WHERE
    A: 'A,
    SELF: ITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html]<ITEM = &'A MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]A>,
    J: INTOITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html]<ITEM = A>,

Assign to each reference in self from the from iterator, stopping at the shortest of the two iterators. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.set_from]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#2059-2060]§

FN JOIN [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.join](&MUT SELF, SEP: &STR
[https://doc.rust-lang.org/1.67.0/std/primitive.str.html]) -> STRING
[https://doc.rust-lang.org/1.67.0/alloc/string/struct.String.html]WHERE
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: DISPLAY
[https://doc.rust-lang.org/1.67.0/core/fmt/trait.Display.html],

Combine all iterator elements into one String, separated by sep. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.join]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#2093-2094]§

FN FORMAT [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.format](SELF, SEP: &STR
[https://doc.rust-lang.org/1.67.0/std/primitive.str.html]) -> FORMAT
[https://docs.rs/itertools/0.8/itertools/format/struct.Format.html]<'_, SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Format all iterator elements, separated by sep. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.format]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#2131-2133]§

FN FORMAT_WITH [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.format_with]<F>(SELF, SEP: &STR
[https://doc.rust-lang.org/1.67.0/std/primitive.str.html], FORMAT: F) -> FORMATWITH
[https://docs.rs/itertools/0.8/itertools/format/struct.FormatWith.html]<'_, SELF, F>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], &MUT DYN FNMUT
[https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&DYN DISPLAY
[https://doc.rust-lang.org/1.67.0/core/fmt/trait.Display.html]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/core/fmt/struct.Error.html]>) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/core/fmt/struct.Error.html]>,

Format all iterator elements, separated by sep. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.format_with]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#2140-2142]§

FN FOLD_RESULTS [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.fold_results]<A, E, B, F>(&MUT SELF, START:
B, F: F) -> RESULT [https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<B, E>WHERE
    SELF: ITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html]<ITEM = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<A, E>>,
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](B, A) -> B,

👎Deprecated since 0.10.0: Use .fold_ok() instead
See .fold_ok() [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.fold_ok].
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#2189-2191]§

FN FOLD_OK [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.fold_ok]<A, E, B, F>(&MUT SELF, START: B, F: F) ->
RESULT [https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<B, E>WHERE
    SELF: ITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html]<ITEM = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<A, E>>,
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](B, A) -> B,

Fold Result values from an iterator. Read more [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.fold_ok]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#2221-2223]§

FN FOLD_OPTIONS [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.fold_options]<A, B, F>(&MUT SELF, START: B,
F: F) -> OPTION [https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<B>WHERE
    SELF: ITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html]<ITEM = OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<A>>,
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](B, A) -> B,

Fold Option values from an iterator. Read more [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.fold_options]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#2247-2249]§

FN FOLD1 [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.fold1]<F>(SELF, F: F) -> OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item],
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

👎Deprecated since 0.10.2: Use Iterator::reduce instead
Accumulator of the elements in the iterator. Read more [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.fold1]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#2302-2304]§

FN TREE_FOLD1 [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.tree_fold1]<F>(SELF, F: F) -> OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>WHERE
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item],
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Accumulate the elements in the iterator in a tree-like manner. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.tree_fold1]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#2400-2402]§

FN FOLD_WHILE [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.fold_while]<B, F>(&MUT SELF, INIT: B, F: F) ->
FOLDWHILE [https://docs.rs/itertools/0.8/itertools/enum.FoldWhile.html]<B>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](B, SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> FOLDWHILE
[https://docs.rs/itertools/0.8/itertools/enum.FoldWhile.html]<B>,

An iterator method that applies a function, producing a single, final value. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.fold_while]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#2443-2445]§

FN SUM1 [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.sum1]<S>(SELF) -> OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<S>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    S: SUM [https://doc.rust-lang.org/1.67.0/core/iter/traits/accum/trait.Sum.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>,

Iterate over the entire iterator and add all the elements. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.sum1]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#2471-2473]§

FN PRODUCT1 [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.product1]<P>(SELF) -> OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<P>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    P: PRODUCT [https://doc.rust-lang.org/1.67.0/core/iter/traits/accum/trait.Product.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>,

Iterate over the entire iterator and multiply all the elements. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.product1]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#2497-2499]§

FN SORTED_UNSTABLE [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.sorted_unstable](SELF) -> INTOITER
[https://doc.rust-lang.org/1.67.0/alloc/vec/into_iter/struct.IntoIter.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: ORD
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.Ord.html],

Sort all iterator elements into a new iterator in ascending order. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.sorted_unstable]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#2532-2534]§

FN SORTED_UNSTABLE_BY [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.sorted_unstable_by]<F>(SELF, CMP: F) ->
INTOITER [https://doc.rust-lang.org/1.67.0/alloc/vec/into_iter/struct.IntoIter.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], &SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> ORDERING
[https://doc.rust-lang.org/1.67.0/core/cmp/enum.Ordering.html],

Sort all iterator elements into a new iterator in ascending order. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.sorted_unstable_by]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#2565-2568]§

FN SORTED_UNSTABLE_BY_KEY [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.sorted_unstable_by_key]<K, F>(SELF,
F: F) -> INTOITER [https://doc.rust-lang.org/1.67.0/alloc/vec/into_iter/struct.IntoIter.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    K: ORD [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Ord.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> K,

Sort all iterator elements into a new iterator in ascending order. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.sorted_unstable_by_key]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#2593-2595]§

FN SORTED [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.sorted](SELF) -> INTOITER
[https://doc.rust-lang.org/1.67.0/alloc/vec/into_iter/struct.IntoIter.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: ORD
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.Ord.html],

Sort all iterator elements into a new iterator in ascending order. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.sorted]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#2628-2630]§

FN SORTED_BY [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.sorted_by]<F>(SELF, CMP: F) -> INTOITER
[https://doc.rust-lang.org/1.67.0/alloc/vec/into_iter/struct.IntoIter.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], &SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> ORDERING
[https://doc.rust-lang.org/1.67.0/core/cmp/enum.Ordering.html],

Sort all iterator elements into a new iterator in ascending order. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.sorted_by]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#2661-2664]§

FN SORTED_BY_KEY [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.sorted_by_key]<K, F>(SELF, F: F) -> INTOITER
[https://doc.rust-lang.org/1.67.0/alloc/vec/into_iter/struct.IntoIter.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    K: ORD [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Ord.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> K,

Sort all iterator elements into a new iterator in ascending order. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.sorted_by_key]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#2696-2700]§

FN SORTED_BY_CACHED_KEY [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.sorted_by_cached_key]<K, F>(SELF, F:
F) -> INTOITER [https://doc.rust-lang.org/1.67.0/alloc/vec/into_iter/struct.IntoIter.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    K: ORD [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Ord.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> K,

Sort all iterator elements into a new iterator in ascending order. The key function is called exactly once per key. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.sorted_by_cached_key]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#2735-2737]§

FN K_SMALLEST [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.k_smallest](SELF, K: USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]) -> INTOITER
[https://doc.rust-lang.org/1.67.0/alloc/vec/into_iter/struct.IntoIter.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: ORD
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.Ord.html],

Sort the k smallest elements into a new iterator, in ascending order. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.k_smallest]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#2765-2769]§

FN PARTITION_MAP [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.partition_map]<A, B, F, L, R>(SELF,
PREDICATE: F) -> (A, B) [https://doc.rust-lang.org/1.67.0/std/primitive.tuple.html]WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> EITHER
[https://docs.rs/either/1/either/enum.Either.html]<L, R>,
    A: DEFAULT [https://doc.rust-lang.org/1.67.0/core/default/trait.Default.html] + EXTEND
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.Extend.html]<L>,
    B: DEFAULT [https://doc.rust-lang.org/1.67.0/core/default/trait.Default.html] + EXTEND
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.Extend.html]<R>,

Collect all iterator elements into one of two partitions. Unlike Iterator::partition
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#method.partition], each partition may have a
distinct type. Read more [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.partition_map]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#2797-2801]§

FN PARTITION_RESULT [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.partition_result]<A, B, T, E>(SELF) ->
(A, B) [https://doc.rust-lang.org/1.67.0/std/primitive.tuple.html]WHERE
    SELF: ITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html]<ITEM = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<T, E>> + SIZED
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    A: DEFAULT [https://doc.rust-lang.org/1.67.0/core/default/trait.Default.html] + EXTEND
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.Extend.html]<T>,
    B: DEFAULT [https://doc.rust-lang.org/1.67.0/core/default/trait.Default.html] + EXTEND
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.Extend.html]<E>,

Partition a sequence of Results into one list of all the Ok elements and another list of all the Err elements. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.partition_result]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#2826-2828]§

FN INTO_GROUP_MAP [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.into_group_map]<K, V>(SELF) -> HASHMAP
[https://doc.rust-lang.org/1.67.0/std/collections/hash/map/struct.HashMap.html]<K, VEC
[https://doc.rust-lang.org/1.67.0/alloc/vec/struct.Vec.html]<V, GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>, RANDOMSTATE
[https://doc.rust-lang.org/1.67.0/std/collections/hash/map/struct.RandomState.html]>WHERE
    SELF: ITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html]<ITEM = (K, V)
[https://doc.rust-lang.org/1.67.0/std/primitive.tuple.html]> + SIZED
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    K: HASH [https://doc.rust-lang.org/1.67.0/core/hash/trait.Hash.html] + EQ
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.Eq.html],

Return a HashMap of keys mapped to Vecs of values. Keys and values are taken from (Key, Value) tuple pairs yielded by the input
iterator. Read more [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.into_group_map]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#2861-2865]§

FN INTO_GROUP_MAP_BY [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.into_group_map_by]<K, V, F>(
    SELF,
    F: F
) -> HASHMAP [https://doc.rust-lang.org/1.67.0/std/collections/hash/map/struct.HashMap.html]<K, VEC
[https://doc.rust-lang.org/1.67.0/alloc/vec/struct.Vec.html]<V, GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>, RANDOMSTATE
[https://doc.rust-lang.org/1.67.0/std/collections/hash/map/struct.RandomState.html]>WHERE
    SELF: ITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html]<ITEM = V> + SIZED
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    K: HASH [https://doc.rust-lang.org/1.67.0/core/hash/trait.Hash.html] + EQ
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.Eq.html],
    F: FN [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.Fn.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]V) -> K,

Return an Iterator on a HashMap. Keys mapped to Vecs of values. The key is specified in the closure. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.into_group_map_by]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#2880-2882]§

FN INTO_GROUPING_MAP [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.into_grouping_map]<K, V>(SELF) ->
GROUPINGMAP [https://docs.rs/itertools/0.8/itertools/grouping_map/struct.GroupingMap.html]<SELF>WHERE
    SELF: ITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html]<ITEM = (K, V)
[https://doc.rust-lang.org/1.67.0/std/primitive.tuple.html]> + SIZED
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    K: HASH [https://doc.rust-lang.org/1.67.0/core/hash/trait.Hash.html] + EQ
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.Eq.html],

Constructs a GroupingMap to be used later with one of the efficient group-and-fold operations it allows to perform. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.into_grouping_map]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#2896-2899]§

FN INTO_GROUPING_MAP_BY [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.into_grouping_map_by]<K, V, F>(
    SELF,
    KEY_MAPPER: F
) -> GROUPINGMAP [https://docs.rs/itertools/0.8/itertools/grouping_map/struct.GroupingMap.html]<MAPFORGROUPING<SELF, F>>WHERE
    SELF: ITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html]<ITEM = V> + SIZED
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    K: HASH [https://doc.rust-lang.org/1.67.0/core/hash/trait.Hash.html] + EQ
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.Eq.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]V) -> K,

Constructs a GroupingMap to be used later with one of the efficient group-and-fold operations it allows to perform. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.into_grouping_map_by]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#2927-2928]§

FN MIN_SET [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.min_set](SELF) -> VEC
[https://doc.rust-lang.org/1.67.0/alloc/vec/struct.Vec.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]> ⒾWHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: ORD
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.Ord.html],

Return all minimum elements of an iterator. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.min_set]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#2958-2959]§

FN MIN_SET_BY [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.min_set_by]<F>(SELF, COMPARE: F) -> VEC
[https://doc.rust-lang.org/1.67.0/alloc/vec/struct.Vec.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]> ⒾWHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], &SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> ORDERING
[https://doc.rust-lang.org/1.67.0/core/cmp/enum.Ordering.html],

Return all minimum elements of an iterator, as determined by the specified function. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.min_set_by]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#2992-2993]§

FN MIN_SET_BY_KEY [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.min_set_by_key]<K, F>(SELF, KEY: F) -> VEC
[https://doc.rust-lang.org/1.67.0/alloc/vec/struct.Vec.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]> ⒾWHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    K: ORD [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Ord.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> K,

Return all minimum elements of an iterator, as determined by the specified function. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.min_set_by_key]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#3021-3022]§

FN MAX_SET [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.max_set](SELF) -> VEC
[https://doc.rust-lang.org/1.67.0/alloc/vec/struct.Vec.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]> ⒾWHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: ORD
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.Ord.html],

Return all maximum elements of an iterator. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.max_set]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#3052-3053]§

FN MAX_SET_BY [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.max_set_by]<F>(SELF, COMPARE: F) -> VEC
[https://doc.rust-lang.org/1.67.0/alloc/vec/struct.Vec.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]> ⒾWHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], &SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> ORDERING
[https://doc.rust-lang.org/1.67.0/core/cmp/enum.Ordering.html],

Return all maximum elements of an iterator, as determined by the specified function. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.max_set_by]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#3086-3087]§

FN MAX_SET_BY_KEY [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.max_set_by_key]<K, F>(SELF, KEY: F) -> VEC
[https://doc.rust-lang.org/1.67.0/alloc/vec/struct.Vec.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]> ⒾWHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    K: ORD [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Ord.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> K,

Return all minimum elements of an iterator, as determined by the specified function. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.max_set_by_key]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#3127-3128]§

FN MINMAX [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.minmax](SELF) -> MINMAXRESULT
[https://docs.rs/itertools/0.8/itertools/minmax/enum.MinMaxResult.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: PARTIALORD
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialOrd.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>,

Return the minimum and maximum elements in the iterator. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.minmax]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#3144-3145]§

FN MINMAX_BY_KEY [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.minmax_by_key]<K, F>(SELF, KEY: F) ->
MINMAXRESULT [https://docs.rs/itertools/0.8/itertools/minmax/enum.MinMaxResult.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    K: PARTIALORD [https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialOrd.html]<K>,
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> K,

Return the minimum and maximum element of an iterator, as determined by the specified function. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.minmax_by_key]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#3158-3159]§

FN MINMAX_BY [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.minmax_by]<F>(SELF, COMPARE: F) -> MINMAXRESULT
[https://docs.rs/itertools/0.8/itertools/minmax/enum.MinMaxResult.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], &SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> ORDERING
[https://doc.rust-lang.org/1.67.0/core/cmp/enum.Ordering.html],

Return the minimum and maximum element of an iterator, as determined by the specified comparison function. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.minmax_by]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#3187-3188]§

FN POSITION_MAX [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.position_max](SELF) -> OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: ORD
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.Ord.html],

Return the position of the maximum element in the iterator. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.position_max]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#3215-3216]§

FN POSITION_MAX_BY_KEY [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.position_max_by_key]<K, F>(SELF, KEY:
F) -> OPTION [https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    K: ORD [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Ord.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> K,

Return the position of the maximum element in the iterator, as determined by the specified function. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.position_max_by_key]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#3243-3244]§

FN POSITION_MAX_BY [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.position_max_by]<F>(SELF, COMPARE: F) ->
OPTION [https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], &SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> ORDERING
[https://doc.rust-lang.org/1.67.0/core/cmp/enum.Ordering.html],

Return the position of the maximum element in the iterator, as determined by the specified comparison function. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.position_max_by]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#3270-3271]§

FN POSITION_MIN [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.position_min](SELF) -> OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: ORD
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.Ord.html],

Return the position of the minimum element in the iterator. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.position_min]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#3298-3299]§

FN POSITION_MIN_BY_KEY [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.position_min_by_key]<K, F>(SELF, KEY:
F) -> OPTION [https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    K: ORD [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Ord.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> K,

Return the position of the minimum element in the iterator, as determined by the specified function. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.position_min_by_key]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#3326-3327]§

FN POSITION_MIN_BY [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.position_min_by]<F>(SELF, COMPARE: F) ->
OPTION [https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], &SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> ORDERING
[https://doc.rust-lang.org/1.67.0/core/cmp/enum.Ordering.html],

Return the position of the minimum element in the iterator, as determined by the specified comparison function. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.position_min_by]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#3376-3377]§

FN POSITION_MINMAX [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.position_minmax](SELF) -> MINMAXRESULT
[https://docs.rs/itertools/0.8/itertools/minmax/enum.MinMaxResult.html]<USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: PARTIALORD
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialOrd.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>,

Return the positions of the minimum and maximum elements in the iterator. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.position_minmax]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#3421-3422]§

FN POSITION_MINMAX_BY_KEY [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.position_minmax_by_key]<K, F>(SELF,
KEY: F) -> MINMAXRESULT [https://docs.rs/itertools/0.8/itertools/minmax/enum.MinMaxResult.html]<USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    K: PARTIALORD [https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialOrd.html]<K>,
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> K,

Return the postions of the minimum and maximum elements of an iterator, as determined by the specified function. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.position_minmax_by_key]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#3463-3464]§

FN POSITION_MINMAX_BY [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.position_minmax_by]<F>(SELF, COMPARE:
F) -> MINMAXRESULT [https://docs.rs/itertools/0.8/itertools/minmax/enum.MinMaxResult.html]<USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](&SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], &SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> ORDERING
[https://doc.rust-lang.org/1.67.0/core/cmp/enum.Ordering.html],

Return the postions of the minimum and maximum elements of an iterator, as determined by the specified comparison function. Read
more [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.position_minmax_by]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#3491-3493]§

FN EXACTLY_ONE [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.exactly_one](SELF) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], EXACTLYONEERROR
[https://docs.rs/itertools/0.8/itertools/exactly_one_err/struct.ExactlyOneError.html]<SELF>>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

If the iterator yields exactly one element, that element will be returned, otherwise an error will be returned containing an
iterator that has the same output as the input iterator. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.exactly_one]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#3527-3529]§

FN AT_MOST_ONE [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.at_most_one](SELF) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]>, EXACTLYONEERROR
[https://docs.rs/itertools/0.8/itertools/exactly_one_err/struct.ExactlyOneError.html]<SELF>>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

If the iterator yields no elements, Ok(None) will be returned. If the iterator yields exactly one element, that element will be
returned, otherwise an error will be returned containing an iterator that has the same output as the input iterator. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.at_most_one]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#3561-3563]§

FN MULTIPEEK [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.multipeek](SELF) -> MULTIPEEK
[https://docs.rs/itertools/0.8/itertools/multipeek_impl/struct.MultiPeek.html]<SELF>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

An iterator adaptor that allows the user to peek at multiple .next() values without advancing the base iterator. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.multipeek]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#3582-3585]§

FN COUNTS [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.counts](SELF) -> HASHMAP
[https://doc.rust-lang.org/1.67.0/std/collections/hash/map/struct.HashMap.html]<SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item], USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html], RANDOMSTATE
[https://doc.rust-lang.org/1.67.0/std/collections/hash/map/struct.RandomState.html]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    SELF::ITEM [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]: EQ
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.Eq.html] + HASH [https://doc.rust-lang.org/1.67.0/core/hash/trait.Hash.html],

Collect the items in this iterator and return a HashMap which contains each item that appears in the iterator and the number of
times it appears. Read more [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.counts]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#3625-3629]§

FN COUNTS_BY [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.counts_by]<K, F>(SELF, F: F) -> HASHMAP
[https://doc.rust-lang.org/1.67.0/std/collections/hash/map/struct.HashMap.html]<K, USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html], RANDOMSTATE
[https://doc.rust-lang.org/1.67.0/std/collections/hash/map/struct.RandomState.html]>WHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    K: EQ [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Eq.html] + HASH
[https://doc.rust-lang.org/1.67.0/core/hash/trait.Hash.html],
    F: FNMUT [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnMut.html](SELF::ITEM
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item]) -> K,

Collect the items in this iterator and return a HashMap which contains each item that appears in the iterator and the number of
times it appears, determining identity using a keying function. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.counts_by]
source [https://docs.rs/itertools/0.8/src/itertools/lib.rs.html#3654-3656]§

FN MULTIUNZIP [https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.multiunzip]<FROMI>(SELF) -> FROMIWHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html] + MULTIUNZIP
[https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html]<FROMI>,

Converts an iterator of tuples into a tuple of containers. Read more
[https://docs.rs/itertools/0.8/itertools/trait.Itertools.html#method.multiunzip]
source [https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#70]§


IMPL<IT, A, FROMA, B, FROMB> MULTIUNZIP [https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html]<(FROMA, FROMB)
[https://doc.rust-lang.org/1.67.0/std/primitive.tuple.html]> FOR ITWHERE
    IT: ITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html]<ITEM = (A, B)
[https://doc.rust-lang.org/1.67.0/std/primitive.tuple.html]>,
    FROMA: DEFAULT [https://doc.rust-lang.org/1.67.0/core/default/trait.Default.html] + EXTEND
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.Extend.html]<A>,
    FROMB: DEFAULT [https://doc.rust-lang.org/1.67.0/core/default/trait.Default.html] + EXTEND
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.Extend.html]<B>,

source [https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#70]§

FN MULTIUNZIP [https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip](SELF) -> (FROMA,
FROMB) [https://doc.rust-lang.org/1.67.0/std/primitive.tuple.html]

Unzip this iterator into multiple collections.
§


IMPL<T> PIPE FOR TWHERE
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

§

FN PIPE<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](SELF) -> R) -> RWHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Pipes by value. This is generally the method you want to use. Read more
§

FN PIPE_REF<'A, R>(&'A SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF) -> R) -> RWHERE
    R: 'A,

Borrows self and passes that borrow into the pipe function. Read more
§

FN PIPE_REF_MUT<'A, R>(&'A MUT SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
MUT [https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF) -> R) -> RWHERE
    R: 'A,

Mutably borrows self and passes that borrow into the pipe function. Read more
§

FN PIPE_BORROW<'A, B, R>(&'A SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B) -> R) -> RWHERE
    SELF: BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<B>,
    B: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Borrows self, then passes self.borrow() into the pipe function. Read more
§

FN PIPE_BORROW_MUT<'A, B, R>(
    &'A MUT SELF,
    FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B) -> R
) -> RWHERE
    SELF: BORROWMUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html]<B>,
    B: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Mutably borrows self, then passes self.borrow_mut() into the pipe function. Read more
§

FN PIPE_AS_REF<'A, U, R>(&'A SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]U) -> R) -> RWHERE
    SELF: ASREF [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsRef.html]<U>,
    U: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Borrows self, then passes self.as_ref() into the pipe function.
§

FN PIPE_AS_MUT<'A, U, R>(&'A MUT SELF, FUNC: IMPL FNONCE
[https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]U) -> R) -> RWHERE
    SELF: ASMUT [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsMut.html]<U>,
    U: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Mutably borrows self, then passes self.as_mut() into the pipe function. Read more
§

FN PIPE_DEREF<'A, T, R>(&'A SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T) -> R) -> RWHERE
    SELF: DEREF [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html]<TARGET = T>,
    T: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Borrows self, then passes self.deref() into the pipe function.
§

FN PIPE_DEREF_MUT<'A, T, R>(&'A MUT SELF, FUNC: IMPL FNONCE
[https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T) -> R) -> RWHERE
    SELF: DEREFMUT [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.DerefMut.html]<TARGET = T> + DEREF
[https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html],
    T: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Mutably borrows self, then passes self.deref_mut() into the pipe function. Read more
source [https://docs.rs/typenum/1.16.0/src/typenum/type_operators.rs.html#34]§


IMPL<T> SAME [https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Same.html]<T> FOR T

§

TYPE OUTPUT [https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Same.html#associatedtype.Output] = T

Should always be Self
§


IMPL<T> TAP FOR T

§

FN TAP(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)) -> SELF

Immutable access to a value. Read more
§

FN TAP_MUT(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)) -> SELF

Mutable access to a value. Read more
§

FN TAP_BORROW<B>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B)) -> SELFWHERE
    SELF: BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<B>,
    B: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Immutable access to the Borrow<B> of a value. Read more
§

FN TAP_BORROW_MUT<B>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B)) -> SELFWHERE
    SELF: BORROWMUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html]<B>,
    B: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Mutable access to the BorrowMut<B> of a value. Read more
§

FN TAP_REF<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R)) -> SELFWHERE
    SELF: ASREF [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsRef.html]<R>,
    R: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Immutable access to the AsRef<R> view of a value. Read more
§

FN TAP_REF_MUT<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R)) -> SELFWHERE
    SELF: ASMUT [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsMut.html]<R>,
    R: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Mutable access to the AsMut<R> view of a value. Read more
§

FN TAP_DEREF<T>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)) -> SELFWHERE
    SELF: DEREF [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html]<TARGET = T>,
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Immutable access to the Deref::Target of a value. Read more
§

FN TAP_DEREF_MUT<T>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)) -> SELFWHERE
    SELF: DEREFMUT [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.DerefMut.html]<TARGET = T> + DEREF
[https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html],
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Mutable access to the Deref::Target of a value. Read more
§

FN TAP_DBG(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)) -> SELF

Calls .tap() only in debug builds, and is erased in release builds.
§

FN TAP_MUT_DBG(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)) -> SELF

Calls .tap_mut() only in debug builds, and is erased in release builds. Read more
§

FN TAP_BORROW_DBG<B>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B)) -> SELFWHERE
    SELF: BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<B>,
    B: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_borrow() only in debug builds, and is erased in release builds. Read more
§

FN TAP_BORROW_MUT_DBG<B>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B)) -> SELFWHERE
    SELF: BORROWMUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html]<B>,
    B: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_borrow_mut() only in debug builds, and is erased in release builds. Read more
§

FN TAP_REF_DBG<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R)) -> SELFWHERE
    SELF: ASREF [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsRef.html]<R>,
    R: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_ref() only in debug builds, and is erased in release builds. Read more
§

FN TAP_REF_MUT_DBG<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R)) -> SELFWHERE
    SELF: ASMUT [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsMut.html]<R>,
    R: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_ref_mut() only in debug builds, and is erased in release builds. Read more
§

FN TAP_DEREF_DBG<T>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)) -> SELFWHERE
    SELF: DEREF [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html]<TARGET = T>,
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_deref() only in debug builds, and is erased in release builds. Read more
§

FN TAP_DEREF_MUT_DBG<T>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)) -> SELFWHERE
    SELF: DEREFMUT [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.DerefMut.html]<TARGET = T> + DEREF
[https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html],
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_deref_mut() only in debug builds, and is erased in release builds. Read more
§


IMPL<T> TRYCONV FOR T

§

FN TRY_CONV<T>(SELF) -> RESULT [https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<T, SELF::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html#associatedtype.Error]>WHERE
    SELF: TRYINTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html]<T>,

Attempts to convert self into T using TryInto<T>. Read more
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#775]§


IMPL<T, U> TRYFROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<U> FOR TWHERE
    U: INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<T>,

§

TYPE ERROR [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error] = INFALLIBLE
[https://doc.rust-lang.org/1.67.0/core/convert/enum.Infallible.html]

The type returned in the event of a conversion error.
const: unstable [https://github.com/rust-lang/rust/issues/88674] · source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#781]§

FN TRY_FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#tymethod.try_from](VALUE: U) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<T, <T AS TRYFROM
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<U>>::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error]>

Performs the conversion.
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#760]§


IMPL<T, U> TRYINTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html]<U> FOR TWHERE
    U: TRYFROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<T>,

§

TYPE ERROR [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html#associatedtype.Error] = <U AS TRYFROM
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<T>>::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error]

The type returned in the event of a conversion error.
const: unstable [https://github.com/rust-lang/rust/issues/88674] · source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#766]§

FN TRY_INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html#tymethod.try_into](SELF) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<U, <U AS TRYFROM
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<T>>::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error]>

Performs the conversion.
§


IMPL<V, T> VZIP<V> FOR TWHERE
    V: MULTILANE<T>,

§

FN VZIP(SELF) -> V

source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#334]§


IMPL<T> WITHSUBSCRIBER [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.WithSubscriber.html] FOR T

source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#169-171]§

FN WITH_SUBSCRIBER [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.WithSubscriber.html#method.with_subscriber]<S>(SELF,
SUBSCRIBER: S) -> WITHDISPATCH [https://docs.rs/tracing/0.1.37/tracing/instrument/struct.WithDispatch.html]<SELF>WHERE
    S: INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<DISPATCH
[https://docs.rs/tracing-core/0.1.22/tracing_core/dispatcher/struct.Dispatch.html]>,

Attaches the provided Subscriber [https://docs.rs/tracing-core/0.1.22/tracing_core/subscriber/trait.Subscriber.html] to this type,
returning a WithDispatch [https://docs.rs/tracing/0.1.37/tracing/instrument/struct.WithDispatch.html] wrapper. Read more
[https://docs.rs/tracing/0.1.37/tracing/instrument/trait.WithSubscriber.html#method.with_subscriber]
source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#221]§

FN WITH_CURRENT_SUBSCRIBER
[https://docs.rs/tracing/0.1.37/tracing/instrument/trait.WithSubscriber.html#method.with_current_subscriber](SELF) -> WITHDISPATCH
[https://docs.rs/tracing/0.1.37/tracing/instrument/struct.WithDispatch.html]<SELF>

Attaches the current default [https://docs.rs/tracing/0.1.37/tracing/dispatcher/index.html#setting-the-default-subscriber]
Subscriber [https://docs.rs/tracing-core/0.1.22/tracing_core/subscriber/trait.Subscriber.html] to this type, returning a
WithDispatch [https://docs.rs/tracing/0.1.37/tracing/instrument/struct.WithDispatch.html] wrapper. Read more
[https://docs.rs/tracing/0.1.37/tracing/instrument/trait.WithSubscriber.html#method.with_current_subscriber]
§


IMPL<T> MAYBESEND [task/trait.MaybeSend.html] FOR TWHERE
    T: SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html],

§


IMPL<T> MAYBESEND FOR TWHERE
    T: SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html],

§


IMPL<T> MAYBESYNC [task/trait.MaybeSync.html] FOR TWHERE
    T: SYNC [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html],

