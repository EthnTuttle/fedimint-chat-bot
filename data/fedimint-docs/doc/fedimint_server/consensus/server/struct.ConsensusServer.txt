☰
logo [../../../static.files/rust-logo-151179464ae7ed46.svg]
../../../fedimint_server/index.html




logo [../../../static.files/rust-logo-151179464ae7ed46.svg]
../../../fedimint_server/index.html


CONSENSUSSERVER


FIELDS

 * api
 * api_receiver
 * cfg
 * connections
 * consensus
 * decoders
 * hbbft
 * last_processed_epoch
 * latest_contribution_by_peer
 * other_peers
 * pending_forced_epochs
 * rejoin_at_epoch
 * task_group


METHODS

 * new
 * new_with
 * process_outcome
 * run_consensus
 * run_consensus_epoch
 * start_consensus


AUTO TRAIT IMPLEMENTATIONS

 * !RefUnwindSafe
 * Send
 * !Sync
 * Unpin
 * !UnwindSafe


BLANKET IMPLEMENTATIONS

 * Any
 * Borrow<T>
 * BorrowMut<T>
 * Conv
 * FmtForward
 * From<T>
 * FutureExt
 * Instrument
 * Into<U>
 * IntoRequest<T>
 * MaybeSend
 * MaybeSend
 * Pipe
 * Same<T>
 * Tap
 * TryConv
 * TryFrom<U>
 * TryInto<U>
 * VZip<V>
 * WithSubscriber


IN FEDIMINT_SERVER::CONSENSUS::SERVER [index.html]

? [../../../help.html]
Change settings [../../../static.files/wheel-5ec35bf9ca753509.svg]../../../settings.html


STRUCT FEDIMINT_SERVER [../../index.html]::CONSENSUS [../index.html]::SERVER [index.html]::CONSENSUSSERVERCopy item path
[../../../static.files/clipboard-7571035ce49a181d.svg]

source [../../../src/fedimint_server/consensus/server.rs.html#77-106] · [−]

pub struct ConsensusServer {Show 13 fields
    pub task_group: TaskGroup../../task/struct.TaskGroup.html,
    pub consensus: FedimintConsensus../struct.FedimintConsensus.html,
    pub api_receiver: Peekable<ReceiverStream<ApiEvent../enum.ApiEvent.html>>,
    pub connections: PeerConnections<EpochMessageenum.EpochMessage.html>,
    pub cfg: ServerConfig../../config/struct.ServerConfig.html,
    pub hbbft: HoneyBadger<Vechttps://doc.rust-lang.org/1.67.0/alloc/vec/struct.Vec.html<SerdeConsensusItem../../epoch/type.SerdeConsensusItem.html>, PeerId../../struct.PeerId.html>,
    pub api: DynGlobalApi../../api/struct.DynGlobalApi.html,
    pub other_peers: BTreeSethttps://doc.rust-lang.org/1.67.0/alloc/collections/btree/set/struct.BTreeSet.html<PeerId../../struct.PeerId.html>,
    pub rejoin_at_epoch: HashMaphttps://doc.rust-lang.org/1.67.0/std/collections/hash/map/struct.HashMap.html<u64https://doc.rust-lang.org/1.67.0/std/primitive.u64.html, HashSethttps://doc.rust-lang.org/1.67.0/std/collections/hash/set/struct.HashSet.html<PeerId../../struct.PeerId.html>>,
    pub latest_contribution_by_peer: Archttps://doc.rust-lang.org/1.67.0/alloc/sync/struct.Arc.html<RwLock../../task/struct.RwLock.html<HashMaphttps://doc.rust-lang.org/1.67.0/std/collections/hash/map/struct.HashMap.html<PeerId../../struct.PeerId.html, ConsensusContribution../../api/struct.ConsensusContribution.html>>>,
    pub pending_forced_epochs: u64https://doc.rust-lang.org/1.67.0/std/primitive.u64.html,
    pub last_processed_epoch: Optionhttps://doc.rust-lang.org/1.67.0/core/option/enum.Option.html<SignedEpochOutcome../../epoch/struct.SignedEpochOutcome.html>,
    pub decoders: ModuleDecoderRegistry../../module/registry/type.ModuleDecoderRegistry.html,
}

Expand description

Runs the main server consensus loop


FIELDS§

§task_group: TaskGroup [../../task/struct.TaskGroup.html]

TaskGroup that is running the server

§consensus: FedimintConsensus [../struct.FedimintConsensus.html]

Delegate for processing consensus information

§api_receiver: Peekable<ReceiverStream<ApiEvent [../enum.ApiEvent.html]>>

Receives event notifications from the API (triggers epochs)

§connections: PeerConnections<EpochMessage [enum.EpochMessage.html]>

P2P connections for running consensus

§cfg: ServerConfig [../../config/struct.ServerConfig.html]

Our configuration

§hbbft: HoneyBadger<Vec [https://doc.rust-lang.org/1.67.0/alloc/vec/struct.Vec.html]<SerdeConsensusItem
[../../epoch/type.SerdeConsensusItem.html]>, PeerId [../../struct.PeerId.html]>

Runs the HBBFT consensus algorithm

§api: DynGlobalApi [../../api/struct.DynGlobalApi.html]

Used to make API calls to our peers

§other_peers: BTreeSet [https://doc.rust-lang.org/1.67.0/alloc/collections/btree/set/struct.BTreeSet.html]<PeerId
[../../struct.PeerId.html]>

The list of all other peers

§rejoin_at_epoch: HashMap [https://doc.rust-lang.org/1.67.0/std/collections/hash/map/struct.HashMap.html]<u64
[https://doc.rust-lang.org/1.67.0/std/primitive.u64.html], HashSet
[https://doc.rust-lang.org/1.67.0/std/collections/hash/set/struct.HashSet.html]<PeerId [../../struct.PeerId.html]>>

If Some then we restarted and look for the epoch to rejoin at

§latest_contribution_by_peer: Arc [https://doc.rust-lang.org/1.67.0/alloc/sync/struct.Arc.html]<RwLock
[../../task/struct.RwLock.html]<HashMap [https://doc.rust-lang.org/1.67.0/std/collections/hash/map/struct.HashMap.html]<PeerId
[../../struct.PeerId.html], ConsensusContribution [../../api/struct.ConsensusContribution.html]>>>

Under the HBBFT consensus algorithm, this will track the latest epoch message received by each peer and when it was received

§pending_forced_epochs: u64 [https://doc.rust-lang.org/1.67.0/std/primitive.u64.html]

Number of pending forced epochs (requested by peers to help join consensus faster)

§last_processed_epoch: Option [https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<SignedEpochOutcome
[../../epoch/struct.SignedEpochOutcome.html]>

Tracks the last epoch outcome from consensus

§decoders: ModuleDecoderRegistry [../../module/registry/type.ModuleDecoderRegistry.html]

Used for decoding module specific-values


IMPLEMENTATIONS§

source [../../../src/fedimint_server/consensus/server.rs.html#108-650]§


IMPL CONSENSUSSERVER [struct.ConsensusServer.html]

source [../../../src/fedimint_server/consensus/server.rs.html#110-128]

PUB ASYNC FN NEW(
    CFG: SERVERCONFIG [../../config/struct.ServerConfig.html],
    DB: DATABASE,
    MODULE_INITS: SERVERMODULEGENREGISTRY [../../config/type.ServerModuleGenRegistry.html],
    TASK_GROUP: &MUT TASKGROUP [../../task/struct.TaskGroup.html]
) -> RESULT [https://docs.rs/anyhow/1.0.71/anyhow/type.Result.html]<SELF>

Creates a server with real network and no delays

source [../../../src/fedimint_server/consensus/server.rs.html#133-256]

PUB ASYNC FN NEW_WITH(
    CFG: SERVERCONFIG [../../config/struct.ServerConfig.html],
    DB: DATABASE,
    MODULE_INITS: SERVERMODULEGENREGISTRY [../../config/type.ServerModuleGenRegistry.html],
    CONNECTOR: PEERCONNECTOR [../../net/peers/type.PeerConnector.html]<EPOCHMESSAGE [enum.EpochMessage.html]>,
    DELAY_CALCULATOR: DELAYCALCULATOR [../../net/peers/struct.DelayCalculator.html],
    TASK_GROUP: &MUT TASKGROUP [../../task/struct.TaskGroup.html]
) -> RESULT [https://docs.rs/anyhow/1.0.71/anyhow/type.Result.html]<SELF>

Creates a server that can simulate network and delays

Initializes modules and runs any database migrations

source [../../../src/fedimint_server/consensus/server.rs.html#259-309]

PUB ASYNC FN RUN_CONSENSUS(SELF, TASK_HANDLE: TASKHANDLE [../../task/struct.TaskHandle.html]) -> RESULT
[https://docs.rs/anyhow/1.0.71/anyhow/type.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html]>

Loop run_conensus_epoch until shut down

source [../../../src/fedimint_server/consensus/server.rs.html#313-330]

PUB ASYNC FN START_CONSENSUS(&MUT SELF)

Starts consensus by skipping to the last saved epoch history and triggering a new epoch

source [../../../src/fedimint_server/consensus/server.rs.html#345-429]

PUB ASYNC FN PROCESS_OUTCOME(
    &MUT SELF,
    LAST_OUTCOME: HBBFTCONSENSUSOUTCOME [../type.HbbftConsensusOutcome.html]
) -> RESULT [https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<()
[https://doc.rust-lang.org/1.67.0/std/primitive.unit.html], EPOCHVERIFYERROR [../../epoch/enum.EpochVerifyError.html]>

Requests, verifies and processes history from peers

last_outcome - The consensus outcome (unprocessed), we’re trying to process.

source [../../../src/fedimint_server/consensus/server.rs.html#435-480]

PUB ASYNC FN RUN_CONSENSUS_EPOCH(
    &MUT SELF,
    OVERRIDE_PROPOSAL: OPTION [https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<CONSENSUSPROPOSAL
[../struct.ConsensusProposal.html]>,
    RNG: &MUT IMPL RNGCORE [https://rust-random.github.io/rand/rand_core/trait.RngCore.html] + CRYPTORNG
[https://rust-random.github.io/rand/rand_core/trait.CryptoRng.html] + CLONE
[https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html] + 'STATIC
) -> RESULT [https://docs.rs/anyhow/1.0.71/anyhow/type.Result.html]<VEC
[https://doc.rust-lang.org/1.67.0/alloc/vec/struct.Vec.html]<HBBFTCONSENSUSOUTCOME [../type.HbbftConsensusOutcome.html]>>

The main consensus function:

 1. Await a new proposal event or receiving a proposal from peers
 2. Send the ConsensusProposal to peers
 3. Run HBBFT until a ConsensusOutcome can be returned


AUTO TRAIT IMPLEMENTATIONS§

§


IMPL !REFUNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.RefUnwindSafe.html] FOR CONSENSUSSERVER
[struct.ConsensusServer.html]

§


IMPL SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] FOR CONSENSUSSERVER [struct.ConsensusServer.html]

§


IMPL !SYNC [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html] FOR CONSENSUSSERVER [struct.ConsensusServer.html]

§


IMPL UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html] FOR CONSENSUSSERVER [struct.ConsensusServer.html]

§


IMPL !UNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.UnwindSafe.html] FOR CONSENSUSSERVER
[struct.ConsensusServer.html]


BLANKET IMPLEMENTATIONS§

source [https://doc.rust-lang.org/1.67.0/src/core/any.rs.html#200]§


IMPL<T> ANY [https://doc.rust-lang.org/1.67.0/core/any/trait.Any.html] FOR TWHERE
    T: 'STATIC + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

source [https://doc.rust-lang.org/1.67.0/src/core/any.rs.html#201]§

FN TYPE_ID [https://doc.rust-lang.org/1.67.0/core/any/trait.Any.html#tymethod.type_id](&SELF) -> TYPEID
[https://doc.rust-lang.org/1.67.0/core/any/struct.TypeId.html]

Gets the TypeId of self. Read more [https://doc.rust-lang.org/1.67.0/core/any/trait.Any.html#tymethod.type_id]
source [https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#211]§


IMPL<T> BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<T> FOR TWHERE
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

const: unstable [https://github.com/rust-lang/rust/issues/91522] · source
[https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#213]§

FN BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html#tymethod.borrow](&SELF) -> &
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T

Immutably borrows from an owned value. Read more [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html#tymethod.borrow]
source [https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#220]§


IMPL<T> BORROWMUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html]<T> FOR TWHERE
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

const: unstable [https://github.com/rust-lang/rust/issues/91522] · source
[https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#221]§

FN BORROW_MUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut](&MUT SELF) -> &MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T

Mutably borrows from an owned value. Read more
[https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut]
§


IMPL<T> CONV FOR T

§

FN CONV<T>(SELF) -> TWHERE
    SELF: INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<T>,

Converts self into T using Into<T>. Read more
§


IMPL<T> FMTFORWARD FOR T

§

FN FMT_BINARY(SELF) -> FMTBINARY<SELF>WHERE
    SELF: BINARY [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Binary.html],

Causes self to use its Binary implementation when Debug-formatted.
§

FN FMT_DISPLAY(SELF) -> FMTDISPLAY<SELF>WHERE
    SELF: DISPLAY [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Display.html],

Causes self to use its Display implementation when Debug-formatted. Read more
§

FN FMT_LOWER_EXP(SELF) -> FMTLOWEREXP<SELF>WHERE
    SELF: LOWEREXP [https://doc.rust-lang.org/1.67.0/core/fmt/trait.LowerExp.html],

Causes self to use its LowerExp implementation when Debug-formatted. Read more
§

FN FMT_LOWER_HEX(SELF) -> FMTLOWERHEX<SELF>WHERE
    SELF: LOWERHEX [https://doc.rust-lang.org/1.67.0/core/fmt/trait.LowerHex.html],

Causes self to use its LowerHex implementation when Debug-formatted. Read more
§

FN FMT_OCTAL(SELF) -> FMTOCTAL<SELF>WHERE
    SELF: OCTAL [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Octal.html],

Causes self to use its Octal implementation when Debug-formatted.
§

FN FMT_POINTER(SELF) -> FMTPOINTER<SELF>WHERE
    SELF: POINTER [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Pointer.html],

Causes self to use its Pointer implementation when Debug-formatted. Read more
§

FN FMT_UPPER_EXP(SELF) -> FMTUPPEREXP<SELF>WHERE
    SELF: UPPEREXP [https://doc.rust-lang.org/1.67.0/core/fmt/trait.UpperExp.html],

Causes self to use its UpperExp implementation when Debug-formatted. Read more
§

FN FMT_UPPER_HEX(SELF) -> FMTUPPERHEX<SELF>WHERE
    SELF: UPPERHEX [https://doc.rust-lang.org/1.67.0/core/fmt/trait.UpperHex.html],

Causes self to use its UpperHex implementation when Debug-formatted. Read more
§

FN FMT_LIST(SELF) -> FMTLIST<SELF>WHERE
    &'A [https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF: FOR<'A> INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html],

Formats each item in a sequence. Read more
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#733]§


IMPL<T> FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<T> FOR T

const: unstable [https://github.com/rust-lang/rust/issues/88674] · source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#736]§

FN FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html#tymethod.from](T: T) -> T

Returns the argument unchanged.

§


IMPL<T> FUTUREEXT FOR T

§

FN WITH_CONTEXT(SELF, OTEL_CX: CONTEXT) -> WITHCONTEXT<SELF>

Attaches the provided Context [crate::Context] to this type, returning a WithContext wrapper. Read more
§

FN WITH_CURRENT_CONTEXT(SELF) -> WITHCONTEXT<SELF>

Attaches the current Context [crate::Context] to this type, returning a WithContext wrapper. Read more
source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#276]§


IMPL<T> INSTRUMENT [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.Instrument.html] FOR T

source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#82]§

FN INSTRUMENT [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.Instrument.html#method.instrument](SELF, SPAN: SPAN
[https://docs.rs/tracing/0.1.37/tracing/span/struct.Span.html]) -> INSTRUMENTED
[https://docs.rs/tracing/0.1.37/tracing/instrument/struct.Instrumented.html]<SELF>

Instruments this type with the provided Span [https://docs.rs/tracing/0.1.37/tracing/span/struct.Span.html], returning an
Instrumented wrapper. Read more [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.Instrument.html#method.instrument]
source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#121]§

FN IN_CURRENT_SPAN [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.Instrument.html#method.in_current_span](SELF) ->
INSTRUMENTED [https://docs.rs/tracing/0.1.37/tracing/instrument/struct.Instrumented.html]<SELF>

Instruments this type with the current [https://docs.rs/tracing/0.1.37/tracing/span/struct.Span.html#method.current] Span
[https://docs.rs/tracing/0.1.37/tracing/span/struct.Span.html], returning an Instrumented wrapper. Read more
[https://docs.rs/tracing/0.1.37/tracing/instrument/trait.Instrument.html#method.in_current_span]
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#717]§


IMPL<T, U> INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<U> FOR TWHERE
    U: FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<T>,

const: unstable [https://github.com/rust-lang/rust/issues/88674] · source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#725]§

FN INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html#tymethod.into](SELF) -> U

Calls U::from(self).

That is, this conversion is whatever the implementation of From [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<T>
for U chooses to do.

source [https://docs.rs/tonic/0.9.2/src/tonic/request.rs.html#384]§


IMPL<T> INTOREQUEST [https://docs.rs/tonic/0.9.2/tonic/request/trait.IntoRequest.html]<T> FOR T

source [https://docs.rs/tonic/0.9.2/src/tonic/request.rs.html#385]§

FN INTO_REQUEST [https://docs.rs/tonic/0.9.2/tonic/request/trait.IntoRequest.html#tymethod.into_request](SELF) -> REQUEST
[https://docs.rs/tonic/0.9.2/tonic/request/struct.Request.html]<T>

Wrap the input message T in a tonic::Request
§


IMPL<T> PIPE FOR TWHERE
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

§

FN PIPE<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](SELF) -> R) -> RWHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Pipes by value. This is generally the method you want to use. Read more
§

FN PIPE_REF<'A, R>(&'A SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF) -> R) -> RWHERE
    R: 'A,

Borrows self and passes that borrow into the pipe function. Read more
§

FN PIPE_REF_MUT<'A, R>(&'A MUT SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
MUT [https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF) -> R) -> RWHERE
    R: 'A,

Mutably borrows self and passes that borrow into the pipe function. Read more
§

FN PIPE_BORROW<'A, B, R>(&'A SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B) -> R) -> RWHERE
    SELF: BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<B>,
    B: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Borrows self, then passes self.borrow() into the pipe function. Read more
§

FN PIPE_BORROW_MUT<'A, B, R>(
    &'A MUT SELF,
    FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B) -> R
) -> RWHERE
    SELF: BORROWMUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html]<B>,
    B: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Mutably borrows self, then passes self.borrow_mut() into the pipe function. Read more
§

FN PIPE_AS_REF<'A, U, R>(&'A SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]U) -> R) -> RWHERE
    SELF: ASREF [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsRef.html]<U>,
    U: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Borrows self, then passes self.as_ref() into the pipe function.
§

FN PIPE_AS_MUT<'A, U, R>(&'A MUT SELF, FUNC: IMPL FNONCE
[https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]U) -> R) -> RWHERE
    SELF: ASMUT [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsMut.html]<U>,
    U: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Mutably borrows self, then passes self.as_mut() into the pipe function. Read more
§

FN PIPE_DEREF<'A, T, R>(&'A SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T) -> R) -> RWHERE
    SELF: DEREF [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html]<TARGET = T>,
    T: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Borrows self, then passes self.deref() into the pipe function.
§

FN PIPE_DEREF_MUT<'A, T, R>(&'A MUT SELF, FUNC: IMPL FNONCE
[https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T) -> R) -> RWHERE
    SELF: DEREFMUT [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.DerefMut.html]<TARGET = T> + DEREF
[https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html],
    T: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Mutably borrows self, then passes self.deref_mut() into the pipe function. Read more
source [https://docs.rs/typenum/1.16.0/src/typenum/type_operators.rs.html#34]§


IMPL<T> SAME [https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Same.html]<T> FOR T

§

TYPE OUTPUT [https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Same.html#associatedtype.Output] = T

Should always be Self
§


IMPL<T> TAP FOR T

§

FN TAP(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)) -> SELF

Immutable access to a value. Read more
§

FN TAP_MUT(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)) -> SELF

Mutable access to a value. Read more
§

FN TAP_BORROW<B>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B)) -> SELFWHERE
    SELF: BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<B>,
    B: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Immutable access to the Borrow<B> of a value. Read more
§

FN TAP_BORROW_MUT<B>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B)) -> SELFWHERE
    SELF: BORROWMUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html]<B>,
    B: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Mutable access to the BorrowMut<B> of a value. Read more
§

FN TAP_REF<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R)) -> SELFWHERE
    SELF: ASREF [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsRef.html]<R>,
    R: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Immutable access to the AsRef<R> view of a value. Read more
§

FN TAP_REF_MUT<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R)) -> SELFWHERE
    SELF: ASMUT [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsMut.html]<R>,
    R: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Mutable access to the AsMut<R> view of a value. Read more
§

FN TAP_DEREF<T>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)) -> SELFWHERE
    SELF: DEREF [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html]<TARGET = T>,
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Immutable access to the Deref::Target of a value. Read more
§

FN TAP_DEREF_MUT<T>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)) -> SELFWHERE
    SELF: DEREFMUT [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.DerefMut.html]<TARGET = T> + DEREF
[https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html],
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Mutable access to the Deref::Target of a value. Read more
§

FN TAP_DBG(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)) -> SELF

Calls .tap() only in debug builds, and is erased in release builds.
§

FN TAP_MUT_DBG(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)) -> SELF

Calls .tap_mut() only in debug builds, and is erased in release builds. Read more
§

FN TAP_BORROW_DBG<B>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B)) -> SELFWHERE
    SELF: BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<B>,
    B: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_borrow() only in debug builds, and is erased in release builds. Read more
§

FN TAP_BORROW_MUT_DBG<B>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B)) -> SELFWHERE
    SELF: BORROWMUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html]<B>,
    B: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_borrow_mut() only in debug builds, and is erased in release builds. Read more
§

FN TAP_REF_DBG<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R)) -> SELFWHERE
    SELF: ASREF [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsRef.html]<R>,
    R: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_ref() only in debug builds, and is erased in release builds. Read more
§

FN TAP_REF_MUT_DBG<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R)) -> SELFWHERE
    SELF: ASMUT [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsMut.html]<R>,
    R: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_ref_mut() only in debug builds, and is erased in release builds. Read more
§

FN TAP_DEREF_DBG<T>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)) -> SELFWHERE
    SELF: DEREF [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html]<TARGET = T>,
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_deref() only in debug builds, and is erased in release builds. Read more
§

FN TAP_DEREF_MUT_DBG<T>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)) -> SELFWHERE
    SELF: DEREFMUT [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.DerefMut.html]<TARGET = T> + DEREF
[https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html],
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_deref_mut() only in debug builds, and is erased in release builds. Read more
§


IMPL<T> TRYCONV FOR T

§

FN TRY_CONV<T>(SELF) -> RESULT [https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<T, SELF::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html#associatedtype.Error]>WHERE
    SELF: TRYINTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html]<T>,

Attempts to convert self into T using TryInto<T>. Read more
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#775]§


IMPL<T, U> TRYFROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<U> FOR TWHERE
    U: INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<T>,

§

TYPE ERROR [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error] = INFALLIBLE
[https://doc.rust-lang.org/1.67.0/core/convert/enum.Infallible.html]

The type returned in the event of a conversion error.
const: unstable [https://github.com/rust-lang/rust/issues/88674] · source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#781]§

FN TRY_FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#tymethod.try_from](VALUE: U) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<T, <T AS TRYFROM
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<U>>::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error]>

Performs the conversion.
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#760]§


IMPL<T, U> TRYINTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html]<U> FOR TWHERE
    U: TRYFROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<T>,

§

TYPE ERROR [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html#associatedtype.Error] = <U AS TRYFROM
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<T>>::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error]

The type returned in the event of a conversion error.
const: unstable [https://github.com/rust-lang/rust/issues/88674] · source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#766]§

FN TRY_INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html#tymethod.try_into](SELF) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<U, <U AS TRYFROM
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<T>>::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error]>

Performs the conversion.
§


IMPL<V, T> VZIP<V> FOR TWHERE
    V: MULTILANE<T>,

§

FN VZIP(SELF) -> V

source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#334]§


IMPL<T> WITHSUBSCRIBER [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.WithSubscriber.html] FOR T

source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#169-171]§

FN WITH_SUBSCRIBER [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.WithSubscriber.html#method.with_subscriber]<S>(SELF,
SUBSCRIBER: S) -> WITHDISPATCH [https://docs.rs/tracing/0.1.37/tracing/instrument/struct.WithDispatch.html]<SELF>WHERE
    S: INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<DISPATCH
[https://docs.rs/tracing-core/0.1.22/tracing_core/dispatcher/struct.Dispatch.html]>,

Attaches the provided Subscriber [https://docs.rs/tracing-core/0.1.22/tracing_core/subscriber/trait.Subscriber.html] to this type,
returning a WithDispatch [https://docs.rs/tracing/0.1.37/tracing/instrument/struct.WithDispatch.html] wrapper. Read more
[https://docs.rs/tracing/0.1.37/tracing/instrument/trait.WithSubscriber.html#method.with_subscriber]
source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#221]§

FN WITH_CURRENT_SUBSCRIBER
[https://docs.rs/tracing/0.1.37/tracing/instrument/trait.WithSubscriber.html#method.with_current_subscriber](SELF) -> WITHDISPATCH
[https://docs.rs/tracing/0.1.37/tracing/instrument/struct.WithDispatch.html]<SELF>

Attaches the current default [https://docs.rs/tracing/0.1.37/tracing/dispatcher/index.html#setting-the-default-subscriber]
Subscriber [https://docs.rs/tracing-core/0.1.22/tracing_core/subscriber/trait.Subscriber.html] to this type, returning a
WithDispatch [https://docs.rs/tracing/0.1.37/tracing/instrument/struct.WithDispatch.html] wrapper. Read more
[https://docs.rs/tracing/0.1.37/tracing/instrument/trait.WithSubscriber.html#method.with_current_subscriber]
§


IMPL<T> MAYBESEND [../../task/trait.MaybeSend.html] FOR TWHERE
    T: SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html],

§


IMPL<T> MAYBESEND FOR TWHERE
    T: SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html],

