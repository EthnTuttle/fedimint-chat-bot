☰
logo [../../static.files/rust-logo-151179464ae7ed46.svg]
../../fedimint_server/index.html




logo [../../static.files/rust-logo-151179464ae7ed46.svg]
../../fedimint_server/index.html


FEDERATIONAPIEXT


PROVIDED METHODS

 * request_current_consensus
 * request_eventually_consistent
 * request_with_strategy


IMPLEMENTORS


IN FEDIMINT_SERVER::API [index.html]

? [../../help.html]
Change settings [../../static.files/wheel-5ec35bf9ca753509.svg]../../settings.html


TRAIT FEDIMINT_SERVER [../index.html]::API [index.html]::FEDERATIONAPIEXTCopy item path
[../../static.files/clipboard-7571035ce49a181d.svg]

[−]

pub trait FederationApiExt: IFederationApitrait.IFederationApi.html {
    fn request_with_strategy<'life0, 'async_trait, MemberRet, FedRet>(
        &'life0 self,
        strategy: impl QueryStrategy../query/trait.QueryStrategy.html<MemberRet, FedRet> + MaybeSend../task/trait.MaybeSend.html + 'async_trait,
        method: Stringhttps://doc.rust-lang.org/1.67.0/alloc/string/struct.String.html,
        params: ApiRequest../module/struct.ApiRequest.html<Valuehttps://docs.rs/serde_json/1.0.96/serde_json/value/enum.Value.html>
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Resulthttps://doc.rust-lang.org/1.67.0/core/result/enum.Result.html<FedRet, FederationErrorstruct.FederationError.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait, Globalhttps://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html>>
    where
        'life0: 'async_trait,
        MemberRet: 'async_trait + DeserializeOwnedhttps://docs.rs/serde/1.0.163/serde/de/trait.DeserializeOwned.html,
        FedRet: 'async_trait + Debughttps://doc.rust-lang.org/1.67.0/core/fmt/trait.Debug.html,
        Self: 'async_trait + Synchttps://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html,
    { ... }
    fn request_current_consensus<'life0, 'async_trait, Ret>(
        &'life0 self,
        method: Stringhttps://doc.rust-lang.org/1.67.0/alloc/string/struct.String.html,
        params: ApiRequest../module/struct.ApiRequest.html<Valuehttps://docs.rs/serde_json/1.0.96/serde_json/value/enum.Value.html>
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Resulthttps://doc.rust-lang.org/1.67.0/core/result/enum.Result.html<Ret, FederationErrorstruct.FederationError.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait, Globalhttps://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html>>
    where
        'life0: 'async_trait,
        Ret: DeserializeOwnedhttps://docs.rs/serde/1.0.163/serde/de/trait.DeserializeOwned.html + Eqhttps://doc.rust-lang.org/1.67.0/core/cmp/trait.Eq.html + Debughttps://doc.rust-lang.org/1.67.0/core/fmt/trait.Debug.html + Clonehttps://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html + MaybeSend../task/trait.MaybeSend.html + 'async_trait,
        Self: 'async_trait + Synchttps://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html,
    { ... }
    fn request_eventually_consistent<'life0, 'async_trait, Ret>(
        &'life0 self,
        method: Stringhttps://doc.rust-lang.org/1.67.0/alloc/string/struct.String.html,
        params: ApiRequest../module/struct.ApiRequest.html<Valuehttps://docs.rs/serde_json/1.0.96/serde_json/value/enum.Value.html>
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Resulthttps://doc.rust-lang.org/1.67.0/core/result/enum.Result.html<Ret, FederationErrorstruct.FederationError.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait, Globalhttps://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html>>
    where
        'life0: 'async_trait,
        Ret: DeserializeOwnedhttps://docs.rs/serde/1.0.163/serde/de/trait.DeserializeOwned.html + Eqhttps://doc.rust-lang.org/1.67.0/core/cmp/trait.Eq.html + Debughttps://doc.rust-lang.org/1.67.0/core/fmt/trait.Debug.html + Clonehttps://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html + MaybeSend../task/trait.MaybeSend.html + 'async_trait,
        Self: 'async_trait + Synchttps://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html,
    { ... }
}

Expand description

An extension trait allowing to making federation-wide API call on top IFederationApi [trait.IFederationApi.html].


PROVIDED METHODS§

FN REQUEST_WITH_STRATEGY<'LIFE0, 'ASYNC_TRAIT, MEMBERRET, FEDRET>(
    &'LIFE0 SELF,
    STRATEGY: IMPL QUERYSTRATEGY [../query/trait.QueryStrategy.html]<MEMBERRET, FEDRET> + MAYBESEND [../task/trait.MaybeSend.html]
+ 'ASYNC_TRAIT,
    METHOD: STRING [https://doc.rust-lang.org/1.67.0/alloc/string/struct.String.html],
    PARAMS: APIREQUEST [../module/struct.ApiRequest.html]<VALUE
[https://docs.rs/serde_json/1.0.96/serde_json/value/enum.Value.html]>
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<FEDRET, FEDERATIONERROR [struct.FederationError.html]>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT, GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>>WHERE
    'LIFE0: 'ASYNC_TRAIT,
    MEMBERRET: 'ASYNC_TRAIT + DESERIALIZEOWNED [https://docs.rs/serde/1.0.163/serde/de/trait.DeserializeOwned.html],
    FEDRET: 'ASYNC_TRAIT + DEBUG [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Debug.html],
    SELF: 'ASYNC_TRAIT + SYNC [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html],

Make an aggregate request to federation, using strategy to logically merge the responses.

FN REQUEST_CURRENT_CONSENSUS<'LIFE0, 'ASYNC_TRAIT, RET>(
    &'LIFE0 SELF,
    METHOD: STRING [https://doc.rust-lang.org/1.67.0/alloc/string/struct.String.html],
    PARAMS: APIREQUEST [../module/struct.ApiRequest.html]<VALUE
[https://docs.rs/serde_json/1.0.96/serde_json/value/enum.Value.html]>
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<RET, FEDERATIONERROR [struct.FederationError.html]>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT, GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>>WHERE
    'LIFE0: 'ASYNC_TRAIT,
    RET: DESERIALIZEOWNED [https://docs.rs/serde/1.0.163/serde/de/trait.DeserializeOwned.html] + EQ
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.Eq.html] + DEBUG [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Debug.html] +
CLONE [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html] + MAYBESEND [../task/trait.MaybeSend.html] + 'ASYNC_TRAIT,
    SELF: 'ASYNC_TRAIT + SYNC [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html],

FN REQUEST_EVENTUALLY_CONSISTENT<'LIFE0, 'ASYNC_TRAIT, RET>(
    &'LIFE0 SELF,
    METHOD: STRING [https://doc.rust-lang.org/1.67.0/alloc/string/struct.String.html],
    PARAMS: APIREQUEST [../module/struct.ApiRequest.html]<VALUE
[https://docs.rs/serde_json/1.0.96/serde_json/value/enum.Value.html]>
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<RET, FEDERATIONERROR [struct.FederationError.html]>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT, GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>>WHERE
    'LIFE0: 'ASYNC_TRAIT,
    RET: DESERIALIZEOWNED [https://docs.rs/serde/1.0.163/serde/de/trait.DeserializeOwned.html] + EQ
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.Eq.html] + DEBUG [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Debug.html] +
CLONE [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html] + MAYBESEND [../task/trait.MaybeSend.html] + 'ASYNC_TRAIT,
    SELF: 'ASYNC_TRAIT + SYNC [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html],


IMPLEMENTORS§

§


IMPL<T> FEDERATIONAPIEXT [trait.FederationApiExt.html] FOR TWHERE
    T: IFEDERATIONAPI [trait.IFederationApi.html] + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

