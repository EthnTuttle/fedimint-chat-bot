☰
logo [../../static.files/rust-logo-151179464ae7ed46.svg]
../../fedimint_server/index.html




logo [../../static.files/rust-logo-151179464ae7ed46.svg]
../../fedimint_server/index.html


IN FEDIMINT_SERVER::MACROS [index.html]

? [../../help.html]
Change settings [../../static.files/wheel-5ec35bf9ca753509.svg]../../settings.html


MACRO FEDIMINT_SERVER [../index.html]::MACROS [index.html]::DYN_NEWTYPE_DEFINECopy item path
[../../static.files/clipboard-7571035ce49a181d.svg]

[−]

macro_rules! dyn_newtype_define {
    (   $(#[$outer:meta])*
        $vis:vis $name:ident<$lifetime:lifetime>(Box<$trait:ident>)
    ) => { ... };
    (   $(#[$outer:meta])*
        $vis:vis $name:ident(Box<$trait:ident>)
    ) => { ... };
    (   $(#[$outer:meta])*
        $vis:vis $name:ident<$lifetime:lifetime>(Arc<$trait:ident>)
    ) => { ... };
    (   $(#[$outer:meta])*
        $vis:vis $name:ident(Arc<$trait:ident>)
    ) => { ... };
}

Expand description

Define “dyn newtype” (a newtype over dyn Trait)

This is a simple pattern that make working with dyn Traits easier, by hiding their details.

A “dyn newtype” Derefs to the underlying&dyn Trait, making it easy to access the encapsulated operations, while hiding the boxing
details.

