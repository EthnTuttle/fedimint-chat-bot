☰
logo [../../../static.files/rust-logo-151179464ae7ed46.svg]
../../../fedimint_server/index.html




logo [../../../static.files/rust-logo-151179464ae7ed46.svg]
../../../fedimint_server/index.html


PEERHANDLEOPS


REQUIRED METHODS

 * exchange_pubkeys
 * run_dkg_g1
 * run_dkg_multi_g2


IMPLEMENTORS


IN FEDIMINT_SERVER::CONFIG::DISTRIBUTEDGEN [index.html]

? [../../../help.html]
Change settings [../../../static.files/wheel-5ec35bf9ca753509.svg]../../../settings.html


TRAIT FEDIMINT_SERVER [../../index.html]::CONFIG [../index.html]::DISTRIBUTEDGEN [index.html]::PEERHANDLEOPSCopy item path
[../../../static.files/clipboard-7571035ce49a181d.svg]

source [../../../src/fedimint_server/config/distributedgen.rs.html#495-509] · [−]

pub trait PeerHandleOps {
    fn run_dkg_g1<'life0, 'async_trait, T>(
        &'life0 self,
        v: T
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = DkgResult../type.DkgResult.html<HashMaphttps://doc.rust-lang.org/1.67.0/std/collections/hash/map/struct.HashMap.html<T, DkgKeysstruct.DkgKeys.html<G1Projective>>>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        T: Serializehttps://docs.rs/serde/1.0.163/serde/ser/trait.Serialize.html + DeserializeOwnedhttps://docs.rs/serde/1.0.163/serde/de/trait.DeserializeOwned.html + Unpinhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + Clonehttps://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html + Eqhttps://doc.rust-lang.org/1.67.0/core/cmp/trait.Eq.html + Hashhttps://doc.rust-lang.org/1.67.0/core/hash/trait.Hash.html + Synchttps://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html + 'async_trait,
        Self: 'async_trait,
        'life0: 'async_trait;
    fn run_dkg_multi_g2<'life0, 'async_trait, T>(
        &'life0 self,
        v: Vechttps://doc.rust-lang.org/1.67.0/alloc/vec/struct.Vec.html<T>
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = DkgResult../type.DkgResult.html<HashMaphttps://doc.rust-lang.org/1.67.0/std/collections/hash/map/struct.HashMap.html<T, DkgKeysstruct.DkgKeys.html<G2Projective>>>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        T: Serializehttps://docs.rs/serde/1.0.163/serde/ser/trait.Serialize.html + DeserializeOwnedhttps://docs.rs/serde/1.0.163/serde/de/trait.DeserializeOwned.html + Unpinhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + Clonehttps://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html + Eqhttps://doc.rust-lang.org/1.67.0/core/cmp/trait.Eq.html + Hashhttps://doc.rust-lang.org/1.67.0/core/hash/trait.Hash.html + Synchttps://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html + 'async_trait,
        Self: 'async_trait,
        'life0: 'async_trait;
    fn exchange_pubkeys<'life0, 'async_trait>(
        &'life0 self,
        dkg_key: Stringhttps://doc.rust-lang.org/1.67.0/alloc/string/struct.String.html,
        key: PublicKey
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = DkgResult../type.DkgResult.html<BTreeMaphttps://doc.rust-lang.org/1.67.0/alloc/collections/btree/map/struct.BTreeMap.html<PeerId../../struct.PeerId.html, PublicKey>>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait;
}


REQUIRED METHODS§

source [../../../src/fedimint_server/config/distributedgen.rs.html#496-498]

FN RUN_DKG_G1<'LIFE0, 'ASYNC_TRAIT, T>(
    &'LIFE0 SELF,
    V: T
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = DKGRESULT [../type.DkgResult.html]<HASHMAP
[https://doc.rust-lang.org/1.67.0/std/collections/hash/map/struct.HashMap.html]<T, DKGKEYS [struct.DkgKeys.html]<G1PROJECTIVE>>>>
+ SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    T: SERIALIZE [https://docs.rs/serde/1.0.163/serde/ser/trait.Serialize.html] + DESERIALIZEOWNED
[https://docs.rs/serde/1.0.163/serde/de/trait.DeserializeOwned.html] + UNPIN
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html] + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + CLONE
[https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html] + EQ [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Eq.html] +
HASH [https://doc.rust-lang.org/1.67.0/core/hash/trait.Hash.html] + SYNC
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html] + 'ASYNC_TRAIT,
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,

source [../../../src/fedimint_server/config/distributedgen.rs.html#500-502]

FN RUN_DKG_MULTI_G2<'LIFE0, 'ASYNC_TRAIT, T>(
    &'LIFE0 SELF,
    V: VEC [https://doc.rust-lang.org/1.67.0/alloc/vec/struct.Vec.html]<T>
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = DKGRESULT [../type.DkgResult.html]<HASHMAP
[https://doc.rust-lang.org/1.67.0/std/collections/hash/map/struct.HashMap.html]<T, DKGKEYS [struct.DkgKeys.html]<G2PROJECTIVE>>>>
+ SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    T: SERIALIZE [https://docs.rs/serde/1.0.163/serde/ser/trait.Serialize.html] + DESERIALIZEOWNED
[https://docs.rs/serde/1.0.163/serde/de/trait.DeserializeOwned.html] + UNPIN
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html] + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + CLONE
[https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html] + EQ [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Eq.html] +
HASH [https://doc.rust-lang.org/1.67.0/core/hash/trait.Hash.html] + SYNC
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html] + 'ASYNC_TRAIT,
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,

source [../../../src/fedimint_server/config/distributedgen.rs.html#504-508]

FN EXCHANGE_PUBKEYS<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    DKG_KEY: STRING [https://doc.rust-lang.org/1.67.0/alloc/string/struct.String.html],
    KEY: PUBLICKEY
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = DKGRESULT [../type.DkgResult.html]<BTREEMAP
[https://doc.rust-lang.org/1.67.0/alloc/collections/btree/map/struct.BTreeMap.html]<PEERID [../../struct.PeerId.html],
PUBLICKEY>>> + SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,


IMPLEMENTORS§

source [../../../src/fedimint_server/config/distributedgen.rs.html#512-565]§


IMPL<'A> PEERHANDLEOPS [trait.PeerHandleOps.html] FOR PEERHANDLE [../../module/struct.PeerHandle.html]<'A>

