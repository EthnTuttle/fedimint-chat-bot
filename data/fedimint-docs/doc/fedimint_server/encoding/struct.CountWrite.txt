‚ò∞
logo [../../static.files/rust-logo-151179464ae7ed46.svg]
../../fedimint_server/index.html




logo [../../static.files/rust-logo-151179464ae7ed46.svg]
../../fedimint_server/index.html


COUNTWRITE


METHODS

 * count
 * into_inner


TRAIT IMPLEMENTATIONS

 * From<W>
 * Write


AUTO TRAIT IMPLEMENTATIONS

 * RefUnwindSafe
 * Send
 * Sync
 * Unpin
 * UnwindSafe


BLANKET IMPLEMENTATIONS

 * Any
 * Borrow<T>
 * BorrowMut<T>
 * Conv
 * FixedIntWriter
 * FmtForward
 * From<!>
 * From<T>
 * FutureExt
 * Instrument
 * Into<U>
 * IntoRequest<T>
 * MaybeSend
 * MaybeSend
 * MaybeSync
 * Pipe
 * Same<T>
 * TWriteTransport
 * Tap
 * TryConv
 * TryFrom<U>
 * TryInto<U>
 * VZip<V>
 * VarIntWriter
 * WithSubscriber
 * WriteBytesExt
 * WriteExt
 * Writer


IN FEDIMINT_SERVER::ENCODING [index.html]

? [../../help.html]
Change settings [../../static.files/wheel-5ec35bf9ca753509.svg]../../settings.html


STRUCT FEDIMINT_SERVER [../index.html]::ENCODING [index.html]::COUNTWRITECopy item path
[../../static.files/clipboard-7571035ce49a181d.svg]

[‚àí]

pub struct CountWrite<W> { /* private fields */ }

Expand description

A writer counting number of writes written to it

Copy&pasted from https://github.com/SOF3/count-write [https://github.com/SOF3/count-write] which uses Apache license (and it‚Äôs a
trivial amount of code, repeating on stack overflow).


IMPLEMENTATIONS¬ß

¬ß


IMPL<W> COUNTWRITE [struct.CountWrite.html]<W>

PUB FN COUNT(&SELF) -> U64 [https://doc.rust-lang.org/1.67.0/std/primitive.u64.html]

Returns the number of bytes successfully written so far

PUB FN INTO_INNER(SELF) -> W

Extracts the inner writer, discarding this wrapper


TRAIT IMPLEMENTATIONS¬ß

¬ß


IMPL<W> FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<W> FOR COUNTWRITE [struct.CountWrite.html]<W>

¬ß

FN FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html#tymethod.from](INNER: W) -> COUNTWRITE
[struct.CountWrite.html]<W> ‚íæ

Converts to this type from the input type.
¬ß


IMPL<W> WRITE [https://doc.rust-lang.org/1.67.0/std/io/trait.Write.html] FOR COUNTWRITE [struct.CountWrite.html]<W>WHERE
¬†¬†¬†¬†W: WRITE [https://doc.rust-lang.org/1.67.0/std/io/trait.Write.html],

¬ß

FN WRITE [https://doc.rust-lang.org/1.67.0/std/io/trait.Write.html#tymethod.write](&MUT SELF, BUF: &[U8
[https://doc.rust-lang.org/1.67.0/std/primitive.u8.html]]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>

Write a buffer into this writer, returning how many bytes were written. Read more
[https://doc.rust-lang.org/1.67.0/std/io/trait.Write.html#tymethod.write]
¬ß

FN FLUSH [https://doc.rust-lang.org/1.67.0/std/io/trait.Write.html#tymethod.flush](&MUT SELF) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>

Flush this output stream, ensuring that all intermediately buffered contents reach their destination. Read more
[https://doc.rust-lang.org/1.67.0/std/io/trait.Write.html#tymethod.flush]
1.36.0 ¬∑ source [https://doc.rust-lang.org/1.67.0/src/std/io/mod.rs.html#1463]¬ß

FN WRITE_VECTORED [https://doc.rust-lang.org/1.67.0/std/io/trait.Write.html#method.write_vectored](&MUT SELF, BUFS: &[IOSLICE
[https://doc.rust-lang.org/1.67.0/std/io/struct.IoSlice.html]<'_>]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>

Like write [https://doc.rust-lang.org/1.67.0/std/io/trait.Write.html#tymethod.write], except that it writes from a slice of
buffers. Read more [https://doc.rust-lang.org/1.67.0/std/io/trait.Write.html#method.write_vectored]
source [https://doc.rust-lang.org/1.67.0/src/std/io/mod.rs.html#1478]¬ß

FN IS_WRITE_VECTORED [https://doc.rust-lang.org/1.67.0/std/io/trait.Write.html#method.is_write_vectored](&SELF) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]

üî¨This is a nightly-only experimental API. (can_vector)
Determines if this Writer has an efficient write_vectored
[https://doc.rust-lang.org/1.67.0/std/io/trait.Write.html#method.write_vectored] implementation. Read more
[https://doc.rust-lang.org/1.67.0/std/io/trait.Write.html#method.is_write_vectored]
1.0.0 ¬∑ source [https://doc.rust-lang.org/1.67.0/src/std/io/mod.rs.html#1540]¬ß

FN WRITE_ALL [https://doc.rust-lang.org/1.67.0/std/io/trait.Write.html#method.write_all](&MUT SELF, BUF: &[U8
[https://doc.rust-lang.org/1.67.0/std/primitive.u8.html]]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>

Attempts to write an entire buffer into this writer. Read more
[https://doc.rust-lang.org/1.67.0/std/io/trait.Write.html#method.write_all]
source [https://doc.rust-lang.org/1.67.0/src/std/io/mod.rs.html#1605]¬ß

FN WRITE_ALL_VECTORED [https://doc.rust-lang.org/1.67.0/std/io/trait.Write.html#method.write_all_vectored](&MUT SELF, BUFS: &MUT
[IOSLICE [https://doc.rust-lang.org/1.67.0/std/io/struct.IoSlice.html]<'_>]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>

üî¨This is a nightly-only experimental API. (write_all_vectored)
Attempts to write multiple buffers into this writer. Read more
[https://doc.rust-lang.org/1.67.0/std/io/trait.Write.html#method.write_all_vectored]
1.0.0 ¬∑ source [https://doc.rust-lang.org/1.67.0/src/std/io/mod.rs.html#1661]¬ß

FN WRITE_FMT [https://doc.rust-lang.org/1.67.0/std/io/trait.Write.html#method.write_fmt](&MUT SELF, FMT: ARGUMENTS
[https://doc.rust-lang.org/1.67.0/core/fmt/struct.Arguments.html]<'_>) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>

Writes a formatted string into this writer, returning any error encountered. Read more
[https://doc.rust-lang.org/1.67.0/std/io/trait.Write.html#method.write_fmt]
1.0.0 ¬∑ source [https://doc.rust-lang.org/1.67.0/src/std/io/mod.rs.html#1717-1719]¬ß

FN BY_REF [https://doc.rust-lang.org/1.67.0/std/io/trait.Write.html#method.by_ref](&MUT SELF) -> &MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELFWHERE
¬†¬†¬†¬†SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Creates a ‚Äúby reference‚Äù adapter for this instance of Write. Read more
[https://doc.rust-lang.org/1.67.0/std/io/trait.Write.html#method.by_ref]


AUTO TRAIT IMPLEMENTATIONS¬ß

¬ß


IMPL<W> REFUNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.RefUnwindSafe.html] FOR COUNTWRITE
[struct.CountWrite.html]<W>WHERE
¬†¬†¬†¬†W: REFUNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.RefUnwindSafe.html],

¬ß


IMPL<W> SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] FOR COUNTWRITE [struct.CountWrite.html]<W>WHERE
¬†¬†¬†¬†W: SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html],

¬ß


IMPL<W> SYNC [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html] FOR COUNTWRITE [struct.CountWrite.html]<W>WHERE
¬†¬†¬†¬†W: SYNC [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html],

¬ß


IMPL<W> UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html] FOR COUNTWRITE [struct.CountWrite.html]<W>WHERE
¬†¬†¬†¬†W: UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html],

¬ß


IMPL<W> UNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.UnwindSafe.html] FOR COUNTWRITE
[struct.CountWrite.html]<W>WHERE
¬†¬†¬†¬†W: UNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.UnwindSafe.html],


BLANKET IMPLEMENTATIONS¬ß

source [https://doc.rust-lang.org/1.67.0/src/core/any.rs.html#200]¬ß


IMPL<T> ANY [https://doc.rust-lang.org/1.67.0/core/any/trait.Any.html] FOR TWHERE
¬†¬†¬†¬†T: 'STATIC + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

source [https://doc.rust-lang.org/1.67.0/src/core/any.rs.html#201]¬ß

FN TYPE_ID [https://doc.rust-lang.org/1.67.0/core/any/trait.Any.html#tymethod.type_id](&SELF) -> TYPEID
[https://doc.rust-lang.org/1.67.0/core/any/struct.TypeId.html]

Gets the TypeId of self. Read more [https://doc.rust-lang.org/1.67.0/core/any/trait.Any.html#tymethod.type_id]
source [https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#211]¬ß


IMPL<T> BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<T> FOR TWHERE
¬†¬†¬†¬†T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

const: unstable [https://github.com/rust-lang/rust/issues/91522] ¬∑ source
[https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#213]¬ß

FN BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html#tymethod.borrow](&SELF) -> &
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T

Immutably borrows from an owned value. Read more [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html#tymethod.borrow]
source [https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#220]¬ß


IMPL<T> BORROWMUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html]<T> FOR TWHERE
¬†¬†¬†¬†T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

const: unstable [https://github.com/rust-lang/rust/issues/91522] ¬∑ source
[https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#221]¬ß

FN BORROW_MUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut](&MUT SELF) -> &MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T

Mutably borrows from an owned value. Read more
[https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut]
¬ß


IMPL<T> CONV FOR T

¬ß

FN CONV<T>(SELF) -> TWHERE
¬†¬†¬†¬†SELF: INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<T>,

Converts self into T using Into<T>. Read more
¬ß


IMPL<W> FIXEDINTWRITER FOR WWHERE
¬†¬†¬†¬†W: WRITE [https://doc.rust-lang.org/1.67.0/std/io/trait.Write.html],

¬ß

FN WRITE_FIXEDINT<FI>(&MUT SELF, N: FI) -> RESULT [https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html], ERROR
[https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>WHERE
¬†¬†¬†¬†FI: FIXEDINT,

¬ß


IMPL<T> FMTFORWARD FOR T

¬ß

FN FMT_BINARY(SELF) -> FMTBINARY<SELF>WHERE
¬†¬†¬†¬†SELF: BINARY [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Binary.html],

Causes self to use its Binary implementation when Debug-formatted.
¬ß

FN FMT_DISPLAY(SELF) -> FMTDISPLAY<SELF>WHERE
¬†¬†¬†¬†SELF: DISPLAY [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Display.html],

Causes self to use its Display implementation when Debug-formatted. Read more
¬ß

FN FMT_LOWER_EXP(SELF) -> FMTLOWEREXP<SELF>WHERE
¬†¬†¬†¬†SELF: LOWEREXP [https://doc.rust-lang.org/1.67.0/core/fmt/trait.LowerExp.html],

Causes self to use its LowerExp implementation when Debug-formatted. Read more
¬ß

FN FMT_LOWER_HEX(SELF) -> FMTLOWERHEX<SELF>WHERE
¬†¬†¬†¬†SELF: LOWERHEX [https://doc.rust-lang.org/1.67.0/core/fmt/trait.LowerHex.html],

Causes self to use its LowerHex implementation when Debug-formatted. Read more
¬ß

FN FMT_OCTAL(SELF) -> FMTOCTAL<SELF>WHERE
¬†¬†¬†¬†SELF: OCTAL [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Octal.html],

Causes self to use its Octal implementation when Debug-formatted.
¬ß

FN FMT_POINTER(SELF) -> FMTPOINTER<SELF>WHERE
¬†¬†¬†¬†SELF: POINTER [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Pointer.html],

Causes self to use its Pointer implementation when Debug-formatted. Read more
¬ß

FN FMT_UPPER_EXP(SELF) -> FMTUPPEREXP<SELF>WHERE
¬†¬†¬†¬†SELF: UPPEREXP [https://doc.rust-lang.org/1.67.0/core/fmt/trait.UpperExp.html],

Causes self to use its UpperExp implementation when Debug-formatted. Read more
¬ß

FN FMT_UPPER_HEX(SELF) -> FMTUPPERHEX<SELF>WHERE
¬†¬†¬†¬†SELF: UPPERHEX [https://doc.rust-lang.org/1.67.0/core/fmt/trait.UpperHex.html],

Causes self to use its UpperHex implementation when Debug-formatted. Read more
¬ß

FN FMT_LIST(SELF) -> FMTLIST<SELF>WHERE
¬†¬†¬†¬†&'A [https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF: FOR<'A> INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html],

Formats each item in a sequence. Read more
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#751]¬ß


IMPL<T> FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<!
[https://doc.rust-lang.org/1.67.0/std/primitive.never.html]> FOR T

const: unstable [https://github.com/rust-lang/rust/issues/88674] ¬∑ source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#752]¬ß

FN FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html#tymethod.from](T: !
[https://doc.rust-lang.org/1.67.0/std/primitive.never.html]) -> T

Converts to this type from the input type.
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#733]¬ß


IMPL<T> FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<T> FOR T

const: unstable [https://github.com/rust-lang/rust/issues/88674] ¬∑ source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#736]¬ß

FN FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html#tymethod.from](T: T) -> T

Returns the argument unchanged.

¬ß


IMPL<T> FUTUREEXT FOR T

¬ß

FN WITH_CONTEXT(SELF, OTEL_CX: CONTEXT) -> WITHCONTEXT<SELF>

Attaches the provided Context [crate::Context] to this type, returning a WithContext wrapper. Read more
¬ß

FN WITH_CURRENT_CONTEXT(SELF) -> WITHCONTEXT<SELF>

Attaches the current Context [crate::Context] to this type, returning a WithContext wrapper. Read more
source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#276]¬ß


IMPL<T> INSTRUMENT [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.Instrument.html] FOR T

source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#82]¬ß

FN INSTRUMENT [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.Instrument.html#method.instrument](SELF, SPAN: SPAN
[https://docs.rs/tracing/0.1.37/tracing/span/struct.Span.html]) -> INSTRUMENTED
[https://docs.rs/tracing/0.1.37/tracing/instrument/struct.Instrumented.html]<SELF>

Instruments this type with the provided Span [https://docs.rs/tracing/0.1.37/tracing/span/struct.Span.html], returning an
Instrumented wrapper. Read more [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.Instrument.html#method.instrument]
source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#121]¬ß

FN IN_CURRENT_SPAN [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.Instrument.html#method.in_current_span](SELF) ->
INSTRUMENTED [https://docs.rs/tracing/0.1.37/tracing/instrument/struct.Instrumented.html]<SELF>

Instruments this type with the current [https://docs.rs/tracing/0.1.37/tracing/span/struct.Span.html#method.current] Span
[https://docs.rs/tracing/0.1.37/tracing/span/struct.Span.html], returning an Instrumented wrapper. Read more
[https://docs.rs/tracing/0.1.37/tracing/instrument/trait.Instrument.html#method.in_current_span]
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#717]¬ß


IMPL<T, U> INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<U> FOR TWHERE
¬†¬†¬†¬†U: FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<T>,

const: unstable [https://github.com/rust-lang/rust/issues/88674] ¬∑ source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#725]¬ß

FN INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html#tymethod.into](SELF) -> U

Calls U::from(self).

That is, this conversion is whatever the implementation of From [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<T>
for U chooses to do.

source [https://docs.rs/tonic/0.9.2/src/tonic/request.rs.html#384]¬ß


IMPL<T> INTOREQUEST [https://docs.rs/tonic/0.9.2/tonic/request/trait.IntoRequest.html]<T> FOR T

source [https://docs.rs/tonic/0.9.2/src/tonic/request.rs.html#385]¬ß

FN INTO_REQUEST [https://docs.rs/tonic/0.9.2/tonic/request/trait.IntoRequest.html#tymethod.into_request](SELF) -> REQUEST
[https://docs.rs/tonic/0.9.2/tonic/request/struct.Request.html]<T>

Wrap the input message T in a tonic::Request
¬ß


IMPL<T> PIPE FOR TWHERE
¬†¬†¬†¬†T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

¬ß

FN PIPE<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](SELF) -> R) -> RWHERE
¬†¬†¬†¬†SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Pipes by value. This is generally the method you want to use. Read more
¬ß

FN PIPE_REF<'A, R>(&'A SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF) -> R) -> RWHERE
¬†¬†¬†¬†R: 'A,

Borrows self and passes that borrow into the pipe function. Read more
¬ß

FN PIPE_REF_MUT<'A, R>(&'A MUT SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
MUT [https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF) -> R) -> RWHERE
¬†¬†¬†¬†R: 'A,

Mutably borrows self and passes that borrow into the pipe function. Read more
¬ß

FN PIPE_BORROW<'A, B, R>(&'A SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B) -> R) -> RWHERE
¬†¬†¬†¬†SELF: BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<B>,
¬†¬†¬†¬†B: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
¬†¬†¬†¬†R: 'A,

Borrows self, then passes self.borrow() into the pipe function. Read more
¬ß

FN PIPE_BORROW_MUT<'A, B, R>(
¬†¬†¬†¬†&'A MUT SELF,
¬†¬†¬†¬†FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B) -> R
) -> RWHERE
¬†¬†¬†¬†SELF: BORROWMUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html]<B>,
¬†¬†¬†¬†B: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
¬†¬†¬†¬†R: 'A,

Mutably borrows self, then passes self.borrow_mut() into the pipe function. Read more
¬ß

FN PIPE_AS_REF<'A, U, R>(&'A SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]U) -> R) -> RWHERE
¬†¬†¬†¬†SELF: ASREF [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsRef.html]<U>,
¬†¬†¬†¬†U: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
¬†¬†¬†¬†R: 'A,

Borrows self, then passes self.as_ref() into the pipe function.
¬ß

FN PIPE_AS_MUT<'A, U, R>(&'A MUT SELF, FUNC: IMPL FNONCE
[https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]U) -> R) -> RWHERE
¬†¬†¬†¬†SELF: ASMUT [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsMut.html]<U>,
¬†¬†¬†¬†U: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
¬†¬†¬†¬†R: 'A,

Mutably borrows self, then passes self.as_mut() into the pipe function. Read more
¬ß

FN PIPE_DEREF<'A, T, R>(&'A SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T) -> R) -> RWHERE
¬†¬†¬†¬†SELF: DEREF [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html]<TARGET = T>,
¬†¬†¬†¬†T: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
¬†¬†¬†¬†R: 'A,

Borrows self, then passes self.deref() into the pipe function.
¬ß

FN PIPE_DEREF_MUT<'A, T, R>(&'A MUT SELF, FUNC: IMPL FNONCE
[https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T) -> R) -> RWHERE
¬†¬†¬†¬†SELF: DEREFMUT [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.DerefMut.html]<TARGET = T> + DEREF
[https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html],
¬†¬†¬†¬†T: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
¬†¬†¬†¬†R: 'A,

Mutably borrows self, then passes self.deref_mut() into the pipe function. Read more
source [https://docs.rs/typenum/1.16.0/src/typenum/type_operators.rs.html#34]¬ß


IMPL<T> SAME [https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Same.html]<T> FOR T

¬ß

TYPE OUTPUT [https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Same.html#associatedtype.Output] = T

Should always be Self
¬ß


IMPL<T> TAP FOR T

¬ß

FN TAP(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)) -> SELF

Immutable access to a value. Read more
¬ß

FN TAP_MUT(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)) -> SELF

Mutable access to a value. Read more
¬ß

FN TAP_BORROW<B>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B)) -> SELFWHERE
¬†¬†¬†¬†SELF: BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<B>,
¬†¬†¬†¬†B: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Immutable access to the Borrow<B> of a value. Read more
¬ß

FN TAP_BORROW_MUT<B>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B)) -> SELFWHERE
¬†¬†¬†¬†SELF: BORROWMUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html]<B>,
¬†¬†¬†¬†B: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Mutable access to the BorrowMut<B> of a value. Read more
¬ß

FN TAP_REF<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R)) -> SELFWHERE
¬†¬†¬†¬†SELF: ASREF [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsRef.html]<R>,
¬†¬†¬†¬†R: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Immutable access to the AsRef<R> view of a value. Read more
¬ß

FN TAP_REF_MUT<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R)) -> SELFWHERE
¬†¬†¬†¬†SELF: ASMUT [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsMut.html]<R>,
¬†¬†¬†¬†R: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Mutable access to the AsMut<R> view of a value. Read more
¬ß

FN TAP_DEREF<T>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)) -> SELFWHERE
¬†¬†¬†¬†SELF: DEREF [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html]<TARGET = T>,
¬†¬†¬†¬†T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Immutable access to the Deref::Target of a value. Read more
¬ß

FN TAP_DEREF_MUT<T>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)) -> SELFWHERE
¬†¬†¬†¬†SELF: DEREFMUT [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.DerefMut.html]<TARGET = T> + DEREF
[https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html],
¬†¬†¬†¬†T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Mutable access to the Deref::Target of a value. Read more
¬ß

FN TAP_DBG(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)) -> SELF

Calls .tap() only in debug builds, and is erased in release builds.
¬ß

FN TAP_MUT_DBG(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)) -> SELF

Calls .tap_mut() only in debug builds, and is erased in release builds. Read more
¬ß

FN TAP_BORROW_DBG<B>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B)) -> SELFWHERE
¬†¬†¬†¬†SELF: BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<B>,
¬†¬†¬†¬†B: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_borrow() only in debug builds, and is erased in release builds. Read more
¬ß

FN TAP_BORROW_MUT_DBG<B>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B)) -> SELFWHERE
¬†¬†¬†¬†SELF: BORROWMUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html]<B>,
¬†¬†¬†¬†B: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_borrow_mut() only in debug builds, and is erased in release builds. Read more
¬ß

FN TAP_REF_DBG<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R)) -> SELFWHERE
¬†¬†¬†¬†SELF: ASREF [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsRef.html]<R>,
¬†¬†¬†¬†R: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_ref() only in debug builds, and is erased in release builds. Read more
¬ß

FN TAP_REF_MUT_DBG<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R)) -> SELFWHERE
¬†¬†¬†¬†SELF: ASMUT [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsMut.html]<R>,
¬†¬†¬†¬†R: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_ref_mut() only in debug builds, and is erased in release builds. Read more
¬ß

FN TAP_DEREF_DBG<T>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)) -> SELFWHERE
¬†¬†¬†¬†SELF: DEREF [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html]<TARGET = T>,
¬†¬†¬†¬†T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_deref() only in debug builds, and is erased in release builds. Read more
¬ß

FN TAP_DEREF_MUT_DBG<T>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)) -> SELFWHERE
¬†¬†¬†¬†SELF: DEREFMUT [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.DerefMut.html]<TARGET = T> + DEREF
[https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html],
¬†¬†¬†¬†T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_deref_mut() only in debug builds, and is erased in release builds. Read more
¬ß


IMPL<T> TRYCONV FOR T

¬ß

FN TRY_CONV<T>(SELF) -> RESULT [https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<T, SELF::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html#associatedtype.Error]>WHERE
¬†¬†¬†¬†SELF: TRYINTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html]<T>,

Attempts to convert self into T using TryInto<T>. Read more
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#775]¬ß


IMPL<T, U> TRYFROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<U> FOR TWHERE
¬†¬†¬†¬†U: INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<T>,

¬ß

TYPE ERROR [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error] = INFALLIBLE
[https://doc.rust-lang.org/1.67.0/core/convert/enum.Infallible.html]

The type returned in the event of a conversion error.
const: unstable [https://github.com/rust-lang/rust/issues/88674] ¬∑ source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#781]¬ß

FN TRY_FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#tymethod.try_from](VALUE: U) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<T, <T AS TRYFROM
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<U>>::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error]>

Performs the conversion.
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#760]¬ß


IMPL<T, U> TRYINTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html]<U> FOR TWHERE
¬†¬†¬†¬†U: TRYFROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<T>,

¬ß

TYPE ERROR [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html#associatedtype.Error] = <U AS TRYFROM
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<T>>::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error]

The type returned in the event of a conversion error.
const: unstable [https://github.com/rust-lang/rust/issues/88674] ¬∑ source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#766]¬ß

FN TRY_INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html#tymethod.try_into](SELF) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<U, <U AS TRYFROM
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<T>>::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error]>

Performs the conversion.
¬ß


IMPL<V, T> VZIP<V> FOR TWHERE
¬†¬†¬†¬†V: MULTILANE<T>,

¬ß

FN VZIP(SELF) -> V

¬ß


IMPL<INNER> VARINTWRITER FOR INNERWHERE
¬†¬†¬†¬†INNER: WRITE [https://doc.rust-lang.org/1.67.0/std/io/trait.Write.html],

¬ß

FN WRITE_VARINT<VI>(&MUT SELF, N: VI) -> RESULT [https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html], ERROR
[https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>WHERE
¬†¬†¬†¬†VI: VARINT,

source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#334]¬ß


IMPL<T> WITHSUBSCRIBER [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.WithSubscriber.html] FOR T

source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#169-171]¬ß

FN WITH_SUBSCRIBER [https://docs.rs/tracing/0.1.37/tracing/instrument/trait.WithSubscriber.html#method.with_subscriber]<S>(SELF,
SUBSCRIBER: S) -> WITHDISPATCH [https://docs.rs/tracing/0.1.37/tracing/instrument/struct.WithDispatch.html]<SELF>WHERE
¬†¬†¬†¬†S: INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<DISPATCH
[https://docs.rs/tracing-core/0.1.22/tracing_core/dispatcher/struct.Dispatch.html]>,

Attaches the provided Subscriber [https://docs.rs/tracing-core/0.1.22/tracing_core/subscriber/trait.Subscriber.html] to this type,
returning a WithDispatch [https://docs.rs/tracing/0.1.37/tracing/instrument/struct.WithDispatch.html] wrapper. Read more
[https://docs.rs/tracing/0.1.37/tracing/instrument/trait.WithSubscriber.html#method.with_subscriber]
source [https://docs.rs/tracing/0.1.37/src/tracing/instrument.rs.html#221]¬ß

FN WITH_CURRENT_SUBSCRIBER
[https://docs.rs/tracing/0.1.37/tracing/instrument/trait.WithSubscriber.html#method.with_current_subscriber](SELF) -> WITHDISPATCH
[https://docs.rs/tracing/0.1.37/tracing/instrument/struct.WithDispatch.html]<SELF>

Attaches the current default [https://docs.rs/tracing/0.1.37/tracing/dispatcher/index.html#setting-the-default-subscriber]
Subscriber [https://docs.rs/tracing-core/0.1.22/tracing_core/subscriber/trait.Subscriber.html] to this type, returning a
WithDispatch [https://docs.rs/tracing/0.1.37/tracing/instrument/struct.WithDispatch.html] wrapper. Read more
[https://docs.rs/tracing/0.1.37/tracing/instrument/trait.WithSubscriber.html#method.with_current_subscriber]
¬ß


IMPL<W> WRITEBYTESEXT FOR WWHERE
¬†¬†¬†¬†W: WRITE [https://doc.rust-lang.org/1.67.0/std/io/trait.Write.html] + ?SIZED
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

¬ß

FN WRITE_U8(&MUT SELF, N: U8 [https://doc.rust-lang.org/1.67.0/std/primitive.u8.html]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>

Writes an unsigned 8 bit integer to the underlying writer. Read more
¬ß

FN WRITE_I8(&MUT SELF, N: I8 [https://doc.rust-lang.org/1.67.0/std/primitive.i8.html]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>

Writes a signed 8 bit integer to the underlying writer. Read more
¬ß

FN WRITE_U16<T>(&MUT SELF, N: U16 [https://doc.rust-lang.org/1.67.0/std/primitive.u16.html]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>WHERE
¬†¬†¬†¬†T: BYTEORDER,

Writes an unsigned 16 bit integer to the underlying writer. Read more
¬ß

FN WRITE_I16<T>(&MUT SELF, N: I16 [https://doc.rust-lang.org/1.67.0/std/primitive.i16.html]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>WHERE
¬†¬†¬†¬†T: BYTEORDER,

Writes a signed 16 bit integer to the underlying writer. Read more
¬ß

FN WRITE_U24<T>(&MUT SELF, N: U32 [https://doc.rust-lang.org/1.67.0/std/primitive.u32.html]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>WHERE
¬†¬†¬†¬†T: BYTEORDER,

Writes an unsigned 24 bit integer to the underlying writer. Read more
¬ß

FN WRITE_I24<T>(&MUT SELF, N: I32 [https://doc.rust-lang.org/1.67.0/std/primitive.i32.html]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>WHERE
¬†¬†¬†¬†T: BYTEORDER,

Writes a signed 24 bit integer to the underlying writer. Read more
¬ß

FN WRITE_U32<T>(&MUT SELF, N: U32 [https://doc.rust-lang.org/1.67.0/std/primitive.u32.html]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>WHERE
¬†¬†¬†¬†T: BYTEORDER,

Writes an unsigned 32 bit integer to the underlying writer. Read more
¬ß

FN WRITE_I32<T>(&MUT SELF, N: I32 [https://doc.rust-lang.org/1.67.0/std/primitive.i32.html]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>WHERE
¬†¬†¬†¬†T: BYTEORDER,

Writes a signed 32 bit integer to the underlying writer. Read more
¬ß

FN WRITE_U48<T>(&MUT SELF, N: U64 [https://doc.rust-lang.org/1.67.0/std/primitive.u64.html]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>WHERE
¬†¬†¬†¬†T: BYTEORDER,

Writes an unsigned 48 bit integer to the underlying writer. Read more
¬ß

FN WRITE_I48<T>(&MUT SELF, N: I64 [https://doc.rust-lang.org/1.67.0/std/primitive.i64.html]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>WHERE
¬†¬†¬†¬†T: BYTEORDER,

Writes a signed 48 bit integer to the underlying writer. Read more
¬ß

FN WRITE_U64<T>(&MUT SELF, N: U64 [https://doc.rust-lang.org/1.67.0/std/primitive.u64.html]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>WHERE
¬†¬†¬†¬†T: BYTEORDER,

Writes an unsigned 64 bit integer to the underlying writer. Read more
¬ß

FN WRITE_I64<T>(&MUT SELF, N: I64 [https://doc.rust-lang.org/1.67.0/std/primitive.i64.html]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>WHERE
¬†¬†¬†¬†T: BYTEORDER,

Writes a signed 64 bit integer to the underlying writer. Read more
¬ß

FN WRITE_U128<T>(&MUT SELF, N: U128 [https://doc.rust-lang.org/1.67.0/std/primitive.u128.html]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>WHERE
¬†¬†¬†¬†T: BYTEORDER,

Writes an unsigned 128 bit integer to the underlying writer.
¬ß

FN WRITE_I128<T>(&MUT SELF, N: I128 [https://doc.rust-lang.org/1.67.0/std/primitive.i128.html]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>WHERE
¬†¬†¬†¬†T: BYTEORDER,

Writes a signed 128 bit integer to the underlying writer.
¬ß

FN WRITE_UINT<T>(&MUT SELF, N: U64 [https://doc.rust-lang.org/1.67.0/std/primitive.u64.html], NBYTES: USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>WHERE
¬†¬†¬†¬†T: BYTEORDER,

Writes an unsigned n-bytes integer to the underlying writer. Read more
¬ß

FN WRITE_INT<T>(&MUT SELF, N: I64 [https://doc.rust-lang.org/1.67.0/std/primitive.i64.html], NBYTES: USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>WHERE
¬†¬†¬†¬†T: BYTEORDER,

Writes a signed n-bytes integer to the underlying writer. Read more
¬ß

FN WRITE_UINT128<T>(&MUT SELF, N: U128 [https://doc.rust-lang.org/1.67.0/std/primitive.u128.html], NBYTES: USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>WHERE
¬†¬†¬†¬†T: BYTEORDER,

Writes an unsigned n-bytes integer to the underlying writer. Read more
¬ß

FN WRITE_INT128<T>(&MUT SELF, N: I128 [https://doc.rust-lang.org/1.67.0/std/primitive.i128.html], NBYTES: USIZE
[https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>WHERE
¬†¬†¬†¬†T: BYTEORDER,

Writes a signed n-bytes integer to the underlying writer. Read more
¬ß

FN WRITE_F32<T>(&MUT SELF, N: F32 [https://doc.rust-lang.org/1.67.0/std/primitive.f32.html]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>WHERE
¬†¬†¬†¬†T: BYTEORDER,

Writes a IEEE754 single-precision (4 bytes) floating point number to the underlying writer. Read more
¬ß

FN WRITE_F64<T>(&MUT SELF, N: F64 [https://doc.rust-lang.org/1.67.0/std/primitive.f64.html]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>WHERE
¬†¬†¬†¬†T: BYTEORDER,

Writes a IEEE754 double-precision (8 bytes) floating point number to the underlying writer. Read more
¬ß


IMPL<W> WRITEEXT FOR WWHERE
¬†¬†¬†¬†W: WRITE [https://doc.rust-lang.org/1.67.0/std/io/trait.Write.html] + ?SIZED
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

¬ß

FN EMIT_U64(&MUT SELF, V: U64 [https://doc.rust-lang.org/1.67.0/std/primitive.u64.html]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>

Output a 64-bit uint
¬ß

FN EMIT_U32(&MUT SELF, V: U32 [https://doc.rust-lang.org/1.67.0/std/primitive.u32.html]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>

Output a 32-bit uint
¬ß

FN EMIT_U16(&MUT SELF, V: U16 [https://doc.rust-lang.org/1.67.0/std/primitive.u16.html]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>

Output a 16-bit uint
¬ß

FN EMIT_I64(&MUT SELF, V: I64 [https://doc.rust-lang.org/1.67.0/std/primitive.i64.html]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>

Output a 64-bit int
¬ß

FN EMIT_I32(&MUT SELF, V: I32 [https://doc.rust-lang.org/1.67.0/std/primitive.i32.html]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>

Output a 32-bit int
¬ß

FN EMIT_I16(&MUT SELF, V: I16 [https://doc.rust-lang.org/1.67.0/std/primitive.i16.html]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>

Output a 16-bit int
¬ß

FN EMIT_I8(&MUT SELF, V: I8 [https://doc.rust-lang.org/1.67.0/std/primitive.i8.html]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>

Output a 8-bit int
¬ß

FN EMIT_U8(&MUT SELF, V: U8 [https://doc.rust-lang.org/1.67.0/std/primitive.u8.html]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>

Output a 8-bit uint
¬ß

FN EMIT_BOOL(&MUT SELF, V: BOOL [https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>

Output a boolean
¬ß

FN EMIT_SLICE(&MUT SELF, V: &[U8 [https://doc.rust-lang.org/1.67.0/std/primitive.u8.html]]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>

Output a byte slice
¬ß


IMPL<W> WRITER FOR WWHERE
¬†¬†¬†¬†W: WRITE [https://doc.rust-lang.org/1.67.0/std/io/trait.Write.html],

¬ß

FN WRITE_ALL(&MUT SELF, BUF: &[U8 [https://doc.rust-lang.org/1.67.0/std/primitive.u8.html]]) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/std/io/error/struct.Error.html]>

Writes the given buf out. See std::io::Write::write_all for more
¬ß


IMPL<T> MAYBESEND [../task/trait.MaybeSend.html] FOR TWHERE
¬†¬†¬†¬†T: SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html],

¬ß


IMPL<T> MAYBESEND FOR TWHERE
¬†¬†¬†¬†T: SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html],

¬ß


IMPL<T> MAYBESYNC [../task/trait.MaybeSync.html] FOR TWHERE
¬†¬†¬†¬†T: SYNC [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html],

¬ß


IMPL<T> TWRITETRANSPORT FOR TWHERE
¬†¬†¬†¬†T: WRITE [https://doc.rust-lang.org/1.67.0/std/io/trait.Write.html],

