☰
logo [../../static.files/rust-logo-151179464ae7ed46.svg]
../../fedimint_ln_client/index.html




logo [../../static.files/rust-logo-151179464ae7ed46.svg]
../../fedimint_ln_client/index.html


LNFEDERATIONAPI


REQUIRED METHODS

 * fetch_consensus_block_height
 * fetch_contract
 * fetch_gateways
 * fetch_offer
 * get_incoming_contract
 * get_outgoing_contract
 * offer_exists
 * register_gateway


IMPLEMENTORS


IN FEDIMINT_LN_CLIENT::API [index.html]

? [../../help.html]
Change settings [../../static.files/wheel-5ec35bf9ca753509.svg]../../settings.html


TRAIT FEDIMINT_LN_CLIENT [../index.html]::API [index.html]::LNFEDERATIONAPICopy item path
[../../static.files/clipboard-7571035ce49a181d.svg]

[−]

pub trait LnFederationApi {
    fn fetch_consensus_block_height<'life0, 'async_trait>(
        &'life0 self
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Resulthttps://doc.rust-lang.org/1.67.0/core/result/enum.Result.html<Optionhttps://doc.rust-lang.org/1.67.0/core/option/enum.Option.html<u64https://doc.rust-lang.org/1.67.0/std/primitive.u64.html>, FederationError>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait, Globalhttps://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html>>
    where
        'life0: 'async_trait,
        Self: 'async_trait;
    fn fetch_contract<'life0, 'async_trait>(
        &'life0 self,
        contract: ContractId../contracts/struct.ContractId.html
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Resulthttps://doc.rust-lang.org/1.67.0/core/result/enum.Result.html<ContractAccount../struct.ContractAccount.html, FederationError>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait, Globalhttps://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html>>
    where
        'life0: 'async_trait,
        Self: 'async_trait;
    fn fetch_offer<'life0, 'async_trait>(
        &'life0 self,
        payment_hash: Hash
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Resulthttps://doc.rust-lang.org/1.67.0/core/result/enum.Result.html<IncomingContractOffer../contracts/incoming/struct.IncomingContractOffer.html, FederationError>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait, Globalhttps://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html>>
    where
        'life0: 'async_trait,
        Self: 'async_trait;
    fn fetch_gateways<'life0, 'async_trait>(
        &'life0 self
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Resulthttps://doc.rust-lang.org/1.67.0/core/result/enum.Result.html<Vechttps://doc.rust-lang.org/1.67.0/alloc/vec/struct.Vec.html<LightningGateway../struct.LightningGateway.html, Globalhttps://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html>, FederationError>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait, Globalhttps://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html>>
    where
        'life0: 'async_trait,
        Self: 'async_trait;
    fn register_gateway<'life0, 'life1, 'async_trait>(
        &'life0 self,
        gateway: &'life1 LightningGateway../struct.LightningGateway.html
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Resulthttps://doc.rust-lang.org/1.67.0/core/result/enum.Result.html<()https://doc.rust-lang.org/1.67.0/std/primitive.unit.html, FederationError>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait, Globalhttps://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html>>
    where
        'life0: 'async_trait,
        'life1: 'async_trait,
        Self: 'async_trait;
    fn offer_exists<'life0, 'async_trait>(
        &'life0 self,
        payment_hash: Hash
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Resulthttps://doc.rust-lang.org/1.67.0/core/result/enum.Result.html<boolhttps://doc.rust-lang.org/1.67.0/std/primitive.bool.html, FederationError>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait, Globalhttps://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html>>
    where
        'life0: 'async_trait,
        Self: 'async_trait;
    fn get_incoming_contract<'life0, 'async_trait>(
        &'life0 self,
        id: ContractId../contracts/struct.ContractId.html
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Resulthttps://doc.rust-lang.org/1.67.0/core/result/enum.Result.html<IncomingContractAccount../contracts/incoming/struct.IncomingContractAccount.html, Errorhttps://docs.rs/anyhow/1.0.71/anyhow/struct.Error.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait, Globalhttps://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html>>
    where
        'life0: 'async_trait,
        Self: 'async_trait;
    fn get_outgoing_contract<'life0, 'async_trait>(
        &'life0 self,
        id: ContractId../contracts/struct.ContractId.html
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Resulthttps://doc.rust-lang.org/1.67.0/core/result/enum.Result.html<OutgoingContractAccount../contracts/outgoing/struct.OutgoingContractAccount.html, Errorhttps://docs.rs/anyhow/1.0.71/anyhow/struct.Error.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait, Globalhttps://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html>>
    where
        'life0: 'async_trait,
        Self: 'async_trait;
}


REQUIRED METHODS§

FN FETCH_CONSENSUS_BLOCK_HEIGHT<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 SELF
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<U64 [https://doc.rust-lang.org/1.67.0/std/primitive.u64.html]>,
FEDERATIONERROR>> + SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT, GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>>WHERE
    'LIFE0: 'ASYNC_TRAIT,
    SELF: 'ASYNC_TRAIT,

FN FETCH_CONTRACT<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    CONTRACT: CONTRACTID [../contracts/struct.ContractId.html]
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<CONTRACTACCOUNT [../struct.ContractAccount.html],
FEDERATIONERROR>> + SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT, GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>>WHERE
    'LIFE0: 'ASYNC_TRAIT,
    SELF: 'ASYNC_TRAIT,

FN FETCH_OFFER<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    PAYMENT_HASH: HASH
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<INCOMINGCONTRACTOFFER
[../contracts/incoming/struct.IncomingContractOffer.html], FEDERATIONERROR>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT, GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>>WHERE
    'LIFE0: 'ASYNC_TRAIT,
    SELF: 'ASYNC_TRAIT,

FN FETCH_GATEWAYS<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 SELF
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<VEC
[https://doc.rust-lang.org/1.67.0/alloc/vec/struct.Vec.html]<LIGHTNINGGATEWAY [../struct.LightningGateway.html], GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>, FEDERATIONERROR>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT, GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>>WHERE
    'LIFE0: 'ASYNC_TRAIT,
    SELF: 'ASYNC_TRAIT,

FN REGISTER_GATEWAY<'LIFE0, 'LIFE1, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    GATEWAY: &'LIFE1 LIGHTNINGGATEWAY [../struct.LightningGateway.html]
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
FEDERATIONERROR>> + SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT, GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>>WHERE
    'LIFE0: 'ASYNC_TRAIT,
    'LIFE1: 'ASYNC_TRAIT,
    SELF: 'ASYNC_TRAIT,

FN OFFER_EXISTS<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    PAYMENT_HASH: HASH
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<BOOL [https://doc.rust-lang.org/1.67.0/std/primitive.bool.html],
FEDERATIONERROR>> + SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT, GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>>WHERE
    'LIFE0: 'ASYNC_TRAIT,
    SELF: 'ASYNC_TRAIT,

FN GET_INCOMING_CONTRACT<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    ID: CONTRACTID [../contracts/struct.ContractId.html]
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<INCOMINGCONTRACTACCOUNT
[../contracts/incoming/struct.IncomingContractAccount.html], ERROR [https://docs.rs/anyhow/1.0.71/anyhow/struct.Error.html]>> +
SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT, GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>>WHERE
    'LIFE0: 'ASYNC_TRAIT,
    SELF: 'ASYNC_TRAIT,

FN GET_OUTGOING_CONTRACT<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    ID: CONTRACTID [../contracts/struct.ContractId.html]
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<OUTGOINGCONTRACTACCOUNT
[../contracts/outgoing/struct.OutgoingContractAccount.html], ERROR [https://docs.rs/anyhow/1.0.71/anyhow/struct.Error.html]>> +
SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT, GLOBAL
[https://doc.rust-lang.org/1.67.0/alloc/alloc/struct.Global.html]>>WHERE
    'LIFE0: 'ASYNC_TRAIT,
    SELF: 'ASYNC_TRAIT,


IMPLEMENTORS§

§


IMPL<T> LNFEDERATIONAPI [trait.LnFederationApi.html] FOR TWHERE
    T: 'STATIC + IMODULEFEDERATIONAPI + MAYBESEND + MAYBESYNC + ?SIZED
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

