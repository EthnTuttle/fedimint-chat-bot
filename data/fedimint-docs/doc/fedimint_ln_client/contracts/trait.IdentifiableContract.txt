☰
logo [../../static.files/rust-logo-151179464ae7ed46.svg]
../../fedimint_ln_client/index.html




logo [../../static.files/rust-logo-151179464ae7ed46.svg]
../../fedimint_ln_client/index.html


IDENTIFIABLECONTRACT


REQUIRED METHODS

 * contract_id


IMPLEMENTORS


IN FEDIMINT_LN_CLIENT::CONTRACTS [index.html]

? [../../help.html]
Change settings [../../static.files/wheel-5ec35bf9ca753509.svg]../../settings.html


TRAIT FEDIMINT_LN_CLIENT [../index.html]::CONTRACTS [index.html]::IDENTIFIABLECONTRACTCopy item path
[../../static.files/clipboard-7571035ce49a181d.svg]

[−]

pub trait IdentifiableContract: Encodable {
    fn contract_id(&self) -> ContractIdstruct.ContractId.html;
}

Expand description

Anything representing a contract which thus has an associated ContractId [struct.ContractId.html]


REQUIRED METHODS§

FN CONTRACT_ID(&SELF) -> CONTRACTID [struct.ContractId.html]


IMPLEMENTORS§

§


IMPL IDENTIFIABLECONTRACT [trait.IdentifiableContract.html] FOR CONTRACT [enum.Contract.html]

§


IMPL IDENTIFIABLECONTRACT [trait.IdentifiableContract.html] FOR FUNDEDCONTRACT [enum.FundedContract.html]

§


IMPL IDENTIFIABLECONTRACT [trait.IdentifiableContract.html] FOR INCOMINGCONTRACT [incoming/struct.IncomingContract.html]

§


IMPL IDENTIFIABLECONTRACT [trait.IdentifiableContract.html] FOR OUTGOINGCONTRACT [outgoing/struct.OutgoingContract.html]

