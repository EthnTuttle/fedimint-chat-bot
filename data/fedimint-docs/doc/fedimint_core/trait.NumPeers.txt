☰
logo [../static.files/rust-logo-151179464ae7ed46.svg]
../fedimint_core/index.html




logo [../static.files/rust-logo-151179464ae7ed46.svg]
../fedimint_core/index.html


NUMPEERS


REQUIRED METHODS

 * total


PROVIDED METHODS

 * degree
 * max_evil
 * one_honest
 * threshold


IMPLEMENTATIONS ON FOREIGN TYPES

 * &[PeerId]
 * BTreeMap<PeerId, T>
 * BTreeSet<PeerId>
 * Vec<PeerId>
 * Vec<PeerUrl>


IMPLEMENTORS


IN FEDIMINT_CORE [index.html]

? [../help.html]
Change settings [../static.files/wheel-5ec35bf9ca753509.svg]../settings.html


TRAIT FEDIMINT_CORE [index.html]::NUMPEERSCopy item path [../static.files/clipboard-7571035ce49a181d.svg]

source [../src/fedimint_core/lib.rs.html#200-223] · [−]

pub trait NumPeers {
    fn total(&self) -> usizehttps://doc.rust-lang.org/1.67.0/std/primitive.usize.html;

    fn max_evil(&self) -> usizehttps://doc.rust-lang.org/1.67.0/std/primitive.usize.html { ... }
    fn one_honest(&self) -> usizehttps://doc.rust-lang.org/1.67.0/std/primitive.usize.html { ... }
    fn degree(&self) -> usizehttps://doc.rust-lang.org/1.67.0/std/primitive.usize.html { ... }
    fn threshold(&self) -> usizehttps://doc.rust-lang.org/1.67.0/std/primitive.usize.html { ... }
}

Expand description

for consensus-related calculations given the number of peers


REQUIRED METHODS§

source [../src/fedimint_core/lib.rs.html#201]

FN TOTAL(&SELF) -> USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]


PROVIDED METHODS§

source [../src/fedimint_core/lib.rs.html#204-206]

FN MAX_EVIL(&SELF) -> USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]

number of peers that can be evil without disrupting the federation

source [../src/fedimint_core/lib.rs.html#210-212]

FN ONE_HONEST(&SELF) -> USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]

number of peers to select such that one is honest (under our assumptions)

source [../src/fedimint_core/lib.rs.html#215-217]

FN DEGREE(&SELF) -> USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]

Degree of a underlying polynomial to require threshold signatures

source [../src/fedimint_core/lib.rs.html#220-222]

FN THRESHOLD(&SELF) -> USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]

number of peers required for a signature


IMPLEMENTATIONS ON FOREIGN TYPES§

source [../src/fedimint_core/lib.rs.html#169-173]§


IMPL<T> NUMPEERS [trait.NumPeers.html] FOR BTREEMAP
[https://doc.rust-lang.org/1.67.0/alloc/collections/btree/map/struct.BTreeMap.html]<PEERID [struct.PeerId.html], T>

source [../src/fedimint_core/lib.rs.html#170-172]§

FN TOTAL(&SELF) -> USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]

source [../src/fedimint_core/lib.rs.html#175-179]§


IMPL NUMPEERS [trait.NumPeers.html] FOR &[PEERID [struct.PeerId.html]]

source [../src/fedimint_core/lib.rs.html#176-178]§

FN TOTAL(&SELF) -> USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]

source [../src/fedimint_core/lib.rs.html#181-185]§


IMPL NUMPEERS [trait.NumPeers.html] FOR VEC [https://doc.rust-lang.org/1.67.0/alloc/vec/struct.Vec.html]<PEERID
[struct.PeerId.html]>

source [../src/fedimint_core/lib.rs.html#182-184]§

FN TOTAL(&SELF) -> USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]

source [../src/fedimint_core/lib.rs.html#187-191]§


IMPL NUMPEERS [trait.NumPeers.html] FOR VEC [https://doc.rust-lang.org/1.67.0/alloc/vec/struct.Vec.html]<PEERURL
[config/struct.PeerUrl.html]>

source [../src/fedimint_core/lib.rs.html#188-190]§

FN TOTAL(&SELF) -> USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]

source [../src/fedimint_core/lib.rs.html#193-197]§


IMPL NUMPEERS [trait.NumPeers.html] FOR BTREESET
[https://doc.rust-lang.org/1.67.0/alloc/collections/btree/set/struct.BTreeSet.html]<PEERID [struct.PeerId.html]>

source [../src/fedimint_core/lib.rs.html#194-196]§

FN TOTAL(&SELF) -> USIZE [https://doc.rust-lang.org/1.67.0/std/primitive.usize.html]


IMPLEMENTORS§


