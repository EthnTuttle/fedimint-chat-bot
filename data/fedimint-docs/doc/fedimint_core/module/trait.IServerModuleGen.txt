☰
logo [../../static.files/rust-logo-151179464ae7ed46.svg]
../../fedimint_core/index.html




logo [../../static.files/rust-logo-151179464ae7ed46.svg]
../../fedimint_core/index.html


ISERVERMODULEGEN


REQUIRED METHODS

 * as_common
 * database_version
 * distributed_gen
 * dump_database
 * get_client_config
 * get_database_migrations
 * init
 * supported_api_versions
 * trusted_dealer_gen
 * validate_config
 * validate_params


IMPLEMENTORS


IN FEDIMINT_CORE::MODULE [index.html]

? [../../help.html]
Change settings [../../static.files/wheel-5ec35bf9ca753509.svg]../../settings.html


TRAIT FEDIMINT_CORE [../index.html]::MODULE [index.html]::ISERVERMODULEGENCopy item path
[../../static.files/clipboard-7571035ce49a181d.svg]

source [../../src/fedimint_core/module/mod.rs.html#446-493] · [−]

pub trait IServerModuleGen: IDynCommonModuleGentrait.IDynCommonModuleGen.html {
    fn as_common(&self) -> &(dyn IDynCommonModuleGentrait.IDynCommonModuleGen.html + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + Synchttps://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html + 'static);
    fn supported_api_versions(&self) -> SupportedModuleApiVersionsversion/struct.SupportedModuleApiVersions.html;
    fn database_version(&self) -> DatabaseVersion../db/struct.DatabaseVersion.html;
    fn init<'life0, 'life1, 'async_trait>(
        &'life0 self,
        cfg: ServerModuleConfig../config/struct.ServerModuleConfig.html,
        db: Database../db/struct.Database.html,
        task_group: &'life1 mut TaskGroup../task/struct.TaskGroup.html
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Resulthttps://docs.rs/anyhow/1.0.71/anyhow/type.Result.html<DynServerModule../core/server/struct.DynServerModule.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait,
        'life1: 'async_trait;
    fn get_database_migrations(&self) -> MigrationMap../db/type.MigrationMap.html<'_>;
    fn validate_params(&self, params: &ConfigGenModuleParams../config/struct.ConfigGenModuleParams.html) -> Resulthttps://docs.rs/anyhow/1.0.71/anyhow/type.Result.html<()https://doc.rust-lang.org/1.67.0/std/primitive.unit.html>;
    fn trusted_dealer_gen(
        &self,
        peers: &[PeerId../struct.PeerId.html],
        params: &ConfigGenModuleParams../config/struct.ConfigGenModuleParams.html
    ) -> BTreeMaphttps://doc.rust-lang.org/1.67.0/alloc/collections/btree/map/struct.BTreeMap.html<PeerId../struct.PeerId.html, ServerModuleConfig../config/struct.ServerModuleConfig.html>;
    fn distributed_gen<'life0, 'life1, 'life2, 'async_trait>(
        &'life0 self,
        peers: &'life1 PeerHandlestruct.PeerHandle.html<'_>,
        params: &'life2 ConfigGenModuleParams../config/struct.ConfigGenModuleParams.html
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = DkgResult../config/type.DkgResult.html<ServerModuleConfig../config/struct.ServerModuleConfig.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait,
        'life1: 'async_trait,
        'life2: 'async_trait;
    fn validate_config(
        &self,
        identity: &PeerId../struct.PeerId.html,
        config: ServerModuleConfig../config/struct.ServerModuleConfig.html
    ) -> Resulthttps://docs.rs/anyhow/1.0.71/anyhow/type.Result.html<()https://doc.rust-lang.org/1.67.0/std/primitive.unit.html>;
    fn get_client_config(
        &self,
        module_instance_id: ModuleInstanceId../core/type.ModuleInstanceId.html,
        config: &ServerModuleConsensusConfig../config/struct.ServerModuleConsensusConfig.html
    ) -> Resulthttps://docs.rs/anyhow/1.0.71/anyhow/type.Result.html<ClientModuleConfig../config/struct.ClientModuleConfig.html>;
    fn dump_database<'life0, 'life1, 'life2, 'async_trait>(
        &'life0 self,
        dbtx: &'life1 mut ModuleDatabaseTransaction../db/struct.ModuleDatabaseTransaction.html<'life2>,
        prefix_names: Vechttps://doc.rust-lang.org/1.67.0/alloc/vec/struct.Vec.html<Stringhttps://doc.rust-lang.org/1.67.0/alloc/string/struct.String.html>
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Iteratorhttps://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html<Item = (Stringhttps://doc.rust-lang.org/1.67.0/alloc/string/struct.String.html, Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Serializehttps://docs.rs/erased-serde/0.3.25/erased_serde/ser/trait.Serialize.html + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html>)> + '_>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait,
        'life1: 'async_trait,
        'life2: 'async_trait;
}

Expand description

Interface for Module Generation

This trait contains the methods responsible for the module’s

 * initialization
 * config generation
 * config validation

Once the module configuration is ready, the module can be instantiated via [Self::init].


REQUIRED METHODS§

source [../../src/fedimint_core/module/mod.rs.html#447]

FN AS_COMMON(&SELF) -> &(DYN IDYNCOMMONMODULEGEN [trait.IDynCommonModuleGen.html] + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + SYNC
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html] + 'STATIC)

source [../../src/fedimint_core/module/mod.rs.html#449]

FN SUPPORTED_API_VERSIONS(&SELF) -> SUPPORTEDMODULEAPIVERSIONS [version/struct.SupportedModuleApiVersions.html]

source [../../src/fedimint_core/module/mod.rs.html#451]

FN DATABASE_VERSION(&SELF) -> DATABASEVERSION [../db/struct.DatabaseVersion.html]

source [../../src/fedimint_core/module/mod.rs.html#454-459]

FN INIT<'LIFE0, 'LIFE1, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    CFG: SERVERMODULECONFIG [../config/struct.ServerModuleConfig.html],
    DB: DATABASE [../db/struct.Database.html],
    TASK_GROUP: &'LIFE1 MUT TASKGROUP [../task/struct.TaskGroup.html]
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://docs.rs/anyhow/1.0.71/anyhow/type.Result.html]<DYNSERVERMODULE [../core/server/struct.DynServerModule.html]>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,
    'LIFE1: 'ASYNC_TRAIT,

Initialize the DynServerModule [../core/server/struct.DynServerModule.html] instance from its config

source [../../src/fedimint_core/module/mod.rs.html#464]

FN GET_DATABASE_MIGRATIONS(&SELF) -> MIGRATIONMAP [../db/type.MigrationMap.html]<'_>

Retrieves the MigrationMap from the module to be applied to the database before the module is initialized. The MigrationMap is
indexed on the from version.

source [../../src/fedimint_core/module/mod.rs.html#466]

FN VALIDATE_PARAMS(&SELF, PARAMS: &CONFIGGENMODULEPARAMS [../config/struct.ConfigGenModuleParams.html]) -> RESULT
[https://docs.rs/anyhow/1.0.71/anyhow/type.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html]>

source [../../src/fedimint_core/module/mod.rs.html#468-472]

FN TRUSTED_DEALER_GEN(
    &SELF,
    PEERS: &[PEERID [../struct.PeerId.html]],
    PARAMS: &CONFIGGENMODULEPARAMS [../config/struct.ConfigGenModuleParams.html]
) -> BTREEMAP [https://doc.rust-lang.org/1.67.0/alloc/collections/btree/map/struct.BTreeMap.html]<PEERID [../struct.PeerId.html],
SERVERMODULECONFIG [../config/struct.ServerModuleConfig.html]>

source [../../src/fedimint_core/module/mod.rs.html#474-478]

FN DISTRIBUTED_GEN<'LIFE0, 'LIFE1, 'LIFE2, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    PEERS: &'LIFE1 PEERHANDLE [struct.PeerHandle.html]<'_>,
    PARAMS: &'LIFE2 CONFIGGENMODULEPARAMS [../config/struct.ConfigGenModuleParams.html]
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = DKGRESULT
[../config/type.DkgResult.html]<SERVERMODULECONFIG [../config/struct.ServerModuleConfig.html]>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,
    'LIFE1: 'ASYNC_TRAIT,
    'LIFE2: 'ASYNC_TRAIT,

source [../../src/fedimint_core/module/mod.rs.html#480]

FN VALIDATE_CONFIG(
    &SELF,
    IDENTITY: &PEERID [../struct.PeerId.html],
    CONFIG: SERVERMODULECONFIG [../config/struct.ServerModuleConfig.html]
) -> RESULT [https://docs.rs/anyhow/1.0.71/anyhow/type.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html]>

source [../../src/fedimint_core/module/mod.rs.html#482-486]

FN GET_CLIENT_CONFIG(
    &SELF,
    MODULE_INSTANCE_ID: MODULEINSTANCEID [../core/type.ModuleInstanceId.html],
    CONFIG: &SERVERMODULECONSENSUSCONFIG [../config/struct.ServerModuleConsensusConfig.html]
) -> RESULT [https://docs.rs/anyhow/1.0.71/anyhow/type.Result.html]<CLIENTMODULECONFIG [../config/struct.ClientModuleConfig.html]>

source [../../src/fedimint_core/module/mod.rs.html#488-492]

FN DUMP_DATABASE<'LIFE0, 'LIFE1, 'LIFE2, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    DBTX: &'LIFE1 MUT MODULEDATABASETRANSACTION [../db/struct.ModuleDatabaseTransaction.html]<'LIFE2>,
    PREFIX_NAMES: VEC [https://doc.rust-lang.org/1.67.0/alloc/vec/struct.Vec.html]<STRING
[https://doc.rust-lang.org/1.67.0/alloc/string/struct.String.html]>
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN ITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html]<ITEM = (STRING
[https://doc.rust-lang.org/1.67.0/alloc/string/struct.String.html], BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN SERIALIZE
[https://docs.rs/erased-serde/0.3.25/erased_serde/ser/trait.Serialize.html] + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html]>)> + '_>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,
    'LIFE1: 'ASYNC_TRAIT,
    'LIFE2: 'ASYNC_TRAIT,


IMPLEMENTORS§

source [../../src/fedimint_core/module/mod.rs.html#616-690]§


IMPL<T> ISERVERMODULEGEN [trait.IServerModuleGen.html] FOR TWHERE
    T: SERVERMODULEGEN [trait.ServerModuleGen.html] + 'STATIC + SYNC
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html],

