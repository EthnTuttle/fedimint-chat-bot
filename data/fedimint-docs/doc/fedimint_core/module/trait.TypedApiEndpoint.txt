☰
logo [../../static.files/rust-logo-151179464ae7ed46.svg]
../../fedimint_core/index.html




logo [../../static.files/rust-logo-151179464ae7ed46.svg]
../../fedimint_core/index.html


TYPEDAPIENDPOINT


REQUIRED ASSOCIATED TYPES

 * Param
 * Response
 * State


REQUIRED ASSOCIATED CONSTANTS

 * PATH


REQUIRED METHODS

 * handle


IMPLEMENTORS


IN FEDIMINT_CORE::MODULE [index.html]

? [../../help.html]
Change settings [../../static.files/wheel-5ec35bf9ca753509.svg]../../settings.html


TRAIT FEDIMINT_CORE [../index.html]::MODULE [index.html]::TYPEDAPIENDPOINTCopy item path
[../../static.files/clipboard-7571035ce49a181d.svg]

source [../../src/fedimint_core/module/mod.rs.html#230-244] · [−]

pub trait TypedApiEndpoint {
    type State: Synchttps://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html;
    type Param: DeserializeOwnedhttps://docs.rs/serde/1.0.163/serde/de/trait.DeserializeOwned.html + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html;
    type Response: Serializehttps://docs.rs/serde/1.0.163/serde/ser/trait.Serialize.html;

    const PATH: &'static strhttps://doc.rust-lang.org/1.67.0/std/primitive.str.html;

    fn handle<'a, 'b, 'async_trait>(
        state: &'a Self::Statetrait.TypedApiEndpoint.html#associatedtype.State,
        context: &'a mut ApiEndpointContextstruct.ApiEndpointContext.html<'b>,
        request: Self::Paramtrait.TypedApiEndpoint.html#associatedtype.Param
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Resulthttps://doc.rust-lang.org/1.67.0/core/result/enum.Result.html<Self::Responsetrait.TypedApiEndpoint.html#associatedtype.Response, ApiErrorstruct.ApiError.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'a: 'async_trait,
        'b: 'async_trait;
}


REQUIRED ASSOCIATED TYPES§

source [../../src/fedimint_core/module/mod.rs.html#231]

TYPE STATE: SYNC [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html]

source [../../src/fedimint_core/module/mod.rs.html#236]

TYPE PARAM: DESERIALIZEOWNED [https://docs.rs/serde/1.0.163/serde/de/trait.DeserializeOwned.html] + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html]

source [../../src/fedimint_core/module/mod.rs.html#237]

TYPE RESPONSE: SERIALIZE [https://docs.rs/serde/1.0.163/serde/ser/trait.Serialize.html]


REQUIRED ASSOCIATED CONSTANTS§

source [../../src/fedimint_core/module/mod.rs.html#234]

CONST PATH: &'STATIC STR [https://doc.rust-lang.org/1.67.0/std/primitive.str.html]

example: /transaction


REQUIRED METHODS§

source [../../src/fedimint_core/module/mod.rs.html#239-243]

FN HANDLE<'A, 'B, 'ASYNC_TRAIT>(
    STATE: &'A SELF::STATE [trait.TypedApiEndpoint.html#associatedtype.State],
    CONTEXT: &'A MUT APIENDPOINTCONTEXT [struct.ApiEndpointContext.html]<'B>,
    REQUEST: SELF::PARAM [trait.TypedApiEndpoint.html#associatedtype.Param]
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<SELF::RESPONSE
[trait.TypedApiEndpoint.html#associatedtype.Response], APIERROR [struct.ApiError.html]>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'A: 'ASYNC_TRAIT,
    'B: 'ASYNC_TRAIT,


IMPLEMENTORS§


