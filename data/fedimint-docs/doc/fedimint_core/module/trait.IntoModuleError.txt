☰
logo [../../static.files/rust-logo-151179464ae7ed46.svg]
../../fedimint_core/index.html




logo [../../static.files/rust-logo-151179464ae7ed46.svg]
../../fedimint_core/index.html


INTOMODULEERROR


REQUIRED ASSOCIATED TYPES

 * Target


REQUIRED METHODS

 * into_module_error_other


IMPLEMENTATIONS ON FOREIGN TYPES

 * Result<O, E>


IMPLEMENTORS


IN FEDIMINT_CORE::MODULE [index.html]

? [../../help.html]
Change settings [../../static.files/wheel-5ec35bf9ca753509.svg]../../settings.html


TRAIT FEDIMINT_CORE [../index.html]::MODULE [index.html]::INTOMODULEERRORCopy item path
[../../static.files/clipboard-7571035ce49a181d.svg]

source [../../src/fedimint_core/module/mod.rs.html#385-388] · [−]

pub trait IntoModuleError {
    type Target;

    fn into_module_error_other(self) -> Self::Targettrait.IntoModuleError.html#associatedtype.Target;
}

Expand description

Extension trait with a function to map Results used by modules to ModuleError

Currently each module defined it’s own enum XyzError { ... } and is not using anyhow::Error. For ? to work seamlessly two
conversion would have to be made: enum-Error -> anyhow::Error -> enum-Error, while Into/From can only do one.

To avoid the boilerplate, this trait defines an easy conversion method.


REQUIRED ASSOCIATED TYPES§

source [../../src/fedimint_core/module/mod.rs.html#386]

TYPE TARGET


REQUIRED METHODS§

source [../../src/fedimint_core/module/mod.rs.html#387]

FN INTO_MODULE_ERROR_OTHER(SELF) -> SELF::TARGET [trait.IntoModuleError.html#associatedtype.Target]


IMPLEMENTATIONS ON FOREIGN TYPES§

source [../../src/fedimint_core/module/mod.rs.html#390-399]§


IMPL<O, E> INTOMODULEERROR [trait.IntoModuleError.html] FOR RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<O, E>WHERE
    E: ERROR [https://doc.rust-lang.org/1.67.0/core/error/trait.Error.html] + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + SYNC
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html] + 'STATIC,

§

TYPE TARGET = RESULT [https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<O, MODULEERROR [enum.ModuleError.html]>

source [../../src/fedimint_core/module/mod.rs.html#396-398]§

FN INTO_MODULE_ERROR_OTHER(SELF) -> SELF::TARGET [trait.IntoModuleError.html#associatedtype.Target]


IMPLEMENTORS§


