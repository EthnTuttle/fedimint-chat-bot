☰
logo [../../static.files/rust-logo-151179464ae7ed46.svg]
../../fedimint_core/index.html




logo [../../static.files/rust-logo-151179464ae7ed46.svg]
../../fedimint_core/index.html


GLOBALFEDERATIONAPI


REQUIRED METHODS

 * await_output_outcome
 * await_tx_outcome
 * consensus_config_hash
 * discover_api_version_set
 * download_backup
 * download_client_config
 * fetch_epoch_count
 * fetch_epoch_history
 * fetch_output_outcome
 * fetch_tx_outcome
 * submit_transaction
 * upload_backup


IMPLEMENTORS


IN FEDIMINT_CORE::API [index.html]

? [../../help.html]
Change settings [../../static.files/wheel-5ec35bf9ca753509.svg]../../settings.html


TRAIT FEDIMINT_CORE [../index.html]::API [index.html]::GLOBALFEDERATIONAPICopy item path
[../../static.files/clipboard-7571035ce49a181d.svg]

source [../../src/fedimint_core/api.rs.html#365-420] · [−]

pub trait GlobalFederationApi {
    fn submit_transaction<'life0, 'async_trait>(
        &'life0 self,
        tx: Transaction../transaction/struct.Transaction.html
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = FederationResulttype.FederationResult.html<TransactionId../struct.TransactionId.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait;
    fn fetch_tx_outcome<'life0, 'life1, 'async_trait>(
        &'life0 self,
        txid: &'life1 TransactionId../struct.TransactionId.html
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = FederationResulttype.FederationResult.html<Optionhttps://doc.rust-lang.org/1.67.0/core/option/enum.Option.html<TransactionStatus../outcome/enum.TransactionStatus.html>>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait,
        'life1: 'async_trait;
    fn await_tx_outcome<'life0, 'life1, 'async_trait>(
        &'life0 self,
        txid: &'life1 TransactionId../struct.TransactionId.html
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = FederationResulttype.FederationResult.html<TransactionStatus../outcome/enum.TransactionStatus.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait,
        'life1: 'async_trait;
    fn fetch_epoch_history<'life0, 'life1, 'async_trait>(
        &'life0 self,
        epoch: u64https://doc.rust-lang.org/1.67.0/std/primitive.u64.html,
        epoch_pk: PublicKey,
        decoders: &'life1 ModuleDecoderRegistry../module/registry/type.ModuleDecoderRegistry.html
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = FederationResulttype.FederationResult.html<SignedEpochOutcome../epoch/struct.SignedEpochOutcome.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait,
        'life1: 'async_trait;
    fn fetch_epoch_count<'life0, 'async_trait>(
        &'life0 self
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = FederationResulttype.FederationResult.html<u64https://doc.rust-lang.org/1.67.0/std/primitive.u64.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait;
    fn fetch_output_outcome<'life0, 'life1, 'async_trait, R>(
        &'life0 self,
        out_point: OutPoint../struct.OutPoint.html,
        module_decoder: &'life1 Decoder../core/struct.Decoder.html
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Resulthttps://doc.rust-lang.org/1.67.0/core/result/enum.Result.html<Optionhttps://doc.rust-lang.org/1.67.0/core/option/enum.Option.html<R>, OutputOutcomeErrorenum.OutputOutcomeError.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        R: OutputOutcome../core/trait.OutputOutcome.html + 'async_trait,
        Self: 'async_trait,
        'life0: 'async_trait,
        'life1: 'async_trait;
    fn await_output_outcome<'life0, 'life1, 'async_trait, R>(
        &'life0 self,
        outpoint: OutPoint../struct.OutPoint.html,
        timeout: Durationhttps://doc.rust-lang.org/1.67.0/core/time/struct.Duration.html,
        module_decoder: &'life1 Decoder../core/struct.Decoder.html
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Resulthttps://doc.rust-lang.org/1.67.0/core/result/enum.Result.html<R, OutputOutcomeErrorenum.OutputOutcomeError.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        R: OutputOutcome../core/trait.OutputOutcome.html + 'async_trait,
        Self: 'async_trait,
        'life0: 'async_trait,
        'life1: 'async_trait;
    fn download_client_config<'life0, 'life1, 'async_trait>(
        &'life0 self,
        info: &'life1 WsClientConnectInfostruct.WsClientConnectInfo.html
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = FederationResulttype.FederationResult.html<ClientConfig../config/struct.ClientConfig.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait,
        'life1: 'async_trait;
    fn consensus_config_hash<'life0, 'async_trait>(
        &'life0 self
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = FederationResulttype.FederationResult.html<Hash>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait;
    fn upload_backup<'life0, 'life1, 'async_trait>(
        &'life0 self,
        request: &'life1 SignedBackupRequest../core/backup/struct.SignedBackupRequest.html
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = FederationResulttype.FederationResult.html<()https://doc.rust-lang.org/1.67.0/std/primitive.unit.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait,
        'life1: 'async_trait;
    fn download_backup<'life0, 'life1, 'async_trait>(
        &'life0 self,
        id: &'life1 XOnlyPublicKey
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = FederationResulttype.FederationResult.html<Vechttps://doc.rust-lang.org/1.67.0/alloc/vec/struct.Vec.html<ClientBackupSnapshot../backup/struct.ClientBackupSnapshot.html>>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait,
        'life1: 'async_trait;
    fn discover_api_version_set<'life0, 'life1, 'async_trait>(
        &'life0 self,
        client_versions: &'life1 SupportedApiVersionsSummary../module/version/struct.SupportedApiVersionsSummary.html
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = FederationResulttype.FederationResult.html<ApiVersionSetstruct.ApiVersionSet.html>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait,
        'life1: 'async_trait;
}

Expand description

The API for the global (non-module) endpoints


REQUIRED METHODS§

source [../../src/fedimint_core/api.rs.html#366]

FN SUBMIT_TRANSACTION<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    TX: TRANSACTION [../transaction/struct.Transaction.html]
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = FEDERATIONRESULT
[type.FederationResult.html]<TRANSACTIONID [../struct.TransactionId.html]>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,

source [../../src/fedimint_core/api.rs.html#367-370]

FN FETCH_TX_OUTCOME<'LIFE0, 'LIFE1, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    TXID: &'LIFE1 TRANSACTIONID [../struct.TransactionId.html]
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = FEDERATIONRESULT
[type.FederationResult.html]<OPTION [https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<TRANSACTIONSTATUS
[../outcome/enum.TransactionStatus.html]>>> + SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] +
'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,
    'LIFE1: 'ASYNC_TRAIT,

source [../../src/fedimint_core/api.rs.html#371]

FN AWAIT_TX_OUTCOME<'LIFE0, 'LIFE1, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    TXID: &'LIFE1 TRANSACTIONID [../struct.TransactionId.html]
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = FEDERATIONRESULT
[type.FederationResult.html]<TRANSACTIONSTATUS [../outcome/enum.TransactionStatus.html]>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,
    'LIFE1: 'ASYNC_TRAIT,

source [../../src/fedimint_core/api.rs.html#373-378]

FN FETCH_EPOCH_HISTORY<'LIFE0, 'LIFE1, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    EPOCH: U64 [https://doc.rust-lang.org/1.67.0/std/primitive.u64.html],
    EPOCH_PK: PUBLICKEY,
    DECODERS: &'LIFE1 MODULEDECODERREGISTRY [../module/registry/type.ModuleDecoderRegistry.html]
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = FEDERATIONRESULT
[type.FederationResult.html]<SIGNEDEPOCHOUTCOME [../epoch/struct.SignedEpochOutcome.html]>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,
    'LIFE1: 'ASYNC_TRAIT,

source [../../src/fedimint_core/api.rs.html#380]

FN FETCH_EPOCH_COUNT<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 SELF
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = FEDERATIONRESULT [type.FederationResult.html]<U64
[https://doc.rust-lang.org/1.67.0/std/primitive.u64.html]>> + SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html]
+ 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,

source [../../src/fedimint_core/api.rs.html#382-388]

FN FETCH_OUTPUT_OUTCOME<'LIFE0, 'LIFE1, 'ASYNC_TRAIT, R>(
    &'LIFE0 SELF,
    OUT_POINT: OUTPOINT [../struct.OutPoint.html],
    MODULE_DECODER: &'LIFE1 DECODER [../core/struct.Decoder.html]
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<R>, OUTPUTOUTCOMEERROR [enum.OutputOutcomeError.html]>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    R: OUTPUTOUTCOME [../core/trait.OutputOutcome.html] + 'ASYNC_TRAIT,
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,
    'LIFE1: 'ASYNC_TRAIT,

source [../../src/fedimint_core/api.rs.html#390-397]

FN AWAIT_OUTPUT_OUTCOME<'LIFE0, 'LIFE1, 'ASYNC_TRAIT, R>(
    &'LIFE0 SELF,
    OUTPOINT: OUTPOINT [../struct.OutPoint.html],
    TIMEOUT: DURATION [https://doc.rust-lang.org/1.67.0/core/time/struct.Duration.html],
    MODULE_DECODER: &'LIFE1 DECODER [../core/struct.Decoder.html]
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<R, OUTPUTOUTCOMEERROR [enum.OutputOutcomeError.html]>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    R: OUTPUTOUTCOME [../core/trait.OutputOutcome.html] + 'ASYNC_TRAIT,
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,
    'LIFE1: 'ASYNC_TRAIT,

source [../../src/fedimint_core/api.rs.html#400-403]

FN DOWNLOAD_CLIENT_CONFIG<'LIFE0, 'LIFE1, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    INFO: &'LIFE1 WSCLIENTCONNECTINFO [struct.WsClientConnectInfo.html]
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = FEDERATIONRESULT
[type.FederationResult.html]<CLIENTCONFIG [../config/struct.ClientConfig.html]>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,
    'LIFE1: 'ASYNC_TRAIT,

Fetch client configuration info only if verified against a federation id

source [../../src/fedimint_core/api.rs.html#406]

FN CONSENSUS_CONFIG_HASH<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 SELF
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = FEDERATIONRESULT
[type.FederationResult.html]<HASH>> + SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,

Fetches the server consensus hash if enough peers agree on it

source [../../src/fedimint_core/api.rs.html#408]

FN UPLOAD_BACKUP<'LIFE0, 'LIFE1, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    REQUEST: &'LIFE1 SIGNEDBACKUPREQUEST [../core/backup/struct.SignedBackupRequest.html]
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = FEDERATIONRESULT [type.FederationResult.html]<()
[https://doc.rust-lang.org/1.67.0/std/primitive.unit.html]>> + SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html]
+ 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,
    'LIFE1: 'ASYNC_TRAIT,

source [../../src/fedimint_core/api.rs.html#410-413]

FN DOWNLOAD_BACKUP<'LIFE0, 'LIFE1, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    ID: &'LIFE1 XONLYPUBLICKEY
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = FEDERATIONRESULT [type.FederationResult.html]<VEC
[https://doc.rust-lang.org/1.67.0/alloc/vec/struct.Vec.html]<CLIENTBACKUPSNAPSHOT [../backup/struct.ClientBackupSnapshot.html]>>>
+ SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,
    'LIFE1: 'ASYNC_TRAIT,

source [../../src/fedimint_core/api.rs.html#416-419]

FN DISCOVER_API_VERSION_SET<'LIFE0, 'LIFE1, 'ASYNC_TRAIT>(
    &'LIFE0 SELF,
    CLIENT_VERSIONS: &'LIFE1 SUPPORTEDAPIVERSIONSSUMMARY [../module/version/struct.SupportedApiVersionsSummary.html]
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = FEDERATIONRESULT
[type.FederationResult.html]<APIVERSIONSET [struct.ApiVersionSet.html]>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,
    'LIFE1: 'ASYNC_TRAIT,

Query peers and calculate optimal common api versions to use.


IMPLEMENTORS§

source [../../src/fedimint_core/api.rs.html#459-652]§


IMPL<T> GLOBALFEDERATIONAPI [trait.GlobalFederationApi.html] FOR TWHERE
    T: IGLOBALFEDERATIONAPI [trait.IGlobalFederationApi.html] + MAYBESEND [../task/trait.MaybeSend.html] + MAYBESYNC
[../task/trait.MaybeSync.html] + 'STATIC + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

