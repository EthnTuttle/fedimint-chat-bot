☰
logo [../static.files/rust-logo-151179464ae7ed46.svg]
../fedimint_core/index.html




logo [../static.files/rust-logo-151179464ae7ed46.svg]
../fedimint_core/index.html


IN FEDIMINT_CORE [index.html]

? [../help.html]
Change settings [../static.files/wheel-5ec35bf9ca753509.svg]../settings.html


MACRO FEDIMINT_CORE [index.html]::MODULE_PLUGIN_TRAIT_DEFINECopy item path [../static.files/clipboard-7571035ce49a181d.svg]

source [../src/fedimint_core/core.rs.html#157-198] · [−]

macro_rules! module_plugin_trait_define {
    (   $(#[$outer:meta])*
        $newtype_ty:ident, $plugin_ty:ident, $module_ty:ident, { $($extra_methods:tt)*  } { $($extra_impls:tt)* }
    ) => { ... };
}

Expand description

Define a “plugin” trait

“Plugin trait” is a trait that a developer of a mint module needs to implement when implementing mint module. It uses associated
types with trait bonds to guide the developer.

Blanket implementations are used to convert the “plugin trait”, incompatible with dyn Trait into “module types” and corresponding
“module dyn newtypes”, erasing the exact type and used in a common Fedimint code.

