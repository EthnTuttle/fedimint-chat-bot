☰
logo [../../static.files/rust-logo-151179464ae7ed46.svg]
../../fedimint_core/index.html




logo [../../static.files/rust-logo-151179464ae7ed46.svg]
../../fedimint_core/index.html


MODULE CONFIG

 * Modules
 * Structs
 * Enums
 * Constants
 * Traits
 * Functions
 * Type Definitions

? [../../help.html]
Change settings [../../static.files/wheel-5ec35bf9ca753509.svg]../../settings.html


MODULE FEDIMINT_CORE [../index.html]::CONFIGCopy item path [../../static.files/clipboard-7571035ce49a181d.svg]

source [../../src/fedimint_core/config.rs.html#1-839] · [−]


MODULES

serde_binary_human_readable [serde_binary_human_readable/index.html]


STRUCTS

ClientConfig [struct.ClientConfig.html]
Total client config
ClientConfigResponse [struct.ClientConfigResponse.html]
The API response for client config requests, signed by the Federation
ClientModuleConfig [struct.ClientModuleConfig.html]
Config for the client-side of a particular Federation module
ConfigGenModuleParams [struct.ConfigGenModuleParams.html]
Type erased ModuleGenParams used to generate the ServerModuleConfig during config gen
EmptyGenParams [struct.EmptyGenParams.html]
Empty struct for if there are no params
FederationId [struct.FederationId.html]
The federation id is a copy of the authentication threshold public key of the federation
JsonWithKind [struct.JsonWithKind.html]
serde_json::Value [https://docs.rs/serde_json/1.0.96/serde_json/value/enum.Value.html] that must contain kind: String field
ModuleGenRegistry [struct.ModuleGenRegistry.html]
PeerUrl [struct.PeerUrl.html]
ServerModuleConfig [struct.ServerModuleConfig.html]
Config for the server-side of a particular Federation module
ServerModuleConsensusConfig [struct.ServerModuleConsensusConfig.html]


ENUMS

DkgError [enum.DkgError.html]
Captures an error occurring in DKG
DkgMessage [enum.DkgMessage.html]
DkgPeerMsg [enum.DkgPeerMsg.html]
Things that a distributed_gen config can send between peers
SupportedDkgMessage [enum.SupportedDkgMessage.html]
enum version of SupportedDkgMessage [enum.SupportedDkgMessage.html]


CONSTANTS

META_FEDERATION_NAME_KEY [constant.META_FEDERATION_NAME_KEY.html]
Key under which the federation name can be sent to client in the meta part of the config


TRAITS

DkgGroup [trait.DkgGroup.html]
Defines a group (e.g. G1 or G2) that we can generate keys for
ISupportedDkgMessage [trait.ISupportedDkgMessage.html]
Supported (by Fedimint’s code) DkgMessage<T> types
ModuleGenParams [trait.ModuleGenParams.html]
SGroup [trait.SGroup.html]
TypedServerModuleConfig [trait.TypedServerModuleConfig.html]
Module (server side) config, typed
TypedServerModuleConsensusConfig [trait.TypedServerModuleConsensusConfig.html]
Consensus-critical part of a server side module config


FUNCTIONS

load_from_file [fn.load_from_file.html]


TYPE DEFINITIONS

CommonModuleGenRegistry [type.CommonModuleGenRegistry.html]
DkgResult [type.DkgResult.html]
Result of running DKG
ServerModuleGenParamsRegistry [type.ServerModuleGenParamsRegistry.html]
Registry that contains the config gen params for all modules
ServerModuleGenRegistry [type.ServerModuleGenRegistry.html]
