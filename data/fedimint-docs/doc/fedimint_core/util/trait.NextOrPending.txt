☰
logo [../../static.files/rust-logo-151179464ae7ed46.svg]
../../fedimint_core/index.html




logo [../../static.files/rust-logo-151179464ae7ed46.svg]
../../fedimint_core/index.html


NEXTORPENDING


REQUIRED ASSOCIATED TYPES

 * Output


REQUIRED METHODS

 * next_or_pending
 * ok


IMPLEMENTORS


IN FEDIMINT_CORE::UTIL [index.html]

? [../../help.html]
Change settings [../../static.files/wheel-5ec35bf9ca753509.svg]../../settings.html


TRAIT FEDIMINT_CORE [../index.html]::UTIL [index.html]::NEXTORPENDINGCopy item path
[../../static.files/clipboard-7571035ce49a181d.svg]

source [../../src/fedimint_core/util/mod.rs.html#28-34] · [−]

pub trait NextOrPending {
    type Output;

    fn next_or_pending<'life0, 'async_trait>(
        &'life0 mut self
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Self::Outputtrait.NextOrPending.html#associatedtype.Output> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait;
    fn ok<'life0, 'async_trait>(
        &'life0 mut self
    ) -> Pinhttps://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html<Boxhttps://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html<dyn Futurehttps://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html<Output = Resulthttps://docs.rs/anyhow/1.0.71/anyhow/type.Result.html<Self::Outputtrait.NextOrPending.html#associatedtype.Output>> + Sendhttps://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html + 'async_trait>>
    where
        Self: 'async_trait,
        'life0: 'async_trait;
}


REQUIRED ASSOCIATED TYPES§

source [../../src/fedimint_core/util/mod.rs.html#29]

TYPE OUTPUT


REQUIRED METHODS§

source [../../src/fedimint_core/util/mod.rs.html#31]

FN NEXT_OR_PENDING<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 MUT SELF
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = SELF::OUTPUT
[trait.NextOrPending.html#associatedtype.Output]> + SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] +
'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,

source [../../src/fedimint_core/util/mod.rs.html#33]

FN OK<'LIFE0, 'ASYNC_TRAIT>(
    &'LIFE0 MUT SELF
) -> PIN [https://doc.rust-lang.org/1.67.0/core/pin/struct.Pin.html]<BOX
[https://doc.rust-lang.org/1.67.0/alloc/boxed/struct.Box.html]<DYN FUTURE
[https://doc.rust-lang.org/1.67.0/core/future/future/trait.Future.html]<OUTPUT = RESULT
[https://docs.rs/anyhow/1.0.71/anyhow/type.Result.html]<SELF::OUTPUT [trait.NextOrPending.html#associatedtype.Output]>> + SEND
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] + 'ASYNC_TRAIT>>WHERE
    SELF: 'ASYNC_TRAIT,
    'LIFE0: 'ASYNC_TRAIT,


IMPLEMENTORS§

source [../../src/fedimint_core/util/mod.rs.html#37-66]§


IMPL<S> NEXTORPENDING [trait.NextOrPending.html] FOR SWHERE
    S: STREAM + UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html] + MAYBESEND [../task/trait.MaybeSend.html],
    S::ITEM: MAYBESEND [../task/trait.MaybeSend.html],

§

TYPE OUTPUT = <S AS STREAM>::ITEM

