☰
logo [../static.files/rust-logo-151179464ae7ed46.svg]
../tbs/index.html




logo [../static.files/rust-logo-151179464ae7ed46.svg]
../tbs/index.html


MESSAGEPOINT


METHODS

 * from_compressed
 * from_compressed_unchecked
 * from_uncompressed
 * from_uncompressed_unchecked
 * generator
 * identity
 * is_identity
 * is_on_curve
 * is_torsion_free
 * to_compressed
 * to_uncompressed


TRAIT IMPLEMENTATIONS

 * Add<&'b G1Projective>
 * Add<&'b G1Projective>
 * Add<G1Projective>
 * Add<G1Projective>
 * Clone
 * ConditionallySelectable
 * ConstantTimeEq
 * Copy
 * Debug
 * Default
 * DefaultIsZeroes
 * Display
 * Eq
 * From<&'a G1Projective>
 * From<G1Projective>
 * GroupEncoding
 * Mul<&'b G1Affine>
 * Mul<&'b G1Affine>
 * Mul<&'b Scalar>
 * Mul<&'b Scalar>
 * Mul<G1Affine>
 * Mul<G1Affine>
 * Mul<Scalar>
 * Mul<Scalar>
 * Neg
 * Neg
 * PairingCurveAffine
 * PartialEq<G1Affine>
 * PrimeCurveAffine
 * Sub<&'b G1Projective>
 * Sub<&'b G1Projective>
 * Sub<G1Projective>
 * Sub<G1Projective>
 * UncompressedEncoding


AUTO TRAIT IMPLEMENTATIONS

 * RefUnwindSafe
 * Send
 * Sync
 * Unpin
 * UnwindSafe


BLANKET IMPLEMENTATIONS

 * Any
 * Borrow<T>
 * BorrowMut<T>
 * ConditionallyNegatable
 * Conv
 * FmtForward
 * From<T>
 * Into<U>
 * Pipe
 * Same<T>
 * Tap
 * ToOwned
 * ToString
 * TryConv
 * TryFrom<U>
 * TryInto<U>
 * VZip<V>
 * Zeroize


IN TBS [index.html]

? [../help.html]
Change settings [../static.files/wheel-5ec35bf9ca753509.svg]../settings.html


STRUCT TBS [index.html]::MESSAGEPOINTCopy item path [../static.files/clipboard-7571035ce49a181d.svg]

[−]

pub struct MessagePoint { /* private fields */ }

Expand description

This is an element of $\mathbb{G}_1$ represented in the affine coordinate space. It is ideal to keep elements in this
representation to reduce memory usage and improve performance through the use of mixed curve model arithmetic.

Values of G1Affine are guaranteed to be in the $q$-order subgroup unless an “unchecked” API was misused.


IMPLEMENTATIONS§

§


IMPL G1AFFINE [struct.MessagePoint.html]

PUB FN IDENTITY() -> G1AFFINE [struct.MessagePoint.html]

Returns the identity of the group: the point at infinity.

PUB FN GENERATOR() -> G1AFFINE [struct.MessagePoint.html]

Returns a fixed generator of the group. See notes::design [notes/design/index.html#fixed-generators] for how this generator is
chosen.

PUB FN TO_COMPRESSED(&SELF) -> [U8 [https://doc.rust-lang.org/1.67.0/std/primitive.u8.html]; 48
[https://doc.rust-lang.org/1.67.0/std/primitive.array.html]]

Serializes this element into compressed form. See notes::serialization [crate::notes::serialization] for details about how group
elements are serialized.

PUB FN TO_UNCOMPRESSED(&SELF) -> [U8 [https://doc.rust-lang.org/1.67.0/std/primitive.u8.html]; 96
[https://doc.rust-lang.org/1.67.0/std/primitive.array.html]]

Serializes this element into uncompressed form. See notes::serialization [crate::notes::serialization] for details about how group
elements are serialized.

PUB FN FROM_UNCOMPRESSED(BYTES: &[U8 [https://doc.rust-lang.org/1.67.0/std/primitive.u8.html]; 96
[https://doc.rust-lang.org/1.67.0/std/primitive.array.html]]) -> CTOPTION
[https://docs.rs/subtle/2.4.1/subtle/struct.CtOption.html]<G1AFFINE [struct.MessagePoint.html]>

Attempts to deserialize an uncompressed element. See notes::serialization [crate::notes::serialization] for details about how
group elements are serialized.

PUB FN FROM_UNCOMPRESSED_UNCHECKED(BYTES: &[U8 [https://doc.rust-lang.org/1.67.0/std/primitive.u8.html]; 96
[https://doc.rust-lang.org/1.67.0/std/primitive.array.html]]) -> CTOPTION
[https://docs.rs/subtle/2.4.1/subtle/struct.CtOption.html]<G1AFFINE [struct.MessagePoint.html]>

Attempts to deserialize an uncompressed element, not checking if the element is on the curve and not checking if it is in the
correct subgroup. This is dangerous to call unless you trust the bytes you are reading; otherwise, API invariants may be broken.
Please consider using from_uncompressed() instead.

PUB FN FROM_COMPRESSED(BYTES: &[U8 [https://doc.rust-lang.org/1.67.0/std/primitive.u8.html]; 48
[https://doc.rust-lang.org/1.67.0/std/primitive.array.html]]) -> CTOPTION
[https://docs.rs/subtle/2.4.1/subtle/struct.CtOption.html]<G1AFFINE [struct.MessagePoint.html]>

Attempts to deserialize a compressed element. See notes::serialization [crate::notes::serialization] for details about how group
elements are serialized.

PUB FN FROM_COMPRESSED_UNCHECKED(BYTES: &[U8 [https://doc.rust-lang.org/1.67.0/std/primitive.u8.html]; 48
[https://doc.rust-lang.org/1.67.0/std/primitive.array.html]]) -> CTOPTION
[https://docs.rs/subtle/2.4.1/subtle/struct.CtOption.html]<G1AFFINE [struct.MessagePoint.html]>

Attempts to deserialize an uncompressed element, not checking if the element is in the correct subgroup. This is dangerous to call
unless you trust the bytes you are reading; otherwise, API invariants may be broken. Please consider using from_compressed()
instead.

PUB FN IS_IDENTITY(&SELF) -> CHOICE [https://docs.rs/subtle/2.4.1/subtle/struct.Choice.html]

Returns true if this element is the identity (the point at infinity).

PUB FN IS_TORSION_FREE(&SELF) -> CHOICE [https://docs.rs/subtle/2.4.1/subtle/struct.Choice.html]

Returns true if this point is free of an $h$-torsion component, and so it exists within the $q$-order subgroup $\mathbb{G}_1$.
This should always return true unless an “unchecked” API was used.

PUB FN IS_ON_CURVE(&SELF) -> CHOICE [https://docs.rs/subtle/2.4.1/subtle/struct.Choice.html]

Returns true if this point is on the curve. This should always return true unless an “unchecked” API was used.


TRAIT IMPLEMENTATIONS§

§


IMPL<'A, 'B> ADD [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Add.html]<&'B G1PROJECTIVE> FOR &'A G1AFFINE
[struct.MessagePoint.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Add.html#associatedtype.Output] = G1PROJECTIVE

The resulting type after applying the + operator.
§

FN ADD [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Add.html#tymethod.add](SELF, RHS: &'B G1PROJECTIVE) -> G1PROJECTIVE

Performs the + operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Add.html#tymethod.add]
§


IMPL<'B> ADD [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Add.html]<&'B G1PROJECTIVE> FOR G1AFFINE
[struct.MessagePoint.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Add.html#associatedtype.Output] = G1PROJECTIVE

The resulting type after applying the + operator.
§

FN ADD [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Add.html#tymethod.add](SELF, RHS: &'B G1PROJECTIVE) -> G1PROJECTIVE

Performs the + operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Add.html#tymethod.add]
§


IMPL<'A> ADD [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Add.html]<G1PROJECTIVE> FOR &'A G1AFFINE
[struct.MessagePoint.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Add.html#associatedtype.Output] = G1PROJECTIVE

The resulting type after applying the + operator.
§

FN ADD [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Add.html#tymethod.add](SELF, RHS: G1PROJECTIVE) -> G1PROJECTIVE

Performs the + operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Add.html#tymethod.add]
§


IMPL ADD [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Add.html]<G1PROJECTIVE> FOR G1AFFINE [struct.MessagePoint.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Add.html#associatedtype.Output] = G1PROJECTIVE

The resulting type after applying the + operator.
§

FN ADD [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Add.html#tymethod.add](SELF, RHS: G1PROJECTIVE) -> G1PROJECTIVE

Performs the + operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Add.html#tymethod.add]
§


IMPL CLONE [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html] FOR G1AFFINE [struct.MessagePoint.html]

§

FN CLONE [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html#tymethod.clone](&SELF) -> G1AFFINE
[struct.MessagePoint.html]

Returns a copy of the value. Read more [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html#tymethod.clone]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/clone.rs.html#132-134]§

FN CLONE_FROM [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html#method.clone_from](&MUT SELF, SOURCE: &
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)

Performs copy-assignment from source. Read more [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html#method.clone_from]
§


IMPL CONDITIONALLYSELECTABLE [https://docs.rs/subtle/2.4.1/subtle/trait.ConditionallySelectable.html] FOR G1AFFINE
[struct.MessagePoint.html]

§

FN CONDITIONAL_SELECT [https://docs.rs/subtle/2.4.1/subtle/trait.ConditionallySelectable.html#tymethod.conditional_select](A:
&G1AFFINE [struct.MessagePoint.html], B: &G1AFFINE [struct.MessagePoint.html], CHOICE: CHOICE
[https://docs.rs/subtle/2.4.1/subtle/struct.Choice.html]) -> G1AFFINE [struct.MessagePoint.html]

Select a or b according to choice. Read more
[https://docs.rs/subtle/2.4.1/subtle/trait.ConditionallySelectable.html#tymethod.conditional_select]
source [https://docs.rs/subtle/2.4.1/src/subtle/lib.rs.html#407]§

FN CONDITIONAL_ASSIGN [https://docs.rs/subtle/2.4.1/subtle/trait.ConditionallySelectable.html#method.conditional_assign](&MUT
SELF, OTHER: & [https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF, CHOICE: CHOICE
[https://docs.rs/subtle/2.4.1/subtle/struct.Choice.html])

Conditionally assign other to self, according to choice. Read more
[https://docs.rs/subtle/2.4.1/subtle/trait.ConditionallySelectable.html#method.conditional_assign]
source [https://docs.rs/subtle/2.4.1/src/subtle/lib.rs.html#435]§

FN CONDITIONAL_SWAP [https://docs.rs/subtle/2.4.1/subtle/trait.ConditionallySelectable.html#method.conditional_swap](A: &MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF, B: &MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF, CHOICE: CHOICE
[https://docs.rs/subtle/2.4.1/subtle/struct.Choice.html])

Conditionally swap self and other if choice == 1; otherwise, reassign both unto themselves. Read more
[https://docs.rs/subtle/2.4.1/subtle/trait.ConditionallySelectable.html#method.conditional_swap]
§


IMPL CONSTANTTIMEEQ [https://docs.rs/subtle/2.4.1/subtle/trait.ConstantTimeEq.html] FOR G1AFFINE [struct.MessagePoint.html]

§

FN CT_EQ [https://docs.rs/subtle/2.4.1/subtle/trait.ConstantTimeEq.html#tymethod.ct_eq](&SELF, OTHER: &G1AFFINE
[struct.MessagePoint.html]) -> CHOICE [https://docs.rs/subtle/2.4.1/subtle/struct.Choice.html]

Determine if two items are equal. Read more [https://docs.rs/subtle/2.4.1/subtle/trait.ConstantTimeEq.html#tymethod.ct_eq]
§


IMPL DEBUG [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Debug.html] FOR G1AFFINE [struct.MessagePoint.html]

§

FN FMT [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Debug.html#tymethod.fmt](&SELF, F: &MUT FORMATTER
[https://doc.rust-lang.org/1.67.0/core/fmt/struct.Formatter.html]<'_>) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/core/fmt/struct.Error.html]>

Formats the value using the given formatter. Read more [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Debug.html#tymethod.fmt]
§


IMPL DEFAULT [https://doc.rust-lang.org/1.67.0/core/default/trait.Default.html] FOR G1AFFINE [struct.MessagePoint.html]

§

FN DEFAULT [https://doc.rust-lang.org/1.67.0/core/default/trait.Default.html#tymethod.default]() -> G1AFFINE
[struct.MessagePoint.html]

Returns the “default value” for a type. Read more
[https://doc.rust-lang.org/1.67.0/core/default/trait.Default.html#tymethod.default]
§


IMPL DISPLAY [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Display.html] FOR G1AFFINE [struct.MessagePoint.html]

§

FN FMT [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Display.html#tymethod.fmt](&SELF, F: &MUT FORMATTER
[https://doc.rust-lang.org/1.67.0/core/fmt/struct.Formatter.html]<'_>) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/core/fmt/struct.Error.html]>

Formats the value using the given formatter. Read more [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Display.html#tymethod.fmt]
§


IMPL<'A> FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<&'A G1PROJECTIVE> FOR G1AFFINE
[struct.MessagePoint.html]

§

FN FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html#tymethod.from](P: &'A G1PROJECTIVE) -> G1AFFINE
[struct.MessagePoint.html]

Converts to this type from the input type.
§


IMPL FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<G1PROJECTIVE> FOR G1AFFINE [struct.MessagePoint.html]

§

FN FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html#tymethod.from](P: G1PROJECTIVE) -> G1AFFINE
[struct.MessagePoint.html]

Converts to this type from the input type.
§


IMPL GROUPENCODING FOR G1AFFINE [struct.MessagePoint.html]

§

TYPE REPR = G1COMPRESSED

The encoding of group elements. Read more
§

FN FROM_BYTES(BYTES: &<G1AFFINE [struct.MessagePoint.html] AS GROUPENCODING>::REPR) -> CTOPTION
[https://docs.rs/subtle/2.4.1/subtle/struct.CtOption.html]<G1AFFINE [struct.MessagePoint.html]>

Attempts to deserialize a group element from its encoding.
§

FN FROM_BYTES_UNCHECKED(
    BYTES: &<G1AFFINE [struct.MessagePoint.html] AS GROUPENCODING>::REPR
) -> CTOPTION [https://docs.rs/subtle/2.4.1/subtle/struct.CtOption.html]<G1AFFINE [struct.MessagePoint.html]>

Attempts to deserialize a group element, not checking if the element is valid. Read more
§

FN TO_BYTES(&SELF) -> <G1AFFINE [struct.MessagePoint.html] AS GROUPENCODING>::REPR

Converts this element into its byte encoding. This may or may not support encoding the identity. Read more
§


IMPL<'A, 'B> MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<&'B G1AFFINE [struct.MessagePoint.html]> FOR &'A
SCALAR [struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = G1PROJECTIVE

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, RHS: &'B G1AFFINE
[struct.MessagePoint.html]) -> <&'A SCALAR [struct.Scalar.html] AS MUL
[https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<&'B G1AFFINE [struct.MessagePoint.html]>>::OUTPUT
[https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output]

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL<'B> MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<&'B G1AFFINE [struct.MessagePoint.html]> FOR SCALAR
[struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = G1PROJECTIVE

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, RHS: &'B G1AFFINE
[struct.MessagePoint.html]) -> G1PROJECTIVE

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL<'A, 'B> MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<&'B SCALAR [struct.Scalar.html]> FOR &'A
G1AFFINE [struct.MessagePoint.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = G1PROJECTIVE

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, OTHER: &'B SCALAR [struct.Scalar.html])
-> <&'A G1AFFINE [struct.MessagePoint.html] AS MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<&'B SCALAR
[struct.Scalar.html]>>::OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output]

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL<'B> MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<&'B SCALAR [struct.Scalar.html]> FOR G1AFFINE
[struct.MessagePoint.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = G1PROJECTIVE

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, RHS: &'B SCALAR [struct.Scalar.html])
-> G1PROJECTIVE

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL<'A> MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<G1AFFINE [struct.MessagePoint.html]> FOR &'A SCALAR
[struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = G1PROJECTIVE

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, RHS: G1AFFINE
[struct.MessagePoint.html]) -> G1PROJECTIVE

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<G1AFFINE [struct.MessagePoint.html]> FOR SCALAR
[struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = G1PROJECTIVE

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, RHS: G1AFFINE
[struct.MessagePoint.html]) -> G1PROJECTIVE

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL<'A> MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<SCALAR [struct.Scalar.html]> FOR &'A G1AFFINE
[struct.MessagePoint.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = G1PROJECTIVE

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, RHS: SCALAR [struct.Scalar.html]) ->
G1PROJECTIVE

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<SCALAR [struct.Scalar.html]> FOR G1AFFINE
[struct.MessagePoint.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = G1PROJECTIVE

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, RHS: SCALAR [struct.Scalar.html]) ->
G1PROJECTIVE

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL<'A> NEG [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Neg.html] FOR &'A G1AFFINE [struct.MessagePoint.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Neg.html#associatedtype.Output] = G1AFFINE
[struct.MessagePoint.html]

The resulting type after applying the - operator.
§

FN NEG [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Neg.html#tymethod.neg](SELF) -> G1AFFINE [struct.MessagePoint.html]

Performs the unary - operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Neg.html#tymethod.neg]
§


IMPL NEG [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Neg.html] FOR G1AFFINE [struct.MessagePoint.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Neg.html#associatedtype.Output] = G1AFFINE
[struct.MessagePoint.html]

The resulting type after applying the - operator.
§

FN NEG [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Neg.html#tymethod.neg](SELF) -> G1AFFINE [struct.MessagePoint.html]

Performs the unary - operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Neg.html#tymethod.neg]
§


IMPL PAIRINGCURVEAFFINE FOR G1AFFINE [struct.MessagePoint.html]

§

TYPE PAIR = G2AFFINE [struct.PubKeyPoint.html]

§

TYPE PAIRINGRESULT = GT

§

FN PAIRING_WITH(
    &SELF,
    OTHER: &<G1AFFINE [struct.MessagePoint.html] AS PAIRINGCURVEAFFINE>::PAIR
) -> <G1AFFINE [struct.MessagePoint.html] AS PAIRINGCURVEAFFINE>::PAIRINGRESULT

Perform a pairing
§


IMPL PARTIALEQ [https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialEq.html]<G1AFFINE [struct.MessagePoint.html]> FOR G1AFFINE
[struct.MessagePoint.html]

§

FN EQ [https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialEq.html#tymethod.eq](&SELF, OTHER: &G1AFFINE
[struct.MessagePoint.html]) -> BOOL [https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]

This method tests for self and other values to be equal, and is used by ==. Read more
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialEq.html#tymethod.eq]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/cmp.rs.html#229]§

FN NE [https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialEq.html#method.ne](&SELF, OTHER: &
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]RHS) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]

This method tests for !=. The default implementation is almost always sufficient, and should not be overridden without very good
reason. Read more [https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialEq.html#method.ne]
§


IMPL PRIMECURVEAFFINE FOR G1AFFINE [struct.MessagePoint.html]

§

TYPE SCALAR = SCALAR [struct.Scalar.html]

§

TYPE CURVE = G1PROJECTIVE

§

FN IDENTITY() -> G1AFFINE [struct.MessagePoint.html]

Returns the additive identity.
§

FN GENERATOR() -> G1AFFINE [struct.MessagePoint.html]

Returns a fixed generator of unknown exponent.
§

FN IS_IDENTITY(&SELF) -> CHOICE [https://docs.rs/subtle/2.4.1/subtle/struct.Choice.html]

Determines if this point represents the point at infinity; the additive identity. Read more
§

FN TO_CURVE(&SELF) -> <G1AFFINE [struct.MessagePoint.html] AS PRIMECURVEAFFINE>::CURVE

Converts this element to its curve representation.
§


IMPL<'A, 'B> SUB [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Sub.html]<&'B G1PROJECTIVE> FOR &'A G1AFFINE
[struct.MessagePoint.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Sub.html#associatedtype.Output] = G1PROJECTIVE

The resulting type after applying the - operator.
§

FN SUB [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Sub.html#tymethod.sub](SELF, RHS: &'B G1PROJECTIVE) -> G1PROJECTIVE

Performs the - operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Sub.html#tymethod.sub]
§


IMPL<'B> SUB [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Sub.html]<&'B G1PROJECTIVE> FOR G1AFFINE
[struct.MessagePoint.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Sub.html#associatedtype.Output] = G1PROJECTIVE

The resulting type after applying the - operator.
§

FN SUB [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Sub.html#tymethod.sub](SELF, RHS: &'B G1PROJECTIVE) -> G1PROJECTIVE

Performs the - operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Sub.html#tymethod.sub]
§


IMPL<'A> SUB [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Sub.html]<G1PROJECTIVE> FOR &'A G1AFFINE
[struct.MessagePoint.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Sub.html#associatedtype.Output] = G1PROJECTIVE

The resulting type after applying the - operator.
§

FN SUB [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Sub.html#tymethod.sub](SELF, RHS: G1PROJECTIVE) -> G1PROJECTIVE

Performs the - operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Sub.html#tymethod.sub]
§


IMPL SUB [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Sub.html]<G1PROJECTIVE> FOR G1AFFINE [struct.MessagePoint.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Sub.html#associatedtype.Output] = G1PROJECTIVE

The resulting type after applying the - operator.
§

FN SUB [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Sub.html#tymethod.sub](SELF, RHS: G1PROJECTIVE) -> G1PROJECTIVE

Performs the - operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Sub.html#tymethod.sub]
§


IMPL UNCOMPRESSEDENCODING FOR G1AFFINE [struct.MessagePoint.html]

§

TYPE UNCOMPRESSED = G1UNCOMPRESSED

§

FN FROM_UNCOMPRESSED(
    BYTES: &<G1AFFINE [struct.MessagePoint.html] AS UNCOMPRESSEDENCODING>::UNCOMPRESSED
) -> CTOPTION [https://docs.rs/subtle/2.4.1/subtle/struct.CtOption.html]<G1AFFINE [struct.MessagePoint.html]>

Attempts to deserialize an element from its uncompressed encoding.
§

FN FROM_UNCOMPRESSED_UNCHECKED(
    BYTES: &<G1AFFINE [struct.MessagePoint.html] AS UNCOMPRESSEDENCODING>::UNCOMPRESSED
) -> CTOPTION [https://docs.rs/subtle/2.4.1/subtle/struct.CtOption.html]<G1AFFINE [struct.MessagePoint.html]>

Attempts to deserialize an uncompressed element, not checking if the element is in the correct subgroup. Read more
§

FN TO_UNCOMPRESSED(&SELF) -> <G1AFFINE [struct.MessagePoint.html] AS UNCOMPRESSEDENCODING>::UNCOMPRESSED

Converts this element into its uncompressed encoding, so long as it’s not the point at infinity. Read more
§


IMPL COPY [https://doc.rust-lang.org/1.67.0/core/marker/trait.Copy.html] FOR G1AFFINE [struct.MessagePoint.html]

§


IMPL DEFAULTISZEROES FOR G1AFFINE [struct.MessagePoint.html]

§


IMPL EQ [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Eq.html] FOR G1AFFINE [struct.MessagePoint.html]


AUTO TRAIT IMPLEMENTATIONS§

§


IMPL REFUNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.RefUnwindSafe.html] FOR G1AFFINE
[struct.MessagePoint.html]

§


IMPL SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] FOR G1AFFINE [struct.MessagePoint.html]

§


IMPL SYNC [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html] FOR G1AFFINE [struct.MessagePoint.html]

§


IMPL UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html] FOR G1AFFINE [struct.MessagePoint.html]

§


IMPL UNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.UnwindSafe.html] FOR G1AFFINE
[struct.MessagePoint.html]


BLANKET IMPLEMENTATIONS§

source [https://doc.rust-lang.org/1.67.0/src/core/any.rs.html#200]§


IMPL<T> ANY [https://doc.rust-lang.org/1.67.0/core/any/trait.Any.html] FOR TWHERE
    T: 'STATIC + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

source [https://doc.rust-lang.org/1.67.0/src/core/any.rs.html#201]§

FN TYPE_ID [https://doc.rust-lang.org/1.67.0/core/any/trait.Any.html#tymethod.type_id](&SELF) -> TYPEID
[https://doc.rust-lang.org/1.67.0/core/any/struct.TypeId.html]

Gets the TypeId of self. Read more [https://doc.rust-lang.org/1.67.0/core/any/trait.Any.html#tymethod.type_id]
source [https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#211]§


IMPL<T> BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<T> FOR TWHERE
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

const: unstable [https://github.com/rust-lang/rust/issues/91522] · source
[https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#213]§

FN BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html#tymethod.borrow](&SELF) -> &
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T

Immutably borrows from an owned value. Read more [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html#tymethod.borrow]
source [https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#220]§


IMPL<T> BORROWMUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html]<T> FOR TWHERE
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

const: unstable [https://github.com/rust-lang/rust/issues/91522] · source
[https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#221]§

FN BORROW_MUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut](&MUT SELF) -> &MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T

Mutably borrows from an owned value. Read more
[https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut]
source [https://docs.rs/subtle/2.4.1/src/subtle/lib.rs.html#537]§


IMPL<T> CONDITIONALLYNEGATABLE [https://docs.rs/subtle/2.4.1/subtle/trait.ConditionallyNegatable.html] FOR TWHERE
    T: CONDITIONALLYSELECTABLE [https://docs.rs/subtle/2.4.1/subtle/trait.ConditionallySelectable.html],
    &'A [https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T: FOR<'A> NEG
[https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Neg.html]<OUTPUT = T>,

source [https://docs.rs/subtle/2.4.1/src/subtle/lib.rs.html#543]§

FN CONDITIONAL_NEGATE [https://docs.rs/subtle/2.4.1/subtle/trait.ConditionallyNegatable.html#tymethod.conditional_negate](&MUT
SELF, CHOICE: CHOICE [https://docs.rs/subtle/2.4.1/subtle/struct.Choice.html])

Negate self if choice == Choice(1); otherwise, leave it unchanged. Read more
[https://docs.rs/subtle/2.4.1/subtle/trait.ConditionallyNegatable.html#tymethod.conditional_negate]
§


IMPL<T> CONV FOR T

§

FN CONV<T>(SELF) -> TWHERE
    SELF: INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<T>,

Converts self into T using Into<T>. Read more
§


IMPL<T> FMTFORWARD FOR T

§

FN FMT_BINARY(SELF) -> FMTBINARY<SELF>WHERE
    SELF: BINARY [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Binary.html],

Causes self to use its Binary implementation when Debug-formatted.
§

FN FMT_DISPLAY(SELF) -> FMTDISPLAY<SELF>WHERE
    SELF: DISPLAY [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Display.html],

Causes self to use its Display implementation when Debug-formatted. Read more
§

FN FMT_LOWER_EXP(SELF) -> FMTLOWEREXP<SELF>WHERE
    SELF: LOWEREXP [https://doc.rust-lang.org/1.67.0/core/fmt/trait.LowerExp.html],

Causes self to use its LowerExp implementation when Debug-formatted. Read more
§

FN FMT_LOWER_HEX(SELF) -> FMTLOWERHEX<SELF>WHERE
    SELF: LOWERHEX [https://doc.rust-lang.org/1.67.0/core/fmt/trait.LowerHex.html],

Causes self to use its LowerHex implementation when Debug-formatted. Read more
§

FN FMT_OCTAL(SELF) -> FMTOCTAL<SELF>WHERE
    SELF: OCTAL [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Octal.html],

Causes self to use its Octal implementation when Debug-formatted.
§

FN FMT_POINTER(SELF) -> FMTPOINTER<SELF>WHERE
    SELF: POINTER [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Pointer.html],

Causes self to use its Pointer implementation when Debug-formatted. Read more
§

FN FMT_UPPER_EXP(SELF) -> FMTUPPEREXP<SELF>WHERE
    SELF: UPPEREXP [https://doc.rust-lang.org/1.67.0/core/fmt/trait.UpperExp.html],

Causes self to use its UpperExp implementation when Debug-formatted. Read more
§

FN FMT_UPPER_HEX(SELF) -> FMTUPPERHEX<SELF>WHERE
    SELF: UPPERHEX [https://doc.rust-lang.org/1.67.0/core/fmt/trait.UpperHex.html],

Causes self to use its UpperHex implementation when Debug-formatted. Read more
§

FN FMT_LIST(SELF) -> FMTLIST<SELF>WHERE
    &'A [https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF: FOR<'A> INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html],

Formats each item in a sequence. Read more
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#733]§


IMPL<T> FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<T> FOR T

const: unstable [https://github.com/rust-lang/rust/issues/88674] · source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#736]§

FN FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html#tymethod.from](T: T) -> T

Returns the argument unchanged.

source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#717]§


IMPL<T, U> INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<U> FOR TWHERE
    U: FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<T>,

const: unstable [https://github.com/rust-lang/rust/issues/88674] · source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#725]§

FN INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html#tymethod.into](SELF) -> U

Calls U::from(self).

That is, this conversion is whatever the implementation of From [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<T>
for U chooses to do.

§


IMPL<T> PIPE FOR TWHERE
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

§

FN PIPE<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](SELF) -> R) -> RWHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Pipes by value. This is generally the method you want to use. Read more
§

FN PIPE_REF<'A, R>(&'A SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF) -> R) -> RWHERE
    R: 'A,

Borrows self and passes that borrow into the pipe function. Read more
§

FN PIPE_REF_MUT<'A, R>(&'A MUT SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
MUT [https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF) -> R) -> RWHERE
    R: 'A,

Mutably borrows self and passes that borrow into the pipe function. Read more
§

FN PIPE_BORROW<'A, B, R>(&'A SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B) -> R) -> RWHERE
    SELF: BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<B>,
    B: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Borrows self, then passes self.borrow() into the pipe function. Read more
§

FN PIPE_BORROW_MUT<'A, B, R>(
    &'A MUT SELF,
    FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B) -> R
) -> RWHERE
    SELF: BORROWMUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html]<B>,
    B: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Mutably borrows self, then passes self.borrow_mut() into the pipe function. Read more
§

FN PIPE_AS_REF<'A, U, R>(&'A SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]U) -> R) -> RWHERE
    SELF: ASREF [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsRef.html]<U>,
    U: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Borrows self, then passes self.as_ref() into the pipe function.
§

FN PIPE_AS_MUT<'A, U, R>(&'A MUT SELF, FUNC: IMPL FNONCE
[https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]U) -> R) -> RWHERE
    SELF: ASMUT [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsMut.html]<U>,
    U: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Mutably borrows self, then passes self.as_mut() into the pipe function. Read more
§

FN PIPE_DEREF<'A, T, R>(&'A SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T) -> R) -> RWHERE
    SELF: DEREF [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html]<TARGET = T>,
    T: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Borrows self, then passes self.deref() into the pipe function.
§

FN PIPE_DEREF_MUT<'A, T, R>(&'A MUT SELF, FUNC: IMPL FNONCE
[https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T) -> R) -> RWHERE
    SELF: DEREFMUT [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.DerefMut.html]<TARGET = T> + DEREF
[https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html],
    T: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Mutably borrows self, then passes self.deref_mut() into the pipe function. Read more
source [https://docs.rs/typenum/1.16.0/src/typenum/type_operators.rs.html#34]§


IMPL<T> SAME [https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Same.html]<T> FOR T

§

TYPE OUTPUT [https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Same.html#associatedtype.Output] = T

Should always be Self
§


IMPL<T> TAP FOR T

§

FN TAP(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)) -> SELF

Immutable access to a value. Read more
§

FN TAP_MUT(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)) -> SELF

Mutable access to a value. Read more
§

FN TAP_BORROW<B>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B)) -> SELFWHERE
    SELF: BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<B>,
    B: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Immutable access to the Borrow<B> of a value. Read more
§

FN TAP_BORROW_MUT<B>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B)) -> SELFWHERE
    SELF: BORROWMUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html]<B>,
    B: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Mutable access to the BorrowMut<B> of a value. Read more
§

FN TAP_REF<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R)) -> SELFWHERE
    SELF: ASREF [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsRef.html]<R>,
    R: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Immutable access to the AsRef<R> view of a value. Read more
§

FN TAP_REF_MUT<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R)) -> SELFWHERE
    SELF: ASMUT [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsMut.html]<R>,
    R: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Mutable access to the AsMut<R> view of a value. Read more
§

FN TAP_DEREF<T>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)) -> SELFWHERE
    SELF: DEREF [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html]<TARGET = T>,
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Immutable access to the Deref::Target of a value. Read more
§

FN TAP_DEREF_MUT<T>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)) -> SELFWHERE
    SELF: DEREFMUT [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.DerefMut.html]<TARGET = T> + DEREF
[https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html],
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Mutable access to the Deref::Target of a value. Read more
§

FN TAP_DBG(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)) -> SELF

Calls .tap() only in debug builds, and is erased in release builds.
§

FN TAP_MUT_DBG(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)) -> SELF

Calls .tap_mut() only in debug builds, and is erased in release builds. Read more
§

FN TAP_BORROW_DBG<B>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B)) -> SELFWHERE
    SELF: BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<B>,
    B: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_borrow() only in debug builds, and is erased in release builds. Read more
§

FN TAP_BORROW_MUT_DBG<B>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B)) -> SELFWHERE
    SELF: BORROWMUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html]<B>,
    B: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_borrow_mut() only in debug builds, and is erased in release builds. Read more
§

FN TAP_REF_DBG<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R)) -> SELFWHERE
    SELF: ASREF [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsRef.html]<R>,
    R: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_ref() only in debug builds, and is erased in release builds. Read more
§

FN TAP_REF_MUT_DBG<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R)) -> SELFWHERE
    SELF: ASMUT [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsMut.html]<R>,
    R: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_ref_mut() only in debug builds, and is erased in release builds. Read more
§

FN TAP_DEREF_DBG<T>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)) -> SELFWHERE
    SELF: DEREF [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html]<TARGET = T>,
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_deref() only in debug builds, and is erased in release builds. Read more
§

FN TAP_DEREF_MUT_DBG<T>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)) -> SELFWHERE
    SELF: DEREFMUT [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.DerefMut.html]<TARGET = T> + DEREF
[https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html],
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_deref_mut() only in debug builds, and is erased in release builds. Read more
source [https://doc.rust-lang.org/1.67.0/src/alloc/borrow.rs.html#82]§


IMPL<T> TOOWNED [https://doc.rust-lang.org/1.67.0/alloc/borrow/trait.ToOwned.html] FOR TWHERE
    T: CLONE [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html],

§

TYPE OWNED [https://doc.rust-lang.org/1.67.0/alloc/borrow/trait.ToOwned.html#associatedtype.Owned] = T

The resulting type after obtaining ownership.
source [https://doc.rust-lang.org/1.67.0/src/alloc/borrow.rs.html#87]§

FN TO_OWNED [https://doc.rust-lang.org/1.67.0/alloc/borrow/trait.ToOwned.html#tymethod.to_owned](&SELF) -> T

Creates owned data from borrowed data, usually by cloning. Read more
[https://doc.rust-lang.org/1.67.0/alloc/borrow/trait.ToOwned.html#tymethod.to_owned]
source [https://doc.rust-lang.org/1.67.0/src/alloc/borrow.rs.html#91]§

FN CLONE_INTO [https://doc.rust-lang.org/1.67.0/alloc/borrow/trait.ToOwned.html#method.clone_into](&SELF, TARGET: &MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)

Uses borrowed data to replace owned data, usually by cloning. Read more
[https://doc.rust-lang.org/1.67.0/alloc/borrow/trait.ToOwned.html#method.clone_into]
source [https://doc.rust-lang.org/1.67.0/src/alloc/string.rs.html#2526]§


IMPL<T> TOSTRING [https://doc.rust-lang.org/1.67.0/alloc/string/trait.ToString.html] FOR TWHERE
    T: DISPLAY [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Display.html] + ?SIZED
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

source [https://doc.rust-lang.org/1.67.0/src/alloc/string.rs.html#2532]§

DEFAULT FN TO_STRING [https://doc.rust-lang.org/1.67.0/alloc/string/trait.ToString.html#tymethod.to_string](&SELF) -> STRING
[https://doc.rust-lang.org/1.67.0/alloc/string/struct.String.html]

Converts the given value to a String. Read more
[https://doc.rust-lang.org/1.67.0/alloc/string/trait.ToString.html#tymethod.to_string]
§


IMPL<T> TRYCONV FOR T

§

FN TRY_CONV<T>(SELF) -> RESULT [https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<T, SELF::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html#associatedtype.Error]>WHERE
    SELF: TRYINTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html]<T>,

Attempts to convert self into T using TryInto<T>. Read more
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#775]§


IMPL<T, U> TRYFROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<U> FOR TWHERE
    U: INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<T>,

§

TYPE ERROR [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error] = INFALLIBLE
[https://doc.rust-lang.org/1.67.0/core/convert/enum.Infallible.html]

The type returned in the event of a conversion error.
const: unstable [https://github.com/rust-lang/rust/issues/88674] · source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#781]§

FN TRY_FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#tymethod.try_from](VALUE: U) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<T, <T AS TRYFROM
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<U>>::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error]>

Performs the conversion.
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#760]§


IMPL<T, U> TRYINTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html]<U> FOR TWHERE
    U: TRYFROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<T>,

§

TYPE ERROR [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html#associatedtype.Error] = <U AS TRYFROM
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<T>>::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error]

The type returned in the event of a conversion error.
const: unstable [https://github.com/rust-lang/rust/issues/88674] · source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#766]§

FN TRY_INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html#tymethod.try_into](SELF) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<U, <U AS TRYFROM
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<T>>::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error]>

Performs the conversion.
§


IMPL<V, T> VZIP<V> FOR TWHERE
    V: MULTILANE<T>,

§

FN VZIP(SELF) -> V

§


IMPL<Z> ZEROIZE FOR ZWHERE
    Z: DEFAULTISZEROES,

§

FN ZEROIZE(&MUT SELF)

Zero out this object from memory using Rust intrinsics which ensure the zeroization operation is not “optimized away” by the
compiler. Read more
