☰
logo [../static.files/rust-logo-151179464ae7ed46.svg]
../tbs/index.html




logo [../static.files/rust-logo-151179464ae7ed46.svg]
../tbs/index.html


SCALAR


METHODS

 * add
 * double
 * from_bytes
 * from_bytes_wide
 * from_raw
 * invert
 * mul
 * neg
 * one
 * pow
 * pow_vartime
 * sqrt
 * square
 * sub
 * to_bytes
 * zero


TRAIT IMPLEMENTATIONS

 * Add<&'b Scalar>
 * Add<&'b Scalar>
 * Add<Scalar>
 * Add<Scalar>
 * AddAssign<&'b Scalar>
 * AddAssign<Scalar>
 * Clone
 * ConditionallySelectable
 * ConstantTimeEq
 * Copy
 * Debug
 * Default
 * DefaultIsZeroes
 * Display
 * Eq
 * Field
 * From<u64>
 * FromRandom
 * Mul<&'b G1Affine>
 * Mul<&'b G1Affine>
 * Mul<&'b G1Projective>
 * Mul<&'b G1Projective>
 * Mul<&'b G2Affine>
 * Mul<&'b G2Affine>
 * Mul<&'b G2Projective>
 * Mul<&'b G2Projective>
 * Mul<&'b Scalar>
 * Mul<&'b Scalar>
 * Mul<&'b Scalar>
 * Mul<&'b Scalar>
 * Mul<&'b Scalar>
 * Mul<&'b Scalar>
 * Mul<G1Affine>
 * Mul<G1Affine>
 * Mul<G1Projective>
 * Mul<G1Projective>
 * Mul<G2Affine>
 * Mul<G2Affine>
 * Mul<G2Projective>
 * Mul<G2Projective>
 * Mul<Scalar>
 * Mul<Scalar>
 * Mul<Scalar>
 * Mul<Scalar>
 * Mul<Scalar>
 * Mul<Scalar>
 * MulAssign<&'b Scalar>
 * MulAssign<Scalar>
 * Neg
 * Neg
 * PartialEq<Scalar>
 * PrimeField
 * PrimeFieldBits
 * StructuralEq
 * Sub<&'b Scalar>
 * Sub<&'b Scalar>
 * Sub<Scalar>
 * Sub<Scalar>
 * SubAssign<&'b Scalar>
 * SubAssign<Scalar>
 * Sum<T>


AUTO TRAIT IMPLEMENTATIONS

 * RefUnwindSafe
 * Send
 * Sync
 * Unpin
 * UnwindSafe


BLANKET IMPLEMENTATIONS

 * Any
 * Borrow<T>
 * BorrowMut<T>
 * ConditionallyNegatable
 * Conv
 * FmtForward
 * From<T>
 * GroupOps<Rhs, Output>
 * GroupOpsOwned<Rhs, Output>
 * Into<U>
 * Pipe
 * Same<T>
 * ScalarMul<Rhs, Output>
 * ScalarMulOwned<Rhs, Output>
 * Tap
 * ToOwned
 * ToString
 * TryConv
 * TryFrom<U>
 * TryInto<U>
 * VZip<V>
 * Zeroize


IN TBS [index.html]

? [../help.html]
Change settings [../static.files/wheel-5ec35bf9ca753509.svg]../settings.html


STRUCT TBS [index.html]::SCALARCopy item path [../static.files/clipboard-7571035ce49a181d.svg]

[−]

pub struct Scalar(_);

Expand description

Represents an element of the scalar field $\mathbb{F}_q$ of the BLS12-381 elliptic curve construction.


IMPLEMENTATIONS§

§


IMPL SCALAR [struct.Scalar.html]

PUB CONST FN ZERO() -> SCALAR [struct.Scalar.html]

Returns zero, the additive identity.

PUB CONST FN ONE() -> SCALAR [struct.Scalar.html]

Returns one, the multiplicative identity.

PUB CONST FN DOUBLE(&SELF) -> SCALAR [struct.Scalar.html]

Doubles this field element.

PUB FN FROM_BYTES(BYTES: &[U8 [https://doc.rust-lang.org/1.67.0/std/primitive.u8.html]; 32
[https://doc.rust-lang.org/1.67.0/std/primitive.array.html]]) -> CTOPTION
[https://docs.rs/subtle/2.4.1/subtle/struct.CtOption.html]<SCALAR [struct.Scalar.html]>

Attempts to convert a little-endian byte representation of a scalar into a Scalar, failing if the input is not canonical.

PUB FN TO_BYTES(&SELF) -> [U8 [https://doc.rust-lang.org/1.67.0/std/primitive.u8.html]; 32
[https://doc.rust-lang.org/1.67.0/std/primitive.array.html]]

Converts an element of Scalar into a byte representation in little-endian byte order.

PUB FN FROM_BYTES_WIDE(BYTES: &[U8 [https://doc.rust-lang.org/1.67.0/std/primitive.u8.html]; 64
[https://doc.rust-lang.org/1.67.0/std/primitive.array.html]]) -> SCALAR [struct.Scalar.html]

Converts a 512-bit little endian integer into a Scalar by reducing by the modulus.

PUB CONST FN FROM_RAW(VAL: [U64 [https://doc.rust-lang.org/1.67.0/std/primitive.u64.html]; 4
[https://doc.rust-lang.org/1.67.0/std/primitive.array.html]]) -> SCALAR [struct.Scalar.html]

Converts from an integer represented in little endian into its (congruent) Scalar representation.

PUB CONST FN SQUARE(&SELF) -> SCALAR [struct.Scalar.html]

Squares this element.

PUB FN SQRT(&SELF) -> CTOPTION [https://docs.rs/subtle/2.4.1/subtle/struct.CtOption.html]<SCALAR [struct.Scalar.html]>

Computes the square root of this element, if it exists.

PUB FN POW(&SELF, BY: &[U64 [https://doc.rust-lang.org/1.67.0/std/primitive.u64.html]; 4
[https://doc.rust-lang.org/1.67.0/std/primitive.array.html]]) -> SCALAR [struct.Scalar.html]

Exponentiates self by by, where by is a little-endian order integer exponent.

PUB FN POW_VARTIME(&SELF, BY: &[U64 [https://doc.rust-lang.org/1.67.0/std/primitive.u64.html]; 4
[https://doc.rust-lang.org/1.67.0/std/primitive.array.html]]) -> SCALAR [struct.Scalar.html]

Exponentiates self by by, where by is a little-endian order integer exponent.

This operation is variable time with respect to the exponent. If the exponent is fixed, this operation is effectively constant
time.

PUB FN INVERT(&SELF) -> CTOPTION [https://docs.rs/subtle/2.4.1/subtle/struct.CtOption.html]<SCALAR [struct.Scalar.html]>

Computes the multiplicative inverse of this element, failing if the element is zero.

PUB CONST FN MUL(&SELF, RHS: &SCALAR [struct.Scalar.html]) -> SCALAR [struct.Scalar.html]

Multiplies rhs by self, returning the result.

PUB CONST FN SUB(&SELF, RHS: &SCALAR [struct.Scalar.html]) -> SCALAR [struct.Scalar.html]

Subtracts rhs from self, returning the result.

PUB CONST FN ADD(&SELF, RHS: &SCALAR [struct.Scalar.html]) -> SCALAR [struct.Scalar.html]

Adds rhs to self, returning the result.

PUB CONST FN NEG(&SELF) -> SCALAR [struct.Scalar.html]

Negates self.


TRAIT IMPLEMENTATIONS§

§


IMPL<'A, 'B> ADD [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Add.html]<&'B SCALAR [struct.Scalar.html]> FOR &'A SCALAR
[struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Add.html#associatedtype.Output] = SCALAR [struct.Scalar.html]

The resulting type after applying the + operator.
§

FN ADD [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Add.html#tymethod.add](SELF, RHS: &'B SCALAR [struct.Scalar.html])
-> SCALAR [struct.Scalar.html]

Performs the + operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Add.html#tymethod.add]
§


IMPL<'B> ADD [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Add.html]<&'B SCALAR [struct.Scalar.html]> FOR SCALAR
[struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Add.html#associatedtype.Output] = SCALAR [struct.Scalar.html]

The resulting type after applying the + operator.
§

FN ADD [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Add.html#tymethod.add](SELF, RHS: &'B SCALAR [struct.Scalar.html])
-> SCALAR [struct.Scalar.html]

Performs the + operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Add.html#tymethod.add]
§


IMPL<'A> ADD [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Add.html]<SCALAR [struct.Scalar.html]> FOR &'A SCALAR
[struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Add.html#associatedtype.Output] = SCALAR [struct.Scalar.html]

The resulting type after applying the + operator.
§

FN ADD [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Add.html#tymethod.add](SELF, RHS: SCALAR [struct.Scalar.html]) ->
SCALAR [struct.Scalar.html]

Performs the + operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Add.html#tymethod.add]
§


IMPL ADD [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Add.html]<SCALAR [struct.Scalar.html]> FOR SCALAR
[struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Add.html#associatedtype.Output] = SCALAR [struct.Scalar.html]

The resulting type after applying the + operator.
§

FN ADD [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Add.html#tymethod.add](SELF, RHS: SCALAR [struct.Scalar.html]) ->
SCALAR [struct.Scalar.html]

Performs the + operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Add.html#tymethod.add]
§


IMPL<'B> ADDASSIGN [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.AddAssign.html]<&'B SCALAR [struct.Scalar.html]> FOR
SCALAR [struct.Scalar.html]

§

FN ADD_ASSIGN [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign](&MUT SELF, RHS: &'B
SCALAR [struct.Scalar.html])

Performs the += operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign]
§


IMPL ADDASSIGN [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.AddAssign.html]<SCALAR [struct.Scalar.html]> FOR SCALAR
[struct.Scalar.html]

§

FN ADD_ASSIGN [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign](&MUT SELF, RHS: SCALAR
[struct.Scalar.html])

Performs the += operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign]
§


IMPL CLONE [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html] FOR SCALAR [struct.Scalar.html]

§

FN CLONE [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html#tymethod.clone](&SELF) -> SCALAR [struct.Scalar.html]

Returns a copy of the value. Read more [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html#tymethod.clone]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/clone.rs.html#132-134]§

FN CLONE_FROM [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html#method.clone_from](&MUT SELF, SOURCE: &
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)

Performs copy-assignment from source. Read more [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html#method.clone_from]
§


IMPL CONDITIONALLYSELECTABLE [https://docs.rs/subtle/2.4.1/subtle/trait.ConditionallySelectable.html] FOR SCALAR
[struct.Scalar.html]

§

FN CONDITIONAL_SELECT [https://docs.rs/subtle/2.4.1/subtle/trait.ConditionallySelectable.html#tymethod.conditional_select](A:
&SCALAR [struct.Scalar.html], B: &SCALAR [struct.Scalar.html], CHOICE: CHOICE
[https://docs.rs/subtle/2.4.1/subtle/struct.Choice.html]) -> SCALAR [struct.Scalar.html]

Select a or b according to choice. Read more
[https://docs.rs/subtle/2.4.1/subtle/trait.ConditionallySelectable.html#tymethod.conditional_select]
source [https://docs.rs/subtle/2.4.1/src/subtle/lib.rs.html#407]§

FN CONDITIONAL_ASSIGN [https://docs.rs/subtle/2.4.1/subtle/trait.ConditionallySelectable.html#method.conditional_assign](&MUT
SELF, OTHER: & [https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF, CHOICE: CHOICE
[https://docs.rs/subtle/2.4.1/subtle/struct.Choice.html])

Conditionally assign other to self, according to choice. Read more
[https://docs.rs/subtle/2.4.1/subtle/trait.ConditionallySelectable.html#method.conditional_assign]
source [https://docs.rs/subtle/2.4.1/src/subtle/lib.rs.html#435]§

FN CONDITIONAL_SWAP [https://docs.rs/subtle/2.4.1/subtle/trait.ConditionallySelectable.html#method.conditional_swap](A: &MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF, B: &MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF, CHOICE: CHOICE
[https://docs.rs/subtle/2.4.1/subtle/struct.Choice.html])

Conditionally swap self and other if choice == 1; otherwise, reassign both unto themselves. Read more
[https://docs.rs/subtle/2.4.1/subtle/trait.ConditionallySelectable.html#method.conditional_swap]
§


IMPL CONSTANTTIMEEQ [https://docs.rs/subtle/2.4.1/subtle/trait.ConstantTimeEq.html] FOR SCALAR [struct.Scalar.html]

§

FN CT_EQ [https://docs.rs/subtle/2.4.1/subtle/trait.ConstantTimeEq.html#tymethod.ct_eq](&SELF, OTHER: &SCALAR
[struct.Scalar.html]) -> CHOICE [https://docs.rs/subtle/2.4.1/subtle/struct.Choice.html]

Determine if two items are equal. Read more [https://docs.rs/subtle/2.4.1/subtle/trait.ConstantTimeEq.html#tymethod.ct_eq]
§


IMPL DEBUG [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Debug.html] FOR SCALAR [struct.Scalar.html]

§

FN FMT [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Debug.html#tymethod.fmt](&SELF, F: &MUT FORMATTER
[https://doc.rust-lang.org/1.67.0/core/fmt/struct.Formatter.html]<'_>) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/core/fmt/struct.Error.html]>

Formats the value using the given formatter. Read more [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Debug.html#tymethod.fmt]
§


IMPL DEFAULT [https://doc.rust-lang.org/1.67.0/core/default/trait.Default.html] FOR SCALAR [struct.Scalar.html]

§

FN DEFAULT [https://doc.rust-lang.org/1.67.0/core/default/trait.Default.html#tymethod.default]() -> SCALAR [struct.Scalar.html]

Returns the “default value” for a type. Read more
[https://doc.rust-lang.org/1.67.0/core/default/trait.Default.html#tymethod.default]
§


IMPL DISPLAY [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Display.html] FOR SCALAR [struct.Scalar.html]

§

FN FMT [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Display.html#tymethod.fmt](&SELF, F: &MUT FORMATTER
[https://doc.rust-lang.org/1.67.0/core/fmt/struct.Formatter.html]<'_>) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<() [https://doc.rust-lang.org/1.67.0/std/primitive.unit.html],
ERROR [https://doc.rust-lang.org/1.67.0/core/fmt/struct.Error.html]>

Formats the value using the given formatter. Read more [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Display.html#tymethod.fmt]
§


IMPL FIELD FOR SCALAR [struct.Scalar.html]

§

FN RANDOM(RNG: IMPL RNGCORE [https://rust-random.github.io/rand/rand_core/trait.RngCore.html]) -> SCALAR [struct.Scalar.html]

Returns an element chosen uniformly at random using a user-provided RNG.
§

FN ZERO() -> SCALAR [struct.Scalar.html]

Returns the zero element of the field, the additive identity.
§

FN ONE() -> SCALAR [struct.Scalar.html]

Returns the one element of the field, the multiplicative identity.
§

FN SQUARE(&SELF) -> SCALAR [struct.Scalar.html]

Squares this element.
§

FN DOUBLE(&SELF) -> SCALAR [struct.Scalar.html]

Doubles this element.
§

FN INVERT(&SELF) -> CTOPTION [https://docs.rs/subtle/2.4.1/subtle/struct.CtOption.html]<SCALAR [struct.Scalar.html]>

Computes the multiplicative inverse of this element, failing if the element is zero. Read more
§

FN SQRT(&SELF) -> CTOPTION [https://docs.rs/subtle/2.4.1/subtle/struct.CtOption.html]<SCALAR [struct.Scalar.html]>

Returns the square root of the field element, if it is quadratic residue. Read more
§

FN IS_ZERO(&SELF) -> CHOICE [https://docs.rs/subtle/2.4.1/subtle/struct.Choice.html]

Returns true iff this element is zero.
§

FN IS_ZERO_VARTIME(&SELF) -> BOOL [https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]

Returns true iff this element is zero. Read more
§

FN CUBE(&SELF) -> SELF

Cubes this element.
§

FN POW_VARTIME<S>(&SELF, EXP: S) -> SELFWHERE
    S: ASREF [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsRef.html]<[U64
[https://doc.rust-lang.org/1.67.0/std/primitive.u64.html]]>,

Exponentiates self by exp, where exp is a little-endian order integer exponent. Read more
§


IMPL FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<U64
[https://doc.rust-lang.org/1.67.0/std/primitive.u64.html]> FOR SCALAR [struct.Scalar.html]

§

FN FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html#tymethod.from](VAL: U64
[https://doc.rust-lang.org/1.67.0/std/primitive.u64.html]) -> SCALAR [struct.Scalar.html]

Converts to this type from the input type.
source [../src/tbs/lib.rs.html#72-76]§


IMPL FROMRANDOM [trait.FromRandom.html] FOR SCALAR [struct.Scalar.html]

source [../src/tbs/lib.rs.html#73-75]§

FN FROM_RANDOM [trait.FromRandom.html#tymethod.from_random](RNG: &MUT IMPL RNGCORE
[https://rust-random.github.io/rand/rand_core/trait.RngCore.html]) -> SELF

§


IMPL<'A, 'B> MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<&'B G1AFFINE [struct.MessagePoint.html]> FOR &'A
SCALAR [struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = G1PROJECTIVE

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, RHS: &'B G1AFFINE
[struct.MessagePoint.html]) -> <&'A SCALAR [struct.Scalar.html] AS MUL
[https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<&'B G1AFFINE [struct.MessagePoint.html]>>::OUTPUT
[https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output]

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL<'B> MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<&'B G1AFFINE [struct.MessagePoint.html]> FOR SCALAR
[struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = G1PROJECTIVE

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, RHS: &'B G1AFFINE
[struct.MessagePoint.html]) -> G1PROJECTIVE

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL<'A, 'B> MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<&'B G1PROJECTIVE> FOR &'A SCALAR
[struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = G1PROJECTIVE

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](
    SELF,
    RHS: &'B G1PROJECTIVE
) -> <&'A SCALAR [struct.Scalar.html] AS MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<&'B
G1PROJECTIVE>>::OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output]

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL<'B> MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<&'B G1PROJECTIVE> FOR SCALAR [struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = G1PROJECTIVE

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, RHS: &'B G1PROJECTIVE) -> G1PROJECTIVE

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL<'A, 'B> MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<&'B G2AFFINE [struct.PubKeyPoint.html]> FOR &'A
SCALAR [struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = G2PROJECTIVE

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, RHS: &'B G2AFFINE
[struct.PubKeyPoint.html]) -> <&'A SCALAR [struct.Scalar.html] AS MUL
[https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<&'B G2AFFINE [struct.PubKeyPoint.html]>>::OUTPUT
[https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output]

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL<'B> MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<&'B G2AFFINE [struct.PubKeyPoint.html]> FOR SCALAR
[struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = G2PROJECTIVE

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, RHS: &'B G2AFFINE
[struct.PubKeyPoint.html]) -> G2PROJECTIVE

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL<'A, 'B> MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<&'B G2PROJECTIVE> FOR &'A SCALAR
[struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = G2PROJECTIVE

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](
    SELF,
    RHS: &'B G2PROJECTIVE
) -> <&'A SCALAR [struct.Scalar.html] AS MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<&'B
G2PROJECTIVE>>::OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output]

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL<'B> MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<&'B G2PROJECTIVE> FOR SCALAR [struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = G2PROJECTIVE

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, RHS: &'B G2PROJECTIVE) -> G2PROJECTIVE

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL<'A, 'B> MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<&'B SCALAR [struct.Scalar.html]> FOR &'A
G1AFFINE [struct.MessagePoint.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = G1PROJECTIVE

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, OTHER: &'B SCALAR [struct.Scalar.html])
-> <&'A G1AFFINE [struct.MessagePoint.html] AS MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<&'B SCALAR
[struct.Scalar.html]>>::OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output]

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL<'A, 'B> MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<&'B SCALAR [struct.Scalar.html]> FOR &'A
G2AFFINE [struct.PubKeyPoint.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = G2PROJECTIVE

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, OTHER: &'B SCALAR [struct.Scalar.html])
-> <&'A G2AFFINE [struct.PubKeyPoint.html] AS MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<&'B SCALAR
[struct.Scalar.html]>>::OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output]

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL<'A, 'B> MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<&'B SCALAR [struct.Scalar.html]> FOR &'A SCALAR
[struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = SCALAR [struct.Scalar.html]

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, RHS: &'B SCALAR [struct.Scalar.html])
-> SCALAR [struct.Scalar.html]

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL<'B> MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<&'B SCALAR [struct.Scalar.html]> FOR G1AFFINE
[struct.MessagePoint.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = G1PROJECTIVE

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, RHS: &'B SCALAR [struct.Scalar.html])
-> G1PROJECTIVE

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL<'B> MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<&'B SCALAR [struct.Scalar.html]> FOR G2AFFINE
[struct.PubKeyPoint.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = G2PROJECTIVE

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, RHS: &'B SCALAR [struct.Scalar.html])
-> G2PROJECTIVE

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL<'B> MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<&'B SCALAR [struct.Scalar.html]> FOR SCALAR
[struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = SCALAR [struct.Scalar.html]

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, RHS: &'B SCALAR [struct.Scalar.html])
-> SCALAR [struct.Scalar.html]

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL<'A> MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<G1AFFINE [struct.MessagePoint.html]> FOR &'A SCALAR
[struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = G1PROJECTIVE

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, RHS: G1AFFINE
[struct.MessagePoint.html]) -> G1PROJECTIVE

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<G1AFFINE [struct.MessagePoint.html]> FOR SCALAR
[struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = G1PROJECTIVE

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, RHS: G1AFFINE
[struct.MessagePoint.html]) -> G1PROJECTIVE

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL<'A> MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<G1PROJECTIVE> FOR &'A SCALAR [struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = G1PROJECTIVE

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, RHS: G1PROJECTIVE) -> G1PROJECTIVE

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<G1PROJECTIVE> FOR SCALAR [struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = G1PROJECTIVE

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, RHS: G1PROJECTIVE) -> G1PROJECTIVE

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL<'A> MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<G2AFFINE [struct.PubKeyPoint.html]> FOR &'A SCALAR
[struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = G2PROJECTIVE

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, RHS: G2AFFINE
[struct.PubKeyPoint.html]) -> G2PROJECTIVE

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<G2AFFINE [struct.PubKeyPoint.html]> FOR SCALAR
[struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = G2PROJECTIVE

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, RHS: G2AFFINE
[struct.PubKeyPoint.html]) -> G2PROJECTIVE

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL<'A> MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<G2PROJECTIVE> FOR &'A SCALAR [struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = G2PROJECTIVE

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, RHS: G2PROJECTIVE) -> G2PROJECTIVE

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<G2PROJECTIVE> FOR SCALAR [struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = G2PROJECTIVE

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, RHS: G2PROJECTIVE) -> G2PROJECTIVE

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL<'A> MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<SCALAR [struct.Scalar.html]> FOR &'A G1AFFINE
[struct.MessagePoint.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = G1PROJECTIVE

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, RHS: SCALAR [struct.Scalar.html]) ->
G1PROJECTIVE

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL<'A> MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<SCALAR [struct.Scalar.html]> FOR &'A G2AFFINE
[struct.PubKeyPoint.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = G2PROJECTIVE

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, RHS: SCALAR [struct.Scalar.html]) ->
G2PROJECTIVE

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL<'A> MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<SCALAR [struct.Scalar.html]> FOR &'A SCALAR
[struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = SCALAR [struct.Scalar.html]

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, RHS: SCALAR [struct.Scalar.html]) ->
SCALAR [struct.Scalar.html]

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<SCALAR [struct.Scalar.html]> FOR G1AFFINE
[struct.MessagePoint.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = G1PROJECTIVE

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, RHS: SCALAR [struct.Scalar.html]) ->
G1PROJECTIVE

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<SCALAR [struct.Scalar.html]> FOR G2AFFINE
[struct.PubKeyPoint.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = G2PROJECTIVE

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, RHS: SCALAR [struct.Scalar.html]) ->
G2PROJECTIVE

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<SCALAR [struct.Scalar.html]> FOR SCALAR
[struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#associatedtype.Output] = SCALAR [struct.Scalar.html]

The resulting type after applying the * operator.
§

FN MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul](SELF, RHS: SCALAR [struct.Scalar.html]) ->
SCALAR [struct.Scalar.html]

Performs the * operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html#tymethod.mul]
§


IMPL<'B> MULASSIGN [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.MulAssign.html]<&'B SCALAR [struct.Scalar.html]> FOR
SCALAR [struct.Scalar.html]

§

FN MUL_ASSIGN [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign](&MUT SELF, RHS: &'B
SCALAR [struct.Scalar.html])

Performs the *= operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign]
§


IMPL MULASSIGN [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.MulAssign.html]<SCALAR [struct.Scalar.html]> FOR SCALAR
[struct.Scalar.html]

§

FN MUL_ASSIGN [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign](&MUT SELF, RHS: SCALAR
[struct.Scalar.html])

Performs the *= operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign]
§


IMPL<'A> NEG [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Neg.html] FOR &'A SCALAR [struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Neg.html#associatedtype.Output] = SCALAR [struct.Scalar.html]

The resulting type after applying the - operator.
§

FN NEG [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Neg.html#tymethod.neg](SELF) -> SCALAR [struct.Scalar.html]

Performs the unary - operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Neg.html#tymethod.neg]
§


IMPL NEG [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Neg.html] FOR SCALAR [struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Neg.html#associatedtype.Output] = SCALAR [struct.Scalar.html]

The resulting type after applying the - operator.
§

FN NEG [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Neg.html#tymethod.neg](SELF) -> SCALAR [struct.Scalar.html]

Performs the unary - operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Neg.html#tymethod.neg]
§


IMPL PARTIALEQ [https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialEq.html]<SCALAR [struct.Scalar.html]> FOR SCALAR
[struct.Scalar.html]

§

FN EQ [https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialEq.html#tymethod.eq](&SELF, OTHER: &SCALAR [struct.Scalar.html]) ->
BOOL [https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]

This method tests for self and other values to be equal, and is used by ==. Read more
[https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialEq.html#tymethod.eq]
1.0.0 · source [https://doc.rust-lang.org/1.67.0/src/core/cmp.rs.html#229]§

FN NE [https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialEq.html#method.ne](&SELF, OTHER: &
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]RHS) -> BOOL
[https://doc.rust-lang.org/1.67.0/std/primitive.bool.html]

This method tests for !=. The default implementation is almost always sufficient, and should not be overridden without very good
reason. Read more [https://doc.rust-lang.org/1.67.0/core/cmp/trait.PartialEq.html#method.ne]
§


IMPL PRIMEFIELD FOR SCALAR [struct.Scalar.html]

§

TYPE REPR = [U8 [https://doc.rust-lang.org/1.67.0/std/primitive.u8.html]; 32
[https://doc.rust-lang.org/1.67.0/std/primitive.array.html]]

The prime field can be converted back and forth into this binary representation. Read more
§

FN FROM_REPR(R: <SCALAR [struct.Scalar.html] AS PRIMEFIELD>::REPR) -> CTOPTION
[https://docs.rs/subtle/2.4.1/subtle/struct.CtOption.html]<SCALAR [struct.Scalar.html]>

Attempts to convert a byte representation of a field element into an element of this prime field, failing if the input is not
canonical (is not smaller than the field’s modulus). Read more
§

FN TO_REPR(&SELF) -> <SCALAR [struct.Scalar.html] AS PRIMEFIELD>::REPR

Converts an element of the prime field into the standard byte representation for this field. Read more
§

FN IS_ODD(&SELF) -> CHOICE [https://docs.rs/subtle/2.4.1/subtle/struct.Choice.html]

Returns true iff this element is odd.
§

CONST NUM_BITS: U32 [https://doc.rust-lang.org/1.67.0/std/primitive.u32.html] = 255U32

How many bits are needed to represent an element of this field.
§

CONST CAPACITY: U32 [https://doc.rust-lang.org/1.67.0/std/primitive.u32.html] = 254U32

How many bits of information can be reliably stored in the field element. Read more
§

FN MULTIPLICATIVE_GENERATOR() -> SCALAR [struct.Scalar.html]

Returns a fixed multiplicative generator of modulus - 1 order. This element must also be a quadratic nonresidue. Read more
§

CONST S: U32 [https://doc.rust-lang.org/1.67.0/std/primitive.u32.html] = 32U32

An integer s satisfying the equation 2^s * t = modulus - 1 with t odd. Read more
§

FN ROOT_OF_UNITY() -> SCALAR [struct.Scalar.html]

Returns the 2^s root of unity. Read more
§

FN FROM_STR_VARTIME(S: &STR [https://doc.rust-lang.org/1.67.0/std/primitive.str.html]) -> OPTION
[https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<SELF>

Interpret a string of numbers as a (congruent) prime field element. Does not accept unnecessary leading zeroes or a blank string.
Read more
§

FN FROM_REPR_VARTIME(REPR: SELF::REPR) -> OPTION [https://doc.rust-lang.org/1.67.0/core/option/enum.Option.html]<SELF>

Attempts to convert a byte representation of a field element into an element of this prime field, failing if the input is not
canonical (is not smaller than the field’s modulus). Read more
§

FN IS_EVEN(&SELF) -> CHOICE [https://docs.rs/subtle/2.4.1/subtle/struct.Choice.html]

Returns true iff this element is even.
§


IMPL PRIMEFIELDBITS FOR SCALAR [struct.Scalar.html]

§

TYPE REPRBITS = [U64 [https://doc.rust-lang.org/1.67.0/std/primitive.u64.html]; 4
[https://doc.rust-lang.org/1.67.0/std/primitive.array.html]]

The backing store for a bit representation of a prime field element.
§

FN TO_LE_BITS(&SELF) -> BITARRAY<<SCALAR [struct.Scalar.html] AS PRIMEFIELDBITS>::REPRBITS, LSB0>

Converts an element of the prime field into a little-endian sequence of bits.
§

FN CHAR_LE_BITS() -> BITARRAY<<SCALAR [struct.Scalar.html] AS PRIMEFIELDBITS>::REPRBITS, LSB0>

Returns the bits of the field characteristic (the modulus) in little-endian order.
§


IMPL<'A, 'B> SUB [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Sub.html]<&'B SCALAR [struct.Scalar.html]> FOR &'A SCALAR
[struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Sub.html#associatedtype.Output] = SCALAR [struct.Scalar.html]

The resulting type after applying the - operator.
§

FN SUB [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Sub.html#tymethod.sub](SELF, RHS: &'B SCALAR [struct.Scalar.html])
-> SCALAR [struct.Scalar.html]

Performs the - operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Sub.html#tymethod.sub]
§


IMPL<'B> SUB [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Sub.html]<&'B SCALAR [struct.Scalar.html]> FOR SCALAR
[struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Sub.html#associatedtype.Output] = SCALAR [struct.Scalar.html]

The resulting type after applying the - operator.
§

FN SUB [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Sub.html#tymethod.sub](SELF, RHS: &'B SCALAR [struct.Scalar.html])
-> SCALAR [struct.Scalar.html]

Performs the - operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Sub.html#tymethod.sub]
§


IMPL<'A> SUB [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Sub.html]<SCALAR [struct.Scalar.html]> FOR &'A SCALAR
[struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Sub.html#associatedtype.Output] = SCALAR [struct.Scalar.html]

The resulting type after applying the - operator.
§

FN SUB [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Sub.html#tymethod.sub](SELF, RHS: SCALAR [struct.Scalar.html]) ->
SCALAR [struct.Scalar.html]

Performs the - operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Sub.html#tymethod.sub]
§


IMPL SUB [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Sub.html]<SCALAR [struct.Scalar.html]> FOR SCALAR
[struct.Scalar.html]

§

TYPE OUTPUT [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Sub.html#associatedtype.Output] = SCALAR [struct.Scalar.html]

The resulting type after applying the - operator.
§

FN SUB [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Sub.html#tymethod.sub](SELF, RHS: SCALAR [struct.Scalar.html]) ->
SCALAR [struct.Scalar.html]

Performs the - operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Sub.html#tymethod.sub]
§


IMPL<'B> SUBASSIGN [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.SubAssign.html]<&'B SCALAR [struct.Scalar.html]> FOR
SCALAR [struct.Scalar.html]

§

FN SUB_ASSIGN [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign](&MUT SELF, RHS: &'B
SCALAR [struct.Scalar.html])

Performs the -= operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign]
§


IMPL SUBASSIGN [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.SubAssign.html]<SCALAR [struct.Scalar.html]> FOR SCALAR
[struct.Scalar.html]

§

FN SUB_ASSIGN [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign](&MUT SELF, RHS: SCALAR
[struct.Scalar.html])

Performs the -= operation. Read more [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign]
§


IMPL<T> SUM [https://doc.rust-lang.org/1.67.0/core/iter/traits/accum/trait.Sum.html]<T> FOR SCALAR [struct.Scalar.html]WHERE
    T: BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<SCALAR [struct.Scalar.html]>,

§

FN SUM [https://doc.rust-lang.org/1.67.0/core/iter/traits/accum/trait.Sum.html#tymethod.sum]<I>(ITER: I) -> SCALAR
[struct.Scalar.html]WHERE
    I: ITERATOR [https://doc.rust-lang.org/1.67.0/core/iter/traits/iterator/trait.Iterator.html]<ITEM = T>,

Method which takes an iterator and generates Self from the elements by “summing up” the items. Read more
[https://doc.rust-lang.org/1.67.0/core/iter/traits/accum/trait.Sum.html#tymethod.sum]
§


IMPL COPY [https://doc.rust-lang.org/1.67.0/core/marker/trait.Copy.html] FOR SCALAR [struct.Scalar.html]

§


IMPL DEFAULTISZEROES FOR SCALAR [struct.Scalar.html]

§


IMPL EQ [https://doc.rust-lang.org/1.67.0/core/cmp/trait.Eq.html] FOR SCALAR [struct.Scalar.html]

§


IMPL STRUCTURALEQ [https://doc.rust-lang.org/1.67.0/core/marker/trait.StructuralEq.html] FOR SCALAR [struct.Scalar.html]


AUTO TRAIT IMPLEMENTATIONS§

§


IMPL REFUNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.RefUnwindSafe.html] FOR SCALAR
[struct.Scalar.html]

§


IMPL SEND [https://doc.rust-lang.org/1.67.0/core/marker/trait.Send.html] FOR SCALAR [struct.Scalar.html]

§


IMPL SYNC [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sync.html] FOR SCALAR [struct.Scalar.html]

§


IMPL UNPIN [https://doc.rust-lang.org/1.67.0/core/marker/trait.Unpin.html] FOR SCALAR [struct.Scalar.html]

§


IMPL UNWINDSAFE [https://doc.rust-lang.org/1.67.0/core/panic/unwind_safe/trait.UnwindSafe.html] FOR SCALAR [struct.Scalar.html]


BLANKET IMPLEMENTATIONS§

source [https://doc.rust-lang.org/1.67.0/src/core/any.rs.html#200]§


IMPL<T> ANY [https://doc.rust-lang.org/1.67.0/core/any/trait.Any.html] FOR TWHERE
    T: 'STATIC + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

source [https://doc.rust-lang.org/1.67.0/src/core/any.rs.html#201]§

FN TYPE_ID [https://doc.rust-lang.org/1.67.0/core/any/trait.Any.html#tymethod.type_id](&SELF) -> TYPEID
[https://doc.rust-lang.org/1.67.0/core/any/struct.TypeId.html]

Gets the TypeId of self. Read more [https://doc.rust-lang.org/1.67.0/core/any/trait.Any.html#tymethod.type_id]
source [https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#211]§


IMPL<T> BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<T> FOR TWHERE
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

const: unstable [https://github.com/rust-lang/rust/issues/91522] · source
[https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#213]§

FN BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html#tymethod.borrow](&SELF) -> &
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T

Immutably borrows from an owned value. Read more [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html#tymethod.borrow]
source [https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#220]§


IMPL<T> BORROWMUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html]<T> FOR TWHERE
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

const: unstable [https://github.com/rust-lang/rust/issues/91522] · source
[https://doc.rust-lang.org/1.67.0/src/core/borrow.rs.html#221]§

FN BORROW_MUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut](&MUT SELF) -> &MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T

Mutably borrows from an owned value. Read more
[https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut]
source [https://docs.rs/subtle/2.4.1/src/subtle/lib.rs.html#537]§


IMPL<T> CONDITIONALLYNEGATABLE [https://docs.rs/subtle/2.4.1/subtle/trait.ConditionallyNegatable.html] FOR TWHERE
    T: CONDITIONALLYSELECTABLE [https://docs.rs/subtle/2.4.1/subtle/trait.ConditionallySelectable.html],
    &'A [https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T: FOR<'A> NEG
[https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Neg.html]<OUTPUT = T>,

source [https://docs.rs/subtle/2.4.1/src/subtle/lib.rs.html#543]§

FN CONDITIONAL_NEGATE [https://docs.rs/subtle/2.4.1/subtle/trait.ConditionallyNegatable.html#tymethod.conditional_negate](&MUT
SELF, CHOICE: CHOICE [https://docs.rs/subtle/2.4.1/subtle/struct.Choice.html])

Negate self if choice == Choice(1); otherwise, leave it unchanged. Read more
[https://docs.rs/subtle/2.4.1/subtle/trait.ConditionallyNegatable.html#tymethod.conditional_negate]
§


IMPL<T> CONV FOR T

§

FN CONV<T>(SELF) -> TWHERE
    SELF: INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<T>,

Converts self into T using Into<T>. Read more
§


IMPL<T> FMTFORWARD FOR T

§

FN FMT_BINARY(SELF) -> FMTBINARY<SELF>WHERE
    SELF: BINARY [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Binary.html],

Causes self to use its Binary implementation when Debug-formatted.
§

FN FMT_DISPLAY(SELF) -> FMTDISPLAY<SELF>WHERE
    SELF: DISPLAY [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Display.html],

Causes self to use its Display implementation when Debug-formatted. Read more
§

FN FMT_LOWER_EXP(SELF) -> FMTLOWEREXP<SELF>WHERE
    SELF: LOWEREXP [https://doc.rust-lang.org/1.67.0/core/fmt/trait.LowerExp.html],

Causes self to use its LowerExp implementation when Debug-formatted. Read more
§

FN FMT_LOWER_HEX(SELF) -> FMTLOWERHEX<SELF>WHERE
    SELF: LOWERHEX [https://doc.rust-lang.org/1.67.0/core/fmt/trait.LowerHex.html],

Causes self to use its LowerHex implementation when Debug-formatted. Read more
§

FN FMT_OCTAL(SELF) -> FMTOCTAL<SELF>WHERE
    SELF: OCTAL [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Octal.html],

Causes self to use its Octal implementation when Debug-formatted.
§

FN FMT_POINTER(SELF) -> FMTPOINTER<SELF>WHERE
    SELF: POINTER [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Pointer.html],

Causes self to use its Pointer implementation when Debug-formatted. Read more
§

FN FMT_UPPER_EXP(SELF) -> FMTUPPEREXP<SELF>WHERE
    SELF: UPPEREXP [https://doc.rust-lang.org/1.67.0/core/fmt/trait.UpperExp.html],

Causes self to use its UpperExp implementation when Debug-formatted. Read more
§

FN FMT_UPPER_HEX(SELF) -> FMTUPPERHEX<SELF>WHERE
    SELF: UPPERHEX [https://doc.rust-lang.org/1.67.0/core/fmt/trait.UpperHex.html],

Causes self to use its UpperHex implementation when Debug-formatted. Read more
§

FN FMT_LIST(SELF) -> FMTLIST<SELF>WHERE
    &'A [https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF: FOR<'A> INTOITERATOR
[https://doc.rust-lang.org/1.67.0/core/iter/traits/collect/trait.IntoIterator.html],

Formats each item in a sequence. Read more
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#733]§


IMPL<T> FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<T> FOR T

const: unstable [https://github.com/rust-lang/rust/issues/88674] · source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#736]§

FN FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html#tymethod.from](T: T) -> T

Returns the argument unchanged.

source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#717]§


IMPL<T, U> INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<U> FOR TWHERE
    U: FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<T>,

const: unstable [https://github.com/rust-lang/rust/issues/88674] · source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#725]§

FN INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html#tymethod.into](SELF) -> U

Calls U::from(self).

That is, this conversion is whatever the implementation of From [https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html]<T>
for U chooses to do.

§


IMPL<T> PIPE FOR TWHERE
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

§

FN PIPE<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](SELF) -> R) -> RWHERE
    SELF: SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Pipes by value. This is generally the method you want to use. Read more
§

FN PIPE_REF<'A, R>(&'A SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF) -> R) -> RWHERE
    R: 'A,

Borrows self and passes that borrow into the pipe function. Read more
§

FN PIPE_REF_MUT<'A, R>(&'A MUT SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
MUT [https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF) -> R) -> RWHERE
    R: 'A,

Mutably borrows self and passes that borrow into the pipe function. Read more
§

FN PIPE_BORROW<'A, B, R>(&'A SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B) -> R) -> RWHERE
    SELF: BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<B>,
    B: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Borrows self, then passes self.borrow() into the pipe function. Read more
§

FN PIPE_BORROW_MUT<'A, B, R>(
    &'A MUT SELF,
    FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B) -> R
) -> RWHERE
    SELF: BORROWMUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html]<B>,
    B: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Mutably borrows self, then passes self.borrow_mut() into the pipe function. Read more
§

FN PIPE_AS_REF<'A, U, R>(&'A SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]U) -> R) -> RWHERE
    SELF: ASREF [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsRef.html]<U>,
    U: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Borrows self, then passes self.as_ref() into the pipe function.
§

FN PIPE_AS_MUT<'A, U, R>(&'A MUT SELF, FUNC: IMPL FNONCE
[https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]U) -> R) -> RWHERE
    SELF: ASMUT [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsMut.html]<U>,
    U: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Mutably borrows self, then passes self.as_mut() into the pipe function. Read more
§

FN PIPE_DEREF<'A, T, R>(&'A SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T) -> R) -> RWHERE
    SELF: DEREF [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html]<TARGET = T>,
    T: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Borrows self, then passes self.deref() into the pipe function.
§

FN PIPE_DEREF_MUT<'A, T, R>(&'A MUT SELF, FUNC: IMPL FNONCE
[https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&'A MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T) -> R) -> RWHERE
    SELF: DEREFMUT [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.DerefMut.html]<TARGET = T> + DEREF
[https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html],
    T: 'A + ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],
    R: 'A,

Mutably borrows self, then passes self.deref_mut() into the pipe function. Read more
source [https://docs.rs/typenum/1.16.0/src/typenum/type_operators.rs.html#34]§


IMPL<T> SAME [https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Same.html]<T> FOR T

§

TYPE OUTPUT [https://docs.rs/typenum/1.16.0/typenum/type_operators/trait.Same.html#associatedtype.Output] = T

Should always be Self
§


IMPL<T> TAP FOR T

§

FN TAP(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)) -> SELF

Immutable access to a value. Read more
§

FN TAP_MUT(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)) -> SELF

Mutable access to a value. Read more
§

FN TAP_BORROW<B>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B)) -> SELFWHERE
    SELF: BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<B>,
    B: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Immutable access to the Borrow<B> of a value. Read more
§

FN TAP_BORROW_MUT<B>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B)) -> SELFWHERE
    SELF: BORROWMUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html]<B>,
    B: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Mutable access to the BorrowMut<B> of a value. Read more
§

FN TAP_REF<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R)) -> SELFWHERE
    SELF: ASREF [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsRef.html]<R>,
    R: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Immutable access to the AsRef<R> view of a value. Read more
§

FN TAP_REF_MUT<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R)) -> SELFWHERE
    SELF: ASMUT [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsMut.html]<R>,
    R: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Mutable access to the AsMut<R> view of a value. Read more
§

FN TAP_DEREF<T>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)) -> SELFWHERE
    SELF: DEREF [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html]<TARGET = T>,
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Immutable access to the Deref::Target of a value. Read more
§

FN TAP_DEREF_MUT<T>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)) -> SELFWHERE
    SELF: DEREFMUT [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.DerefMut.html]<TARGET = T> + DEREF
[https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html],
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Mutable access to the Deref::Target of a value. Read more
§

FN TAP_DBG(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)) -> SELF

Calls .tap() only in debug builds, and is erased in release builds.
§

FN TAP_MUT_DBG(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]SELF)) -> SELF

Calls .tap_mut() only in debug builds, and is erased in release builds. Read more
§

FN TAP_BORROW_DBG<B>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B)) -> SELFWHERE
    SELF: BORROW [https://doc.rust-lang.org/1.67.0/core/borrow/trait.Borrow.html]<B>,
    B: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_borrow() only in debug builds, and is erased in release builds. Read more
§

FN TAP_BORROW_MUT_DBG<B>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]B)) -> SELFWHERE
    SELF: BORROWMUT [https://doc.rust-lang.org/1.67.0/core/borrow/trait.BorrowMut.html]<B>,
    B: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_borrow_mut() only in debug builds, and is erased in release builds. Read more
§

FN TAP_REF_DBG<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R)) -> SELFWHERE
    SELF: ASREF [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsRef.html]<R>,
    R: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_ref() only in debug builds, and is erased in release builds. Read more
§

FN TAP_REF_MUT_DBG<R>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]R)) -> SELFWHERE
    SELF: ASMUT [https://doc.rust-lang.org/1.67.0/core/convert/trait.AsMut.html]<R>,
    R: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_ref_mut() only in debug builds, and is erased in release builds. Read more
§

FN TAP_DEREF_DBG<T>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)) -> SELFWHERE
    SELF: DEREF [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html]<TARGET = T>,
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_deref() only in debug builds, and is erased in release builds. Read more
§

FN TAP_DEREF_MUT_DBG<T>(SELF, FUNC: IMPL FNONCE [https://doc.rust-lang.org/1.67.0/core/ops/function/trait.FnOnce.html](&MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)) -> SELFWHERE
    SELF: DEREFMUT [https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.DerefMut.html]<TARGET = T> + DEREF
[https://doc.rust-lang.org/1.67.0/core/ops/deref/trait.Deref.html],
    T: ?SIZED [https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

Calls .tap_deref_mut() only in debug builds, and is erased in release builds. Read more
source [https://doc.rust-lang.org/1.67.0/src/alloc/borrow.rs.html#82]§


IMPL<T> TOOWNED [https://doc.rust-lang.org/1.67.0/alloc/borrow/trait.ToOwned.html] FOR TWHERE
    T: CLONE [https://doc.rust-lang.org/1.67.0/core/clone/trait.Clone.html],

§

TYPE OWNED [https://doc.rust-lang.org/1.67.0/alloc/borrow/trait.ToOwned.html#associatedtype.Owned] = T

The resulting type after obtaining ownership.
source [https://doc.rust-lang.org/1.67.0/src/alloc/borrow.rs.html#87]§

FN TO_OWNED [https://doc.rust-lang.org/1.67.0/alloc/borrow/trait.ToOwned.html#tymethod.to_owned](&SELF) -> T

Creates owned data from borrowed data, usually by cloning. Read more
[https://doc.rust-lang.org/1.67.0/alloc/borrow/trait.ToOwned.html#tymethod.to_owned]
source [https://doc.rust-lang.org/1.67.0/src/alloc/borrow.rs.html#91]§

FN CLONE_INTO [https://doc.rust-lang.org/1.67.0/alloc/borrow/trait.ToOwned.html#method.clone_into](&SELF, TARGET: &MUT
[https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]T)

Uses borrowed data to replace owned data, usually by cloning. Read more
[https://doc.rust-lang.org/1.67.0/alloc/borrow/trait.ToOwned.html#method.clone_into]
source [https://doc.rust-lang.org/1.67.0/src/alloc/string.rs.html#2526]§


IMPL<T> TOSTRING [https://doc.rust-lang.org/1.67.0/alloc/string/trait.ToString.html] FOR TWHERE
    T: DISPLAY [https://doc.rust-lang.org/1.67.0/core/fmt/trait.Display.html] + ?SIZED
[https://doc.rust-lang.org/1.67.0/core/marker/trait.Sized.html],

source [https://doc.rust-lang.org/1.67.0/src/alloc/string.rs.html#2532]§

DEFAULT FN TO_STRING [https://doc.rust-lang.org/1.67.0/alloc/string/trait.ToString.html#tymethod.to_string](&SELF) -> STRING
[https://doc.rust-lang.org/1.67.0/alloc/string/struct.String.html]

Converts the given value to a String. Read more
[https://doc.rust-lang.org/1.67.0/alloc/string/trait.ToString.html#tymethod.to_string]
§


IMPL<T> TRYCONV FOR T

§

FN TRY_CONV<T>(SELF) -> RESULT [https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<T, SELF::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html#associatedtype.Error]>WHERE
    SELF: TRYINTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html]<T>,

Attempts to convert self into T using TryInto<T>. Read more
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#775]§


IMPL<T, U> TRYFROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<U> FOR TWHERE
    U: INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.Into.html]<T>,

§

TYPE ERROR [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error] = INFALLIBLE
[https://doc.rust-lang.org/1.67.0/core/convert/enum.Infallible.html]

The type returned in the event of a conversion error.
const: unstable [https://github.com/rust-lang/rust/issues/88674] · source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#781]§

FN TRY_FROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#tymethod.try_from](VALUE: U) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<T, <T AS TRYFROM
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<U>>::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error]>

Performs the conversion.
source [https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#760]§


IMPL<T, U> TRYINTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html]<U> FOR TWHERE
    U: TRYFROM [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<T>,

§

TYPE ERROR [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html#associatedtype.Error] = <U AS TRYFROM
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<T>>::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error]

The type returned in the event of a conversion error.
const: unstable [https://github.com/rust-lang/rust/issues/88674] · source
[https://doc.rust-lang.org/1.67.0/src/core/convert/mod.rs.html#766]§

FN TRY_INTO [https://doc.rust-lang.org/1.67.0/core/convert/trait.TryInto.html#tymethod.try_into](SELF) -> RESULT
[https://doc.rust-lang.org/1.67.0/core/result/enum.Result.html]<U, <U AS TRYFROM
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html]<T>>::ERROR
[https://doc.rust-lang.org/1.67.0/core/convert/trait.TryFrom.html#associatedtype.Error]>

Performs the conversion.
§


IMPL<V, T> VZIP<V> FOR TWHERE
    V: MULTILANE<T>,

§

FN VZIP(SELF) -> V

§


IMPL<Z> ZEROIZE FOR ZWHERE
    Z: DEFAULTISZEROES,

§

FN ZEROIZE(&MUT SELF)

Zero out this object from memory using Rust intrinsics which ensure the zeroization operation is not “optimized away” by the
compiler. Read more
§


IMPL<T, RHS, OUTPUT> GROUPOPS<RHS, OUTPUT> FOR TWHERE
    T: ADD [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Add.html]<RHS, OUTPUT = OUTPUT> + SUB
[https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Sub.html]<RHS, OUTPUT = OUTPUT> + ADDASSIGN
[https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.AddAssign.html]<RHS> + SUBASSIGN
[https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.SubAssign.html]<RHS>,

§


IMPL<T, RHS, OUTPUT> GROUPOPSOWNED<RHS, OUTPUT> FOR TWHERE
    T: FOR<'R> GROUPOPS<&'R [https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]RHS, OUTPUT>,

§


IMPL<T, RHS, OUTPUT> SCALARMUL<RHS, OUTPUT> FOR TWHERE
    T: MUL [https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.Mul.html]<RHS, OUTPUT = OUTPUT> + MULASSIGN
[https://doc.rust-lang.org/1.67.0/core/ops/arith/trait.MulAssign.html]<RHS>,

§


IMPL<T, RHS, OUTPUT> SCALARMULOWNED<RHS, OUTPUT> FOR TWHERE
    T: FOR<'R> SCALARMUL<&'R [https://doc.rust-lang.org/1.67.0/std/primitive.reference.html]RHS, OUTPUT>,

